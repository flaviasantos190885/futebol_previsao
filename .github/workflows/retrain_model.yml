name: Retrain ML Model and Update Data

on:
  schedule:
    # Opção para rodar a cada 15 minutos (para testes)
    - cron: '*/15 * * * *'
    # Opção para rodar a cada hora (descomente para usar)
    # - cron: '0 * * * *'
    # Opção para rodar uma vez por dia (descomente para usar)
    # - cron: '0 0 * * *'
  workflow_dispatch:
    # Permite rodar o workflow manualmente na aba "Actions" do GitHub

jobs:
  retrain:
    runs-on: ubuntu-latest # Usa um ambiente Linux (Ubuntu) para rodar o script

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        # Permite que o workflow faça push de volta para o repositório
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python Environment
      uses: actions/setup-python@v5
      with:
        python-version: '3.11' # Use a versão do Python que você confirmou ser compatível com PyCaret (3.9, 3.10 ou 3.11)
        cache: 'pip' # Cache as dependências do pip para instalações mais rápidas

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # Instala bibliotecas adicionais que podem ser necessárias para o SQLite no Ubuntu
        sudo apt-get update
        sudo apt-get install -y libsqlite3-dev

    - name: Run Retraining Pipeline
      # Removido o 'working-directory: ./' pois o default já é a raiz do repositório clonado
      # e o caminho do arquivo está sendo repetido.
      run: |
        python retrain_pipeline.py # Executa o script diretamente da raiz do repositório clonado

    - name: Commit and Push Updated Model and Data
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add model/modelo-final.pkl data/futebol_prod.db data/futebol_dw.db data/BRA_brasileirao_final.csv
        git commit -m "Automated ML model retraining and data update [skip ci]" || echo "No changes to commit"
        git push origin main
      # O "|| echo 'No changes to commit'" evita que o workflow falhe se não houver alterações para commitar
      # O "[skip ci]" na mensagem do commit evita que este commit acione outro workflow, criando um loop infinito
