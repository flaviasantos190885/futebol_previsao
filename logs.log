2025-07-07 22:15:05,037:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:15:05,038:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:15:05,038:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:15:05,038:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:15:05,435:INFO:Initializing load_model()
2025-07-07 22:15:05,443:INFO:load_model(model_name=modelo-final, platform=None, authentication=None, verbose=True)
2025-07-07 22:15:54,814:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:15:54,814:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:15:54,815:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:15:54,815:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:17:54,953:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:17:54,953:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:17:54,953:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:17:54,953:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:17:55,294:INFO:Initializing load_model()
2025-07-07 22:17:55,295:INFO:load_model(model_name=modelo-final, platform=None, authentication=None, verbose=True)
2025-07-07 22:19:23,863:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:19:23,863:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:19:23,863:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:19:23,863:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:19:24,170:INFO:Initializing load_model()
2025-07-07 22:19:24,170:INFO:load_model(model_name=model/modelo-final, platform=None, authentication=None, verbose=True)
2025-07-07 22:19:24,351:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-07 22:24:32,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:24:32,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:24:32,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:24:32,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:25:39,635:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:25:39,635:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:25:39,635:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:25:39,635:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:26:21,684:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:26:21,684:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:26:21,684:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:26:21,684:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:26:21,999:INFO:Initializing load_model()
2025-07-07 22:26:21,999:INFO:load_model(model_name=model/modelo-final, platform=None, authentication=None, verbose=True)
2025-07-07 22:26:22,149:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-07 22:26:22,462:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:26:35,996:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:26:48,978:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:26:50,349:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:26:59,611:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:27:02,376:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:27:12,881:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:27:18,964:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:27:28,421:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:27:33,185:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:27:46,676:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:27:48,500:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:27:49,992:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:27:51,308:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:27:54,775:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:28:16,816:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:28:18,241:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:28:33,840:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:28:34,301:INFO:Initializing predict_model()
2025-07-07 22:28:34,301:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C0B892AA50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Ano'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['uf', 'municipio', 'evento',
                                             'arma', 'faixa_etaria', 'Mes'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['evento', 'ar..._etaria',
                                             'Mes'],
                                    transformer=OneHotEncoder(cols=['evento',
                                                                    'arma',
                                                                    'faixa_etaria',
                                                                    'Mes'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['uf', 'municipio'],
                                    transformer=TargetEncoder(cols=['uf',
                                                                    'municipio'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C0B87604A0>)
2025-07-07 22:28:34,301:INFO:Checking exceptions
2025-07-07 22:28:34,301:INFO:Preloading libraries
2025-07-07 22:28:34,301:INFO:Set up data.
2025-07-07 22:28:34,306:INFO:Set up index.
2025-07-07 22:28:44,373:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:28:58,802:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:29:04,750:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:29:07,472:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:29:07,953:INFO:Initializing predict_model()
2025-07-07 22:29:07,953:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C0B88F0890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Ano'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['uf', 'municipio', 'evento',
                                             'arma', 'faixa_etaria', 'Mes'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['evento', 'ar..._etaria',
                                             'Mes'],
                                    transformer=OneHotEncoder(cols=['evento',
                                                                    'arma',
                                                                    'faixa_etaria',
                                                                    'Mes'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['uf', 'municipio'],
                                    transformer=TargetEncoder(cols=['uf',
                                                                    'municipio'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C0B8605B20>)
2025-07-07 22:29:07,954:INFO:Checking exceptions
2025-07-07 22:29:07,954:INFO:Preloading libraries
2025-07-07 22:29:07,954:INFO:Set up data.
2025-07-07 22:29:07,959:INFO:Set up index.
2025-07-07 22:32:57,501:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:32:57,501:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:32:57,501:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:32:57,501:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:32:57,806:INFO:Initializing load_model()
2025-07-07 22:32:57,807:INFO:load_model(model_name=model\modelo-final, platform=None, authentication=None, verbose=True)
2025-07-07 22:32:57,954:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-07 22:32:58,206:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:140: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:33:05,528:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:140: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:33:09,509:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:140: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:33:11,006:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:140: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:33:11,481:INFO:Initializing predict_model()
2025-07-07 22:33:11,482:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001742471F4D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Ano'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['uf', 'municipio', 'evento',
                                             'arma', 'faixa_etaria', 'Mes'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['evento', 'ar..._etaria',
                                             'Mes'],
                                    transformer=OneHotEncoder(cols=['evento',
                                                                    'arma',
                                                                    'faixa_etaria',
                                                                    'Mes'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['uf', 'municipio'],
                                    transformer=TargetEncoder(cols=['uf',
                                                                    'municipio'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000174245EB600>)
2025-07-07 22:33:11,482:INFO:Checking exceptions
2025-07-07 22:33:11,482:INFO:Preloading libraries
2025-07-07 22:33:11,483:INFO:Set up data.
2025-07-07 22:33:11,491:INFO:Set up index.
2025-07-07 22:33:33,810:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:140: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:33:35,560:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:140: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:33:36,012:INFO:Initializing predict_model()
2025-07-07 22:33:36,012:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017424B75750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Ano'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['uf', 'municipio', 'evento',
                                             'arma', 'faixa_etaria', 'Mes'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['evento', 'ar..._etaria',
                                             'Mes'],
                                    transformer=OneHotEncoder(cols=['evento',
                                                                    'arma',
                                                                    'faixa_etaria',
                                                                    'Mes'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['uf', 'municipio'],
                                    transformer=TargetEncoder(cols=['uf',
                                                                    'municipio'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000174247EC4A0>)
2025-07-07 22:33:36,013:INFO:Checking exceptions
2025-07-07 22:33:36,014:INFO:Preloading libraries
2025-07-07 22:33:36,015:INFO:Set up data.
2025-07-07 22:33:36,037:INFO:Set up index.
2025-07-08 22:13:42,275:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:13:42,275:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:13:42,275:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:13:42,275:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:14:42,069:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:14:42,069:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:14:42,069:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:14:42,069:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:15:16,416:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:15:16,416:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:15:16,416:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:15:16,416:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:15:17,503:INFO:Initializing load_model()
2025-07-08 22:15:17,503:INFO:load_model(model_name=model/modelo-final, platform=None, authentication=None, verbose=True)
2025-07-08 22:17:00,083:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:17:00,083:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:17:00,083:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:17:00,083:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:17:52,782:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:17:52,782:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:17:52,782:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:17:52,782:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:17:53,881:INFO:Initializing load_model()
2025-07-08 22:17:53,881:INFO:load_model(model_name=model/modelo-final, platform=None, authentication=None, verbose=True)
2025-07-08 22:19:19,603:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:19:19,604:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:19:19,604:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:19:19,604:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:19:21,539:INFO:Initializing load_model()
2025-07-08 22:19:21,540:INFO:load_model(model_name=model/modelo-final, platform=None, authentication=None, verbose=True)
2025-07-08 22:19:21,839:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\pickle.py:1718: UserWarning: [22:19:21] WARNING: C:\actions-runner\_work\xgboost\xgboost\src\data\../common/error_msg.h:82: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  setstate(state)

2025-07-08 22:19:21,909:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-08 22:28:53,008:INFO:Initializing load_model()
2025-07-08 22:28:53,008:INFO:load_model(model_name=model\modelo-final, platform=None, authentication=None, verbose=True)
2025-07-08 22:28:53,226:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-08 22:33:46,450:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:33:46,450:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:33:46,450:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:33:46,450:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:33:48,812:INFO:Initializing load_model()
2025-07-08 22:33:48,812:INFO:load_model(model_name=model\modelo-final, platform=None, authentication=None, verbose=True)
2025-07-08 22:33:49,056:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\pickle.py:1718: UserWarning: [22:33:49] WARNING: C:\actions-runner\_work\xgboost\xgboost\src\data\../common/error_msg.h:82: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  setstate(state)

2025-07-08 22:33:49,114:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-08 22:47:00,823:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:47:00,823:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:47:00,823:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:47:00,823:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:47:02,765:INFO:Initializing load_model()
2025-07-08 22:47:02,765:INFO:load_model(model_name=model\modelo-final, platform=None, authentication=None, verbose=True)
2025-07-08 22:47:02,979:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\pickle.py:1718: UserWarning: [22:47:02] WARNING: C:\actions-runner\_work\xgboost\xgboost\src\data\../common/error_msg.h:82: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  setstate(state)

2025-07-08 22:47:03,036:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-08 22:51:58,812:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:51:58,812:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:51:58,812:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:51:58,812:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:51:59,946:INFO:Initializing load_model()
2025-07-08 22:51:59,946:INFO:load_model(model_name=model\modelo-final, platform=None, authentication=None, verbose=True)
2025-07-08 22:51:59,996:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-08 22:52:02,204:INFO:Initializing predict_model()
2025-07-08 22:52:02,204:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E53DD0E350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_vis...
                 TransformerWrapper(include=['hora_do_jogo', 'mandante',
                                             'visitante'],
                                    transformer=TargetEncoder(cols=['hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E53DCB07C0>)
2025-07-08 22:52:02,204:INFO:Checking exceptions
2025-07-08 22:52:02,204:INFO:Preloading libraries
2025-07-08 22:52:02,204:INFO:Set up data.
2025-07-08 22:52:02,249:INFO:Set up index.
2025-07-08 22:53:49,690:INFO:Initializing load_model()
2025-07-08 22:53:49,691:INFO:load_model(model_name=model\modelo-final, platform=None, authentication=None, verbose=True)
2025-07-08 22:53:49,714:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-08 22:53:51,156:INFO:Initializing predict_model()
2025-07-08 22:53:51,157:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E53EDFCD90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_vis...
                 TransformerWrapper(include=['hora_do_jogo', 'mandante',
                                             'visitante'],
                                    transformer=TargetEncoder(cols=['hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E53DCB0400>)
2025-07-08 22:53:51,157:INFO:Checking exceptions
2025-07-08 22:53:51,157:INFO:Preloading libraries
2025-07-08 22:53:51,157:INFO:Set up data.
2025-07-08 22:53:51,165:INFO:Set up index.
2025-07-08 22:54:07,839:INFO:Initializing predict_model()
2025-07-08 22:54:07,839:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E53EDCF590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_vis...
                 TransformerWrapper(include=['hora_do_jogo', 'mandante',
                                             'visitante'],
                                    transformer=TargetEncoder(cols=['hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E53DC0E5C0>)
2025-07-08 22:54:07,839:INFO:Checking exceptions
2025-07-08 22:54:07,839:INFO:Preloading libraries
2025-07-08 22:54:07,842:INFO:Set up data.
2025-07-08 22:54:07,860:INFO:Set up index.
2025-07-08 22:54:13,601:INFO:Initializing predict_model()
2025-07-08 22:54:13,601:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E53EE08F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_vis...
                 TransformerWrapper(include=['hora_do_jogo', 'mandante',
                                             'visitante'],
                                    transformer=TargetEncoder(cols=['hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E5079F8540>)
2025-07-08 22:54:13,603:INFO:Checking exceptions
2025-07-08 22:54:13,603:INFO:Preloading libraries
2025-07-08 22:54:13,603:INFO:Set up data.
2025-07-08 22:54:13,610:INFO:Set up index.
2025-07-08 22:54:18,408:INFO:Initializing predict_model()
2025-07-08 22:54:18,408:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E53DC93890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_vis...
                 TransformerWrapper(include=['hora_do_jogo', 'mandante',
                                             'visitante'],
                                    transformer=TargetEncoder(cols=['hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E53DC0E700>)
2025-07-08 22:54:18,408:INFO:Checking exceptions
2025-07-08 22:54:18,408:INFO:Preloading libraries
2025-07-08 22:54:18,409:INFO:Set up data.
2025-07-08 22:54:18,410:INFO:Set up index.
2025-07-08 22:54:41,725:INFO:Initializing predict_model()
2025-07-08 22:54:41,725:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E53EDCFC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_vis...
                 TransformerWrapper(include=['hora_do_jogo', 'mandante',
                                             'visitante'],
                                    transformer=TargetEncoder(cols=['hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E508E2A160>)
2025-07-08 22:54:41,725:INFO:Checking exceptions
2025-07-08 22:54:41,725:INFO:Preloading libraries
2025-07-08 22:54:41,725:INFO:Set up data.
2025-07-08 22:54:41,742:INFO:Set up index.
2025-07-08 23:15:34,644:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:15:34,644:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:15:34,644:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:15:34,644:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:15:36,098:INFO:Initializing load_model()
2025-07-08 23:15:36,098:INFO:load_model(model_name=model\modelo-final, platform=None, authentication=None, verbose=True)
2025-07-08 23:15:36,141:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-08 23:15:37,812:INFO:Initializing predict_model()
2025-07-08 23:15:37,812:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D5A6DEDE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_vis...
                 TransformerWrapper(include=['hora_do_jogo', 'mandante',
                                             'visitante'],
                                    transformer=TargetEncoder(cols=['hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D5A6D23560>)
2025-07-08 23:15:37,812:INFO:Checking exceptions
2025-07-08 23:15:37,812:INFO:Preloading libraries
2025-07-08 23:15:37,812:INFO:Set up data.
2025-07-08 23:15:37,838:INFO:Set up index.
2025-07-08 23:15:51,888:INFO:Initializing predict_model()
2025-07-08 23:15:51,888:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D5A6D96190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_vis...
                 TransformerWrapper(include=['hora_do_jogo', 'mandante',
                                             'visitante'],
                                    transformer=TargetEncoder(cols=['hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D5A7EDF2E0>)
2025-07-08 23:15:51,888:INFO:Checking exceptions
2025-07-08 23:15:51,888:INFO:Preloading libraries
2025-07-08 23:15:51,888:INFO:Set up data.
2025-07-08 23:15:51,904:INFO:Set up index.
2025-07-08 23:15:58,570:INFO:Initializing predict_model()
2025-07-08 23:15:58,570:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D5A6DC82D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_vis...
                 TransformerWrapper(include=['hora_do_jogo', 'mandante',
                                             'visitante'],
                                    transformer=TargetEncoder(cols=['hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D5F1E2A020>)
2025-07-08 23:15:58,570:INFO:Checking exceptions
2025-07-08 23:15:58,570:INFO:Preloading libraries
2025-07-08 23:15:58,570:INFO:Set up data.
2025-07-08 23:15:58,587:INFO:Set up index.
2025-07-08 23:16:12,679:INFO:Initializing predict_model()
2025-07-08 23:16:12,679:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D5A6DC8590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_vis...
                 TransformerWrapper(include=['hora_do_jogo', 'mandante',
                                             'visitante'],
                                    transformer=TargetEncoder(cols=['hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D5F0C68540>)
2025-07-08 23:16:12,679:INFO:Checking exceptions
2025-07-08 23:16:12,679:INFO:Preloading libraries
2025-07-08 23:16:12,679:INFO:Set up data.
2025-07-08 23:16:12,686:INFO:Set up index.
2025-07-08 23:16:16,086:INFO:Initializing predict_model()
2025-07-08 23:16:16,086:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D5A6DCB910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_vis...
                 TransformerWrapper(include=['hora_do_jogo', 'mandante',
                                             'visitante'],
                                    transformer=TargetEncoder(cols=['hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D5A64E6480>)
2025-07-08 23:16:16,086:INFO:Checking exceptions
2025-07-08 23:16:16,086:INFO:Preloading libraries
2025-07-08 23:16:16,086:INFO:Set up data.
2025-07-08 23:16:16,103:INFO:Set up index.
2025-07-08 23:23:18,927:INFO:Initializing predict_model()
2025-07-08 23:23:18,928:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D5A6D91050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_vis...
                 TransformerWrapper(include=['hora_do_jogo', 'mandante',
                                             'visitante'],
                                    transformer=TargetEncoder(cols=['hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D5F1E29EE0>)
2025-07-08 23:23:18,928:INFO:Checking exceptions
2025-07-08 23:23:18,928:INFO:Preloading libraries
2025-07-08 23:23:18,928:INFO:Set up data.
2025-07-08 23:23:18,947:INFO:Set up index.
2025-07-08 23:23:22,779:INFO:Initializing predict_model()
2025-07-08 23:23:22,779:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D5A6E205D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_vis...
                 TransformerWrapper(include=['hora_do_jogo', 'mandante',
                                             'visitante'],
                                    transformer=TargetEncoder(cols=['hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D5A6D22200>)
2025-07-08 23:23:22,779:INFO:Checking exceptions
2025-07-08 23:23:22,779:INFO:Preloading libraries
2025-07-08 23:23:22,779:INFO:Set up data.
2025-07-08 23:23:22,812:INFO:Set up index.
2025-07-08 23:23:44,472:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:23:44,472:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:23:44,472:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:23:44,472:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:23:58,463:INFO:Initializing load_model()
2025-07-08 23:23:58,463:INFO:load_model(model_name=model\modelo-final, platform=None, authentication=None, verbose=True)
2025-07-08 23:23:58,509:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-08 23:23:59,815:INFO:Initializing predict_model()
2025-07-08 23:23:59,816:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F090D77690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                             'mandante', 'visitante'],
                                    transformer=TargetEncoder(cols=['data_do_jogo',
                                                                    'hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F090D784A0>)
2025-07-08 23:23:59,816:INFO:Checking exceptions
2025-07-08 23:23:59,816:INFO:Preloading libraries
2025-07-08 23:23:59,816:INFO:Set up data.
2025-07-08 23:23:59,829:INFO:Set up index.
2025-07-08 23:24:11,412:INFO:Initializing predict_model()
2025-07-08 23:24:11,412:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F090D5C650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                             'mandante', 'visitante'],
                                    transformer=TargetEncoder(cols=['data_do_jogo',
                                                                    'hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F090D79620>)
2025-07-08 23:24:11,412:INFO:Checking exceptions
2025-07-08 23:24:11,412:INFO:Preloading libraries
2025-07-08 23:24:11,412:INFO:Set up data.
2025-07-08 23:24:11,426:INFO:Set up index.
2025-07-08 23:24:14,760:INFO:Initializing predict_model()
2025-07-08 23:24:14,760:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F090D22DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                             'mandante', 'visitante'],
                                    transformer=TargetEncoder(cols=['data_do_jogo',
                                                                    'hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F090C82840>)
2025-07-08 23:24:14,760:INFO:Checking exceptions
2025-07-08 23:24:14,760:INFO:Preloading libraries
2025-07-08 23:24:14,760:INFO:Set up data.
2025-07-08 23:24:14,776:INFO:Set up index.
2025-07-08 23:24:18,343:INFO:Initializing predict_model()
2025-07-08 23:24:18,343:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F090DD1450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                             'mandante', 'visitante'],
                                    transformer=TargetEncoder(cols=['data_do_jogo',
                                                                    'hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F0DBFFA5C0>)
2025-07-08 23:24:18,343:INFO:Checking exceptions
2025-07-08 23:24:18,343:INFO:Preloading libraries
2025-07-08 23:24:18,343:INFO:Set up data.
2025-07-08 23:24:18,368:INFO:Set up index.
2025-07-08 23:24:22,409:INFO:Initializing predict_model()
2025-07-08 23:24:22,409:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F091EC3410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                             'mandante', 'visitante'],
                                    transformer=TargetEncoder(cols=['data_do_jogo',
                                                                    'hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F0DBFFA7A0>)
2025-07-08 23:24:22,409:INFO:Checking exceptions
2025-07-08 23:24:22,409:INFO:Preloading libraries
2025-07-08 23:24:22,409:INFO:Set up data.
2025-07-08 23:24:22,428:INFO:Set up index.
2025-07-08 23:31:15,828:INFO:Initializing load_model()
2025-07-08 23:31:15,829:INFO:load_model(model_name=model\modelo-final, platform=None, authentication=None, verbose=True)
2025-07-08 23:31:15,864:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-08 23:31:17,243:INFO:Initializing predict_model()
2025-07-08 23:31:17,244:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F091F5FBD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                             'mandante', 'visitante'],
                                    transformer=TargetEncoder(cols=['data_do_jogo',
                                                                    'hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 SGDClassifier(eta0=0.001, n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F090C828E0>)
2025-07-08 23:31:17,244:INFO:Checking exceptions
2025-07-08 23:31:17,244:INFO:Preloading libraries
2025-07-08 23:31:17,245:INFO:Set up data.
2025-07-08 23:31:17,253:INFO:Set up index.
2025-07-08 23:31:24,839:INFO:Initializing predict_model()
2025-07-08 23:31:24,849:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F090DB47D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                             'mandante', 'visitante'],
                                    transformer=TargetEncoder(cols=['data_do_jogo',
                                                                    'hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 SGDClassifier(eta0=0.001, n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F090D78CC0>)
2025-07-08 23:31:24,850:INFO:Checking exceptions
2025-07-08 23:31:24,850:INFO:Preloading libraries
2025-07-08 23:31:24,850:INFO:Set up data.
2025-07-08 23:31:24,867:INFO:Set up index.
2025-07-08 23:31:30,451:INFO:Initializing predict_model()
2025-07-08 23:31:30,451:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F090DB7990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                             'mandante', 'visitante'],
                                    transformer=TargetEncoder(cols=['data_do_jogo',
                                                                    'hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 SGDClassifier(eta0=0.001, n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F090C828E0>)
2025-07-08 23:31:30,451:INFO:Checking exceptions
2025-07-08 23:31:30,451:INFO:Preloading libraries
2025-07-08 23:31:30,451:INFO:Set up data.
2025-07-08 23:31:30,451:INFO:Set up index.
2025-07-08 23:31:37,418:INFO:Initializing predict_model()
2025-07-08 23:31:37,418:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F090DD03D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                             'mandante', 'visitante'],
                                    transformer=TargetEncoder(cols=['data_do_jogo',
                                                                    'hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 SGDClassifier(eta0=0.001, n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F090D78B80>)
2025-07-08 23:31:37,418:INFO:Checking exceptions
2025-07-08 23:31:37,418:INFO:Preloading libraries
2025-07-08 23:31:37,418:INFO:Set up data.
2025-07-08 23:31:37,433:INFO:Set up index.
2025-07-08 23:31:45,984:INFO:Initializing predict_model()
2025-07-08 23:31:45,984:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F090CE3D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                             'mandante', 'visitante'],
                                    transformer=TargetEncoder(cols=['data_do_jogo',
                                                                    'hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 SGDClassifier(eta0=0.001, n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F0DC0149A0>)
2025-07-08 23:31:45,984:INFO:Checking exceptions
2025-07-08 23:31:45,984:INFO:Preloading libraries
2025-07-08 23:31:45,984:INFO:Set up data.
2025-07-08 23:31:45,997:INFO:Set up index.
2025-07-08 23:31:53,549:INFO:Initializing predict_model()
2025-07-08 23:31:53,549:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F091EE5950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                             'mandante', 'visitante'],
                                    transformer=TargetEncoder(cols=['data_do_jogo',
                                                                    'hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 SGDClassifier(eta0=0.001, n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F0DBFFA840>)
2025-07-08 23:31:53,549:INFO:Checking exceptions
2025-07-08 23:31:53,549:INFO:Preloading libraries
2025-07-08 23:31:53,549:INFO:Set up data.
2025-07-08 23:31:53,567:INFO:Set up index.
2025-07-08 23:32:00,499:INFO:Initializing predict_model()
2025-07-08 23:32:00,499:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F090D202D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                             'mandante', 'visitante'],
                                    transformer=TargetEncoder(cols=['data_do_jogo',
                                                                    'hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 SGDClassifier(eta0=0.001, n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F090E93BA0>)
2025-07-08 23:32:00,499:INFO:Checking exceptions
2025-07-08 23:32:00,499:INFO:Preloading libraries
2025-07-08 23:32:00,499:INFO:Set up data.
2025-07-08 23:32:00,517:INFO:Set up index.
2025-07-08 23:37:01,297:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:37:01,297:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:37:01,297:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:37:01,297:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:37:02,747:INFO:Initializing load_model()
2025-07-08 23:37:02,747:INFO:load_model(model_name=model\modelo-final, platform=None, authentication=None, verbose=True)
2025-07-08 23:37:02,798:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-08 23:37:04,419:INFO:Initializing predict_model()
2025-07-08 23:37:04,419:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CAF4DF9FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CAF4D4F6A0>)
2025-07-08 23:37:04,419:INFO:Checking exceptions
2025-07-08 23:37:04,420:INFO:Preloading libraries
2025-07-08 23:37:04,421:INFO:Set up data.
2025-07-08 23:37:04,433:INFO:Set up index.
2025-07-08 23:37:08,382:INFO:Initializing predict_model()
2025-07-08 23:37:08,382:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CAF5FD1110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CABEFDA520>)
2025-07-08 23:37:08,382:INFO:Checking exceptions
2025-07-08 23:37:08,382:INFO:Preloading libraries
2025-07-08 23:37:08,382:INFO:Set up data.
2025-07-08 23:37:08,399:INFO:Set up index.
2025-07-08 23:37:10,915:INFO:Initializing predict_model()
2025-07-08 23:37:10,916:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CAF4DBD790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CABD8A1800>)
2025-07-08 23:37:10,916:INFO:Checking exceptions
2025-07-08 23:37:10,916:INFO:Preloading libraries
2025-07-08 23:37:10,916:INFO:Set up data.
2025-07-08 23:37:10,933:INFO:Set up index.
2025-07-08 23:37:13,849:INFO:Initializing predict_model()
2025-07-08 23:37:13,849:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CAF4E20D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CAF5F27C40>)
2025-07-08 23:37:13,849:INFO:Checking exceptions
2025-07-08 23:37:13,849:INFO:Preloading libraries
2025-07-08 23:37:13,849:INFO:Set up data.
2025-07-08 23:37:13,866:INFO:Set up index.
2025-07-08 23:37:17,315:INFO:Initializing predict_model()
2025-07-08 23:37:17,315:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CAF5F3B890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CABEDE8540>)
2025-07-08 23:37:17,315:INFO:Checking exceptions
2025-07-08 23:37:17,315:INFO:Preloading libraries
2025-07-08 23:37:17,315:INFO:Set up data.
2025-07-08 23:37:17,334:INFO:Set up index.
2025-07-08 23:37:57,281:INFO:Initializing predict_model()
2025-07-08 23:37:57,281:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CAF5F5B790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CAC019D9E0>)
2025-07-08 23:37:57,281:INFO:Checking exceptions
2025-07-08 23:37:57,281:INFO:Preloading libraries
2025-07-08 23:37:57,281:INFO:Set up data.
2025-07-08 23:37:57,285:INFO:Set up index.
2025-07-08 23:38:00,163:INFO:Initializing predict_model()
2025-07-08 23:38:00,163:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CAF4E50890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CAF5EA93A0>)
2025-07-08 23:38:00,163:INFO:Checking exceptions
2025-07-08 23:38:00,163:INFO:Preloading libraries
2025-07-08 23:38:00,163:INFO:Set up data.
2025-07-08 23:38:00,180:INFO:Set up index.
2025-07-08 23:38:03,263:INFO:Initializing predict_model()
2025-07-08 23:38:03,263:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CAF5F59250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CAF5F27BA0>)
2025-07-08 23:38:03,263:INFO:Checking exceptions
2025-07-08 23:38:03,263:INFO:Preloading libraries
2025-07-08 23:38:03,263:INFO:Set up data.
2025-07-08 23:38:03,279:INFO:Set up index.
2025-07-08 23:44:05,503:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:44:05,506:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:44:05,506:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:44:05,506:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:47:21,526:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:47:21,526:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:47:21,526:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:47:21,526:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:56:29,169:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:56:29,169:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:56:29,169:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:56:29,171:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:56:32,134:INFO:Initializing load_model()
2025-07-08 23:56:32,134:INFO:load_model(model_name=model\modelo-final, platform=None, authentication=None, verbose=True)
2025-07-08 23:56:32,330:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-08 23:56:43,531:INFO:Initializing predict_model()
2025-07-08 23:56:43,532:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B880913D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transf...
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B880A04F40>)
2025-07-08 23:56:43,532:INFO:Checking exceptions
2025-07-08 23:56:43,532:INFO:Preloading libraries
2025-07-08 23:56:43,532:INFO:Set up data.
2025-07-08 23:56:43,548:INFO:Set up index.
2025-07-08 23:56:49,981:INFO:Initializing predict_model()
2025-07-08 23:56:49,981:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B881AC1E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transf...
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B880A04E00>)
2025-07-08 23:56:49,981:INFO:Checking exceptions
2025-07-08 23:56:49,981:INFO:Preloading libraries
2025-07-08 23:56:49,981:INFO:Set up data.
2025-07-08 23:56:49,998:INFO:Set up index.
2025-07-08 23:57:18,215:INFO:Initializing predict_model()
2025-07-08 23:57:18,215:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B8808F3790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transf...
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B880A06160>)
2025-07-08 23:57:18,230:INFO:Checking exceptions
2025-07-08 23:57:18,230:INFO:Preloading libraries
2025-07-08 23:57:18,230:INFO:Set up data.
2025-07-08 23:57:18,251:INFO:Set up index.
2025-07-08 23:57:27,048:INFO:Initializing predict_model()
2025-07-08 23:57:27,048:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B881ACB4D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transf...
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B8FFFAD4E0>)
2025-07-08 23:57:27,048:INFO:Checking exceptions
2025-07-08 23:57:27,048:INFO:Preloading libraries
2025-07-08 23:57:27,048:INFO:Set up data.
2025-07-08 23:57:27,063:INFO:Set up index.
2025-07-08 23:57:51,013:INFO:Initializing predict_model()
2025-07-08 23:57:51,013:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B880635F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transf...
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B880A07D80>)
2025-07-08 23:57:51,013:INFO:Checking exceptions
2025-07-08 23:57:51,013:INFO:Preloading libraries
2025-07-08 23:57:51,027:INFO:Set up data.
2025-07-08 23:57:51,044:INFO:Set up index.
2025-07-08 23:57:54,111:INFO:Initializing predict_model()
2025-07-08 23:57:54,111:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B880940B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transf...
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B880A06CA0>)
2025-07-08 23:57:54,111:INFO:Checking exceptions
2025-07-08 23:57:54,111:INFO:Preloading libraries
2025-07-08 23:57:54,111:INFO:Set up data.
2025-07-08 23:57:54,138:INFO:Set up index.
2025-07-08 23:57:57,131:INFO:Initializing predict_model()
2025-07-08 23:57:57,133:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B880934D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transf...
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B880A05DA0>)
2025-07-08 23:57:57,144:INFO:Checking exceptions
2025-07-08 23:57:57,144:INFO:Preloading libraries
2025-07-08 23:57:57,144:INFO:Set up data.
2025-07-08 23:57:57,165:INFO:Set up index.
2025-07-08 23:58:00,510:INFO:Initializing predict_model()
2025-07-08 23:58:00,510:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B880920450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transf...
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B8E4842D40>)
2025-07-08 23:58:00,510:INFO:Checking exceptions
2025-07-08 23:58:00,510:INFO:Preloading libraries
2025-07-08 23:58:00,510:INFO:Set up data.
2025-07-08 23:58:00,530:INFO:Set up index.
2025-07-09 00:12:45,132:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 00:12:45,132:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 00:12:45,132:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 00:12:45,132:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 00:12:48,410:INFO:Initializing load_model()
2025-07-09 00:12:48,410:INFO:load_model(model_name=model\modelo-final, platform=None, authentication=None, verbose=True)
2025-07-09 00:12:48,764:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-09 00:12:51,293:INFO:Initializing predict_model()
2025-07-09 00:12:51,293:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FF6CAC3850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tra...
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_estimators=300, n_jobs=-1,
                                        random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FF6CBE44A0>)
2025-07-09 00:12:51,293:INFO:Checking exceptions
2025-07-09 00:12:51,293:INFO:Preloading libraries
2025-07-09 00:12:51,293:INFO:Set up data.
2025-07-09 00:12:51,307:INFO:Set up index.
2025-07-09 00:12:57,029:INFO:Initializing predict_model()
2025-07-09 00:12:57,029:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FF6CADD350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tra...
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_estimators=300, n_jobs=-1,
                                        random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FF6CBE7560>)
2025-07-09 00:12:57,029:INFO:Checking exceptions
2025-07-09 00:12:57,029:INFO:Preloading libraries
2025-07-09 00:12:57,029:INFO:Set up data.
2025-07-09 00:12:57,052:INFO:Set up index.
2025-07-09 00:13:00,673:INFO:Initializing predict_model()
2025-07-09 00:13:00,673:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FF6CADC990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tra...
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_estimators=300, n_jobs=-1,
                                        random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FF6C879760>)
2025-07-09 00:13:00,673:INFO:Checking exceptions
2025-07-09 00:13:00,673:INFO:Preloading libraries
2025-07-09 00:13:00,673:INFO:Set up data.
2025-07-09 00:13:00,691:INFO:Set up index.
2025-07-09 00:13:04,442:INFO:Initializing predict_model()
2025-07-09 00:13:04,442:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FF6CA4C390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tra...
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_estimators=300, n_jobs=-1,
                                        random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FF508DED40>)
2025-07-09 00:13:04,442:INFO:Checking exceptions
2025-07-09 00:13:04,442:INFO:Preloading libraries
2025-07-09 00:13:04,442:INFO:Set up data.
2025-07-09 00:13:04,465:INFO:Set up index.
2025-07-09 00:13:08,478:INFO:Initializing predict_model()
2025-07-09 00:13:08,478:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FF6CA1ED50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tra...
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_estimators=300, n_jobs=-1,
                                        random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FF6CBE56C0>)
2025-07-09 00:13:08,478:INFO:Checking exceptions
2025-07-09 00:13:08,478:INFO:Preloading libraries
2025-07-09 00:13:08,478:INFO:Set up data.
2025-07-09 00:13:08,495:INFO:Set up index.
2025-07-09 00:13:46,384:INFO:Initializing predict_model()
2025-07-09 00:13:46,384:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FF6C9F3D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tra...
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_estimators=300, n_jobs=-1,
                                        random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FF6CBE7F60>)
2025-07-09 00:13:46,384:INFO:Checking exceptions
2025-07-09 00:13:46,384:INFO:Preloading libraries
2025-07-09 00:13:46,384:INFO:Set up data.
2025-07-09 00:13:46,407:INFO:Set up index.
2025-07-09 00:13:50,388:INFO:Initializing predict_model()
2025-07-09 00:13:50,388:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FF6C97A150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tra...
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_estimators=300, n_jobs=-1,
                                        random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FF6C8794E0>)
2025-07-09 00:13:50,388:INFO:Checking exceptions
2025-07-09 00:13:50,388:INFO:Preloading libraries
2025-07-09 00:13:50,388:INFO:Set up data.
2025-07-09 00:13:50,408:INFO:Set up index.
2025-07-09 00:13:54,977:INFO:Initializing predict_model()
2025-07-09 00:13:54,977:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FF6C8F5710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tra...
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_estimators=300, n_jobs=-1,
                                        random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FF6CBE7740>)
2025-07-09 00:13:54,977:INFO:Checking exceptions
2025-07-09 00:13:54,977:INFO:Preloading libraries
2025-07-09 00:13:54,979:INFO:Set up data.
2025-07-09 00:13:54,990:INFO:Set up index.
2025-07-09 00:23:53,756:INFO:Initializing predict_model()
2025-07-09 00:23:53,756:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FF6CADFB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tra...
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_estimators=300, n_jobs=-1,
                                        random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FF6CB99D00>)
2025-07-09 00:23:53,756:INFO:Checking exceptions
2025-07-09 00:23:53,756:INFO:Preloading libraries
2025-07-09 00:23:53,764:INFO:Set up data.
2025-07-09 00:23:53,764:INFO:Set up index.
2025-07-09 00:23:56,757:INFO:Initializing predict_model()
2025-07-09 00:23:56,758:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FF6CA96810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tra...
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_estimators=300, n_jobs=-1,
                                        random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FF6CBE74C0>)
2025-07-09 00:23:56,758:INFO:Checking exceptions
2025-07-09 00:23:56,758:INFO:Preloading libraries
2025-07-09 00:23:56,758:INFO:Set up data.
2025-07-09 00:23:56,773:INFO:Set up index.
2025-07-09 00:24:00,646:INFO:Initializing predict_model()
2025-07-09 00:24:00,646:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FF6C9F0B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tra...
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_estimators=300, n_jobs=-1,
                                        random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FF6C04D4E0>)
2025-07-09 00:24:00,646:INFO:Checking exceptions
2025-07-09 00:24:00,646:INFO:Preloading libraries
2025-07-09 00:24:00,646:INFO:Set up data.
2025-07-09 00:24:00,670:INFO:Set up index.
2025-07-09 00:24:04,796:INFO:Initializing predict_model()
2025-07-09 00:24:04,796:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FF6CAEAE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tra...
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_estimators=300, n_jobs=-1,
                                        random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FF6CBE60C0>)
2025-07-09 00:24:04,796:INFO:Checking exceptions
2025-07-09 00:24:04,796:INFO:Preloading libraries
2025-07-09 00:24:04,799:INFO:Set up data.
2025-07-09 00:24:04,814:INFO:Set up index.
2025-07-09 00:24:08,889:INFO:Initializing predict_model()
2025-07-09 00:24:08,889:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FF6C992150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tra...
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_estimators=300, n_jobs=-1,
                                        random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FF6C04D4E0>)
2025-07-09 00:24:08,889:INFO:Checking exceptions
2025-07-09 00:24:08,889:INFO:Preloading libraries
2025-07-09 00:24:08,889:INFO:Set up data.
2025-07-09 00:24:08,910:INFO:Set up index.
2025-07-09 00:58:04,778:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 00:58:04,778:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 00:58:04,778:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 00:58:04,778:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 01:03:09,451:INFO:Initializing load_model()
2025-07-09 01:03:09,451:INFO:load_model(model_name=model/modelo-final, platform=None, authentication=None, verbose=True)
2025-07-09 01:03:09,541:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-09 01:04:17,718:INFO:Initializing predict_model()
2025-07-09 01:04:17,718:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C8461B4C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C8111E9940>)
2025-07-09 01:04:17,721:INFO:Checking exceptions
2025-07-09 01:04:17,721:INFO:Preloading libraries
2025-07-09 01:04:17,722:INFO:Set up data.
2025-07-09 01:04:17,760:INFO:Set up index.
2025-07-09 01:04:32,105:INFO:Initializing predict_model()
2025-07-09 01:04:32,105:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C845DF9710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C845E051C0>)
2025-07-09 01:04:32,105:INFO:Checking exceptions
2025-07-09 01:04:32,105:INFO:Preloading libraries
2025-07-09 01:04:32,106:INFO:Set up data.
2025-07-09 01:04:32,140:INFO:Set up index.
2025-07-09 01:04:49,420:INFO:Initializing predict_model()
2025-07-09 01:04:49,420:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C845E5B2D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C8111E98A0>)
2025-07-09 01:04:49,420:INFO:Checking exceptions
2025-07-09 01:04:49,420:INFO:Preloading libraries
2025-07-09 01:04:49,420:INFO:Set up data.
2025-07-09 01:04:49,458:INFO:Set up index.
2025-07-09 01:04:56,335:INFO:Initializing predict_model()
2025-07-09 01:04:56,335:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C845DFA650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C845509300>)
2025-07-09 01:04:56,335:INFO:Checking exceptions
2025-07-09 01:04:56,335:INFO:Preloading libraries
2025-07-09 01:04:56,336:INFO:Set up data.
2025-07-09 01:04:56,353:INFO:Set up index.
2025-07-09 09:28:14,909:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 09:28:14,910:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 09:28:14,910:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 09:28:14,910:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 09:28:19,321:INFO:Initializing load_model()
2025-07-09 09:28:19,321:INFO:load_model(model_name=model/modelo-final, platform=None, authentication=None, verbose=True)
2025-07-09 09:28:19,507:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-09 09:28:27,122:INFO:Initializing predict_model()
2025-07-09 09:28:27,122:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000273494D4310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000273328E5F80>)
2025-07-09 09:28:27,122:INFO:Checking exceptions
2025-07-09 09:28:27,122:INFO:Preloading libraries
2025-07-09 09:28:27,123:INFO:Set up data.
2025-07-09 09:28:27,180:INFO:Set up index.
2025-07-09 09:28:36,767:INFO:Initializing predict_model()
2025-07-09 09:28:36,767:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027348EA8750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000273328E7A60>)
2025-07-09 09:28:36,767:INFO:Checking exceptions
2025-07-09 09:28:36,768:INFO:Preloading libraries
2025-07-09 09:28:36,768:INFO:Set up data.
2025-07-09 09:28:36,820:INFO:Set up index.
2025-07-09 09:29:01,940:INFO:Initializing predict_model()
2025-07-09 09:29:01,941:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027348FC6FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000273488AE980>)
2025-07-09 09:29:01,941:INFO:Checking exceptions
2025-07-09 09:29:01,941:INFO:Preloading libraries
2025-07-09 09:29:01,941:INFO:Set up data.
2025-07-09 09:29:01,969:INFO:Set up index.
2025-07-09 09:29:12,477:INFO:Initializing predict_model()
2025-07-09 09:29:12,477:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027348FA3450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027348873420>)
2025-07-09 09:29:12,477:INFO:Checking exceptions
2025-07-09 09:29:12,477:INFO:Preloading libraries
2025-07-09 09:29:12,477:INFO:Set up data.
2025-07-09 09:29:12,508:INFO:Set up index.
2025-07-09 09:29:57,311:INFO:Initializing predict_model()
2025-07-09 09:29:57,311:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027348FA3290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000273328E5F80>)
2025-07-09 09:29:57,311:INFO:Checking exceptions
2025-07-09 09:29:57,311:INFO:Preloading libraries
2025-07-09 09:29:57,311:INFO:Set up data.
2025-07-09 09:29:57,334:INFO:Set up index.
2025-07-09 09:35:42,656:INFO:Initializing load_model()
2025-07-09 09:35:42,656:INFO:load_model(model_name=model\modelo-final, platform=None, authentication=None, verbose=True)
2025-07-09 09:35:42,772:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-09 09:35:56,493:INFO:Initializing predict_model()
2025-07-09 09:35:56,493:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027349013410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002734865E0C0>)
2025-07-09 09:35:56,493:INFO:Checking exceptions
2025-07-09 09:35:56,493:INFO:Preloading libraries
2025-07-09 09:35:56,493:INFO:Set up data.
2025-07-09 09:35:56,513:INFO:Set up index.
2025-07-09 09:36:16,639:INFO:Initializing predict_model()
2025-07-09 09:36:16,639:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027348FC6E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027348485260>)
2025-07-09 09:36:16,639:INFO:Checking exceptions
2025-07-09 09:36:16,639:INFO:Preloading libraries
2025-07-09 09:36:16,640:INFO:Set up data.
2025-07-09 09:36:16,665:INFO:Set up index.
2025-07-09 09:36:22,471:INFO:Initializing predict_model()
2025-07-09 09:36:22,471:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000273495A2E90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002733065C0E0>)
2025-07-09 09:36:22,471:INFO:Checking exceptions
2025-07-09 09:36:22,471:INFO:Preloading libraries
2025-07-09 09:36:22,471:INFO:Set up data.
2025-07-09 09:36:22,489:INFO:Set up index.
2025-07-09 09:36:39,745:INFO:Initializing predict_model()
2025-07-09 09:36:39,746:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027348722310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027348793420>)
2025-07-09 09:36:39,746:INFO:Checking exceptions
2025-07-09 09:36:39,746:INFO:Preloading libraries
2025-07-09 09:36:39,746:INFO:Set up data.
2025-07-09 09:36:39,764:INFO:Set up index.
2025-07-09 09:36:45,782:INFO:Initializing predict_model()
2025-07-09 09:36:45,783:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002734960CF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000273487B22A0>)
2025-07-09 09:36:45,783:INFO:Checking exceptions
2025-07-09 09:36:45,783:INFO:Preloading libraries
2025-07-09 09:36:45,783:INFO:Set up data.
2025-07-09 09:36:45,803:INFO:Set up index.
2025-07-09 10:07:51,907:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 10:07:51,907:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 10:07:51,907:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 10:07:51,907:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 10:11:37,966:INFO:Initializing load_model()
2025-07-09 10:11:37,967:INFO:load_model(model_name=model\modelo_brasileirao, platform=None, authentication=None, verbose=True)
2025-07-09 10:11:38,148:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-09 10:15:36,717:INFO:Initializing predict_model()
2025-07-09 10:15:36,717:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019AC3394A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(bagging_fraction=0.8, bagging_freq=3,
                                feature_fraction=1.0, learning_rate=0.5,
                                min_child_samples=100, min_split_gain=0.3,
                                n_estimators=190, n_jobs=-1, num_leaves=10,
                                random_state=42, reg_alpha=0.1,
                                reg_lambda=0.05))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000019AC3129E40>)
2025-07-09 10:15:36,717:INFO:Checking exceptions
2025-07-09 10:15:36,717:INFO:Preloading libraries
2025-07-09 10:15:36,718:INFO:Set up data.
2025-07-09 10:15:36,750:INFO:Set up index.
2025-07-09 10:15:56,799:INFO:Initializing predict_model()
2025-07-09 10:15:56,799:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019AC318B4D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(bagging_fraction=0.8, bagging_freq=3,
                                feature_fraction=1.0, learning_rate=0.5,
                                min_child_samples=100, min_split_gain=0.3,
                                n_estimators=190, n_jobs=-1, num_leaves=10,
                                random_state=42, reg_alpha=0.1,
                                reg_lambda=0.05))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000019AC3129620>)
2025-07-09 10:15:56,799:INFO:Checking exceptions
2025-07-09 10:15:56,799:INFO:Preloading libraries
2025-07-09 10:15:56,800:INFO:Set up data.
2025-07-09 10:15:56,826:INFO:Set up index.
2025-07-09 10:16:09,593:INFO:Initializing predict_model()
2025-07-09 10:16:09,593:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019AC34098D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(bagging_fraction=0.8, bagging_freq=3,
                                feature_fraction=1.0, learning_rate=0.5,
                                min_child_samples=100, min_split_gain=0.3,
                                n_estimators=190, n_jobs=-1, num_leaves=10,
                                random_state=42, reg_alpha=0.1,
                                reg_lambda=0.05))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000019AC3128EA0>)
2025-07-09 10:16:09,593:INFO:Checking exceptions
2025-07-09 10:16:09,593:INFO:Preloading libraries
2025-07-09 10:16:09,594:INFO:Set up data.
2025-07-09 10:16:09,613:INFO:Set up index.
2025-07-09 10:59:03,831:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 10:59:03,832:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 10:59:03,832:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 10:59:03,832:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 10:59:09,048:INFO:Initializing load_model()
2025-07-09 10:59:09,048:INFO:load_model(model_name=modelo-final, platform=None, authentication=None, verbose=True)
2025-07-09 10:59:37,945:INFO:Initializing load_model()
2025-07-09 10:59:37,945:INFO:load_model(model_name=model/modelo-final, platform=None, authentication=None, verbose=True)
2025-07-09 10:59:38,160:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-09 11:09:32,097:INFO:Initializing load_model()
2025-07-09 11:09:32,098:INFO:load_model(model_name=model\modelo-final, platform=None, authentication=None, verbose=True)
2025-07-09 11:09:32,203:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-09 11:10:13,034:INFO:Initializing predict_model()
2025-07-09 11:10:13,035:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B136B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B59A0FD80>)
2025-07-09 11:10:13,035:INFO:Checking exceptions
2025-07-09 11:10:13,035:INFO:Preloading libraries
2025-07-09 11:10:13,036:INFO:Set up data.
2025-07-09 11:10:13,088:INFO:Set up index.
2025-07-09 11:10:20,121:INFO:Initializing predict_model()
2025-07-09 11:10:20,121:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B712D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B44EC5580>)
2025-07-09 11:10:20,121:INFO:Checking exceptions
2025-07-09 11:10:20,121:INFO:Preloading libraries
2025-07-09 11:10:20,122:INFO:Set up data.
2025-07-09 11:10:20,151:INFO:Set up index.
2025-07-09 11:10:28,421:INFO:Initializing predict_model()
2025-07-09 11:10:28,422:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B156C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B4258BB00>)
2025-07-09 11:10:28,422:INFO:Checking exceptions
2025-07-09 11:10:28,422:INFO:Preloading libraries
2025-07-09 11:10:28,423:INFO:Set up data.
2025-07-09 11:10:28,439:INFO:Set up index.
2025-07-09 11:11:23,032:INFO:Initializing predict_model()
2025-07-09 11:11:23,032:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B6B1750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B5B0BACA0>)
2025-07-09 11:11:23,032:INFO:Checking exceptions
2025-07-09 11:11:23,032:INFO:Preloading libraries
2025-07-09 11:11:23,033:INFO:Set up data.
2025-07-09 11:11:23,053:INFO:Set up index.
2025-07-09 11:11:32,718:INFO:Initializing predict_model()
2025-07-09 11:11:32,718:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B04ED50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B5AE6BCE0>)
2025-07-09 11:11:32,718:INFO:Checking exceptions
2025-07-09 11:11:32,719:INFO:Preloading libraries
2025-07-09 11:11:32,719:INFO:Set up data.
2025-07-09 11:11:32,738:INFO:Set up index.
2025-07-09 11:16:04,814:INFO:Initializing predict_model()
2025-07-09 11:16:04,814:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B68CB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B5AE6A0C0>)
2025-07-09 11:16:04,815:INFO:Checking exceptions
2025-07-09 11:16:04,815:INFO:Preloading libraries
2025-07-09 11:16:04,816:INFO:Set up data.
2025-07-09 11:16:04,840:INFO:Set up index.
2025-07-09 11:16:51,327:INFO:Initializing predict_model()
2025-07-09 11:16:51,328:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B723BD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B4DB47D80>)
2025-07-09 11:16:51,328:INFO:Checking exceptions
2025-07-09 11:16:51,328:INFO:Preloading libraries
2025-07-09 11:16:51,328:INFO:Set up data.
2025-07-09 11:16:51,343:INFO:Set up index.
2025-07-09 11:18:17,492:INFO:Initializing predict_model()
2025-07-09 11:18:17,492:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B0871D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B44EC58A0>)
2025-07-09 11:18:17,493:INFO:Checking exceptions
2025-07-09 11:18:17,493:INFO:Preloading libraries
2025-07-09 11:18:17,493:INFO:Set up data.
2025-07-09 11:18:17,509:INFO:Set up index.
2025-07-09 11:42:46,256:INFO:Initializing predict_model()
2025-07-09 11:42:46,258:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B6E0D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B419D3F60>)
2025-07-09 11:42:46,258:INFO:Checking exceptions
2025-07-09 11:42:46,258:INFO:Preloading libraries
2025-07-09 11:42:46,258:INFO:Set up data.
2025-07-09 11:42:46,276:INFO:Set up index.
2025-07-09 11:47:49,669:INFO:Initializing predict_model()
2025-07-09 11:47:49,669:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B124FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B419DC0E0>)
2025-07-09 11:47:49,669:INFO:Checking exceptions
2025-07-09 11:47:49,670:INFO:Preloading libraries
2025-07-09 11:47:49,670:INFO:Set up data.
2025-07-09 11:47:49,701:INFO:Set up index.
2025-07-09 11:47:54,588:INFO:Initializing predict_model()
2025-07-09 11:47:54,588:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B649650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B44EC5440>)
2025-07-09 11:47:54,589:INFO:Checking exceptions
2025-07-09 11:47:54,589:INFO:Preloading libraries
2025-07-09 11:47:54,589:INFO:Set up data.
2025-07-09 11:47:54,615:INFO:Set up index.
2025-07-09 11:48:26,384:INFO:Initializing predict_model()
2025-07-09 11:48:26,384:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B67C650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B5B0BB420>)
2025-07-09 11:48:26,384:INFO:Checking exceptions
2025-07-09 11:48:26,385:INFO:Preloading libraries
2025-07-09 11:48:26,385:INFO:Set up data.
2025-07-09 11:48:26,405:INFO:Set up index.
2025-07-09 11:50:08,372:INFO:Initializing predict_model()
2025-07-09 11:50:08,372:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B7E0FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B59A0F740>)
2025-07-09 11:50:08,372:INFO:Checking exceptions
2025-07-09 11:50:08,372:INFO:Preloading libraries
2025-07-09 11:50:08,373:INFO:Set up data.
2025-07-09 11:50:08,400:INFO:Set up index.
2025-07-09 11:50:13,369:INFO:Initializing predict_model()
2025-07-09 11:50:13,369:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5AFDCA50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B59A0F740>)
2025-07-09 11:50:13,369:INFO:Checking exceptions
2025-07-09 11:50:13,369:INFO:Preloading libraries
2025-07-09 11:50:13,370:INFO:Set up data.
2025-07-09 11:50:13,398:INFO:Set up index.
2025-07-09 11:52:58,147:INFO:Initializing predict_model()
2025-07-09 11:52:58,147:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B65A050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B5B06A980>)
2025-07-09 11:52:58,147:INFO:Checking exceptions
2025-07-09 11:52:58,147:INFO:Preloading libraries
2025-07-09 11:52:58,148:INFO:Set up data.
2025-07-09 11:52:58,167:INFO:Set up index.
2025-07-09 11:53:29,977:INFO:Initializing predict_model()
2025-07-09 11:53:29,977:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B659910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B5B0680E0>)
2025-07-09 11:53:29,979:INFO:Checking exceptions
2025-07-09 11:53:29,979:INFO:Preloading libraries
2025-07-09 11:53:29,981:INFO:Set up data.
2025-07-09 11:53:30,001:INFO:Set up index.
2025-07-09 11:53:39,332:INFO:Initializing predict_model()
2025-07-09 11:53:39,332:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5AFEDE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B5B068B80>)
2025-07-09 11:53:39,332:INFO:Checking exceptions
2025-07-09 11:53:39,332:INFO:Preloading libraries
2025-07-09 11:53:39,332:INFO:Set up data.
2025-07-09 11:53:39,345:INFO:Set up index.
2025-07-09 11:53:44,380:INFO:Initializing predict_model()
2025-07-09 11:53:44,380:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B6D16D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B419DC0E0>)
2025-07-09 11:53:44,380:INFO:Checking exceptions
2025-07-09 11:53:44,380:INFO:Preloading libraries
2025-07-09 11:53:44,381:INFO:Set up data.
2025-07-09 11:53:44,401:INFO:Set up index.
2025-07-09 12:38:15,082:INFO:Initializing predict_model()
2025-07-09 12:38:15,085:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B645A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B5B0B9DA0>)
2025-07-09 12:38:15,085:INFO:Checking exceptions
2025-07-09 12:38:15,085:INFO:Preloading libraries
2025-07-09 12:38:15,086:INFO:Set up data.
2025-07-09 12:38:15,129:INFO:Set up index.
2025-07-09 12:39:35,495:INFO:Initializing predict_model()
2025-07-09 12:39:35,496:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B6AEFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B5B0B9800>)
2025-07-09 12:39:35,496:INFO:Checking exceptions
2025-07-09 12:39:35,497:INFO:Preloading libraries
2025-07-09 12:39:35,497:INFO:Set up data.
2025-07-09 12:39:35,518:INFO:Set up index.
2025-07-09 12:41:38,377:INFO:Initializing predict_model()
2025-07-09 12:41:38,377:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B1161D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B5B0BB880>)
2025-07-09 12:41:38,377:INFO:Checking exceptions
2025-07-09 12:41:38,378:INFO:Preloading libraries
2025-07-09 12:41:38,378:INFO:Set up data.
2025-07-09 12:41:38,398:INFO:Set up index.
2025-07-09 12:43:05,053:INFO:Initializing predict_model()
2025-07-09 12:43:05,053:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B0F8C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B59A0D1C0>)
2025-07-09 12:43:05,053:INFO:Checking exceptions
2025-07-09 12:43:05,053:INFO:Preloading libraries
2025-07-09 12:43:05,053:INFO:Set up data.
2025-07-09 12:43:05,072:INFO:Set up index.
2025-07-09 12:44:49,144:INFO:Initializing predict_model()
2025-07-09 12:44:49,144:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B65A6D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B5B0BAFC0>)
2025-07-09 12:44:49,144:INFO:Checking exceptions
2025-07-09 12:44:49,144:INFO:Preloading libraries
2025-07-09 12:44:49,146:INFO:Set up data.
2025-07-09 12:44:49,167:INFO:Set up index.
2025-07-09 12:45:08,652:INFO:Initializing predict_model()
2025-07-09 12:45:08,653:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B7F0A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B4258BB00>)
2025-07-09 12:45:08,654:INFO:Checking exceptions
2025-07-09 12:45:08,655:INFO:Preloading libraries
2025-07-09 12:45:08,658:INFO:Set up data.
2025-07-09 12:45:08,692:INFO:Set up index.
2025-07-09 12:45:14,037:INFO:Initializing predict_model()
2025-07-09 12:45:14,037:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B713590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B44EC51C0>)
2025-07-09 12:45:14,038:INFO:Checking exceptions
2025-07-09 12:45:14,038:INFO:Preloading libraries
2025-07-09 12:45:14,038:INFO:Set up data.
2025-07-09 12:45:14,058:INFO:Set up index.
