2025-07-07 22:15:05,037:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:15:05,038:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:15:05,038:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:15:05,038:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:15:05,435:INFO:Initializing load_model()
2025-07-07 22:15:05,443:INFO:load_model(model_name=modelo-final, platform=None, authentication=None, verbose=True)
2025-07-07 22:15:54,814:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:15:54,814:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:15:54,815:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:15:54,815:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:17:54,953:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:17:54,953:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:17:54,953:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:17:54,953:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:17:55,294:INFO:Initializing load_model()
2025-07-07 22:17:55,295:INFO:load_model(model_name=modelo-final, platform=None, authentication=None, verbose=True)
2025-07-07 22:19:23,863:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:19:23,863:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:19:23,863:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:19:23,863:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:19:24,170:INFO:Initializing load_model()
2025-07-07 22:19:24,170:INFO:load_model(model_name=model/modelo-final, platform=None, authentication=None, verbose=True)
2025-07-07 22:19:24,351:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-07 22:24:32,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:24:32,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:24:32,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:24:32,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:25:39,635:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:25:39,635:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:25:39,635:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:25:39,635:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:26:21,684:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:26:21,684:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:26:21,684:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:26:21,684:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:26:21,999:INFO:Initializing load_model()
2025-07-07 22:26:21,999:INFO:load_model(model_name=model/modelo-final, platform=None, authentication=None, verbose=True)
2025-07-07 22:26:22,149:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-07 22:26:22,462:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:26:35,996:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:26:48,978:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:26:50,349:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:26:59,611:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:27:02,376:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:27:12,881:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:27:18,964:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:27:28,421:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:27:33,185:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:27:46,676:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:27:48,500:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:27:49,992:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:27:51,308:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:27:54,775:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:28:16,816:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:28:18,241:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:28:33,840:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:28:34,301:INFO:Initializing predict_model()
2025-07-07 22:28:34,301:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C0B892AA50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Ano'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['uf', 'municipio', 'evento',
                                             'arma', 'faixa_etaria', 'Mes'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['evento', 'ar..._etaria',
                                             'Mes'],
                                    transformer=OneHotEncoder(cols=['evento',
                                                                    'arma',
                                                                    'faixa_etaria',
                                                                    'Mes'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['uf', 'municipio'],
                                    transformer=TargetEncoder(cols=['uf',
                                                                    'municipio'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C0B87604A0>)
2025-07-07 22:28:34,301:INFO:Checking exceptions
2025-07-07 22:28:34,301:INFO:Preloading libraries
2025-07-07 22:28:34,301:INFO:Set up data.
2025-07-07 22:28:34,306:INFO:Set up index.
2025-07-07 22:28:44,373:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:28:58,802:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:29:04,750:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:29:07,472:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:129: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:29:07,953:INFO:Initializing predict_model()
2025-07-07 22:29:07,953:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001C0B88F0890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Ano'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['uf', 'municipio', 'evento',
                                             'arma', 'faixa_etaria', 'Mes'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['evento', 'ar..._etaria',
                                             'Mes'],
                                    transformer=OneHotEncoder(cols=['evento',
                                                                    'arma',
                                                                    'faixa_etaria',
                                                                    'Mes'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['uf', 'municipio'],
                                    transformer=TargetEncoder(cols=['uf',
                                                                    'municipio'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C0B8605B20>)
2025-07-07 22:29:07,954:INFO:Checking exceptions
2025-07-07 22:29:07,954:INFO:Preloading libraries
2025-07-07 22:29:07,954:INFO:Set up data.
2025-07-07 22:29:07,959:INFO:Set up index.
2025-07-07 22:32:57,501:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:32:57,501:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:32:57,501:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:32:57,501:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-07 22:32:57,806:INFO:Initializing load_model()
2025-07-07 22:32:57,807:INFO:load_model(model_name=model\modelo-final, platform=None, authentication=None, verbose=True)
2025-07-07 22:32:57,954:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-07 22:32:58,206:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:140: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:33:05,528:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:140: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:33:09,509:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:140: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:33:11,006:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:140: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:33:11,481:INFO:Initializing predict_model()
2025-07-07 22:33:11,482:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001742471F4D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Ano'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['uf', 'municipio', 'evento',
                                             'arma', 'faixa_etaria', 'Mes'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['evento', 'ar..._etaria',
                                             'Mes'],
                                    transformer=OneHotEncoder(cols=['evento',
                                                                    'arma',
                                                                    'faixa_etaria',
                                                                    'Mes'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['uf', 'municipio'],
                                    transformer=TargetEncoder(cols=['uf',
                                                                    'municipio'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000174245EB600>)
2025-07-07 22:33:11,482:INFO:Checking exceptions
2025-07-07 22:33:11,482:INFO:Preloading libraries
2025-07-07 22:33:11,483:INFO:Set up data.
2025-07-07 22:33:11,491:INFO:Set up index.
2025-07-07 22:33:33,810:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:140: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:33:35,560:WARNING:C:\Users\Flavia\Downloads\Trabalho_Final_VIZ\app.py:140: FutureWarning:

The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.


2025-07-07 22:33:36,012:INFO:Initializing predict_model()
2025-07-07 22:33:36,012:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000017424B75750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Ano'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['uf', 'municipio', 'evento',
                                             'arma', 'faixa_etaria', 'Mes'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['evento', 'ar..._etaria',
                                             'Mes'],
                                    transformer=OneHotEncoder(cols=['evento',
                                                                    'arma',
                                                                    'faixa_etaria',
                                                                    'Mes'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['uf', 'municipio'],
                                    transformer=TargetEncoder(cols=['uf',
                                                                    'municipio'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000174247EC4A0>)
2025-07-07 22:33:36,013:INFO:Checking exceptions
2025-07-07 22:33:36,014:INFO:Preloading libraries
2025-07-07 22:33:36,015:INFO:Set up data.
2025-07-07 22:33:36,037:INFO:Set up index.
2025-07-08 22:13:42,275:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:13:42,275:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:13:42,275:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:13:42,275:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:14:42,069:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:14:42,069:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:14:42,069:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:14:42,069:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:15:16,416:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:15:16,416:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:15:16,416:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:15:16,416:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:15:17,503:INFO:Initializing load_model()
2025-07-08 22:15:17,503:INFO:load_model(model_name=model/modelo-final, platform=None, authentication=None, verbose=True)
2025-07-08 22:17:00,083:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:17:00,083:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:17:00,083:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:17:00,083:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:17:52,782:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:17:52,782:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:17:52,782:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:17:52,782:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:17:53,881:INFO:Initializing load_model()
2025-07-08 22:17:53,881:INFO:load_model(model_name=model/modelo-final, platform=None, authentication=None, verbose=True)
2025-07-08 22:19:19,603:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:19:19,604:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:19:19,604:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:19:19,604:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:19:21,539:INFO:Initializing load_model()
2025-07-08 22:19:21,540:INFO:load_model(model_name=model/modelo-final, platform=None, authentication=None, verbose=True)
2025-07-08 22:19:21,839:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\pickle.py:1718: UserWarning: [22:19:21] WARNING: C:\actions-runner\_work\xgboost\xgboost\src\data\../common/error_msg.h:82: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  setstate(state)

2025-07-08 22:19:21,909:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-08 22:28:53,008:INFO:Initializing load_model()
2025-07-08 22:28:53,008:INFO:load_model(model_name=model\modelo-final, platform=None, authentication=None, verbose=True)
2025-07-08 22:28:53,226:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-08 22:33:46,450:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:33:46,450:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:33:46,450:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:33:46,450:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:33:48,812:INFO:Initializing load_model()
2025-07-08 22:33:48,812:INFO:load_model(model_name=model\modelo-final, platform=None, authentication=None, verbose=True)
2025-07-08 22:33:49,056:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\pickle.py:1718: UserWarning: [22:33:49] WARNING: C:\actions-runner\_work\xgboost\xgboost\src\data\../common/error_msg.h:82: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  setstate(state)

2025-07-08 22:33:49,114:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-08 22:47:00,823:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:47:00,823:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:47:00,823:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:47:00,823:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:47:02,765:INFO:Initializing load_model()
2025-07-08 22:47:02,765:INFO:load_model(model_name=model\modelo-final, platform=None, authentication=None, verbose=True)
2025-07-08 22:47:02,979:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\pickle.py:1718: UserWarning: [22:47:02] WARNING: C:\actions-runner\_work\xgboost\xgboost\src\data\../common/error_msg.h:82: If you are loading a serialized model (like pickle in Python, RDS in R) or
configuration generated by an older version of XGBoost, please export the model by calling
`Booster.save_model` from that version first, then load it back in current version. See:

    https://xgboost.readthedocs.io/en/stable/tutorials/saving_model.html

for more details about differences between saving model and serializing.

  setstate(state)

2025-07-08 22:47:03,036:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-08 22:51:58,812:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:51:58,812:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:51:58,812:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:51:58,812:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 22:51:59,946:INFO:Initializing load_model()
2025-07-08 22:51:59,946:INFO:load_model(model_name=model\modelo-final, platform=None, authentication=None, verbose=True)
2025-07-08 22:51:59,996:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-08 22:52:02,204:INFO:Initializing predict_model()
2025-07-08 22:52:02,204:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E53DD0E350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_vis...
                 TransformerWrapper(include=['hora_do_jogo', 'mandante',
                                             'visitante'],
                                    transformer=TargetEncoder(cols=['hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E53DCB07C0>)
2025-07-08 22:52:02,204:INFO:Checking exceptions
2025-07-08 22:52:02,204:INFO:Preloading libraries
2025-07-08 22:52:02,204:INFO:Set up data.
2025-07-08 22:52:02,249:INFO:Set up index.
2025-07-08 22:53:49,690:INFO:Initializing load_model()
2025-07-08 22:53:49,691:INFO:load_model(model_name=model\modelo-final, platform=None, authentication=None, verbose=True)
2025-07-08 22:53:49,714:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-08 22:53:51,156:INFO:Initializing predict_model()
2025-07-08 22:53:51,157:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E53EDFCD90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_vis...
                 TransformerWrapper(include=['hora_do_jogo', 'mandante',
                                             'visitante'],
                                    transformer=TargetEncoder(cols=['hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E53DCB0400>)
2025-07-08 22:53:51,157:INFO:Checking exceptions
2025-07-08 22:53:51,157:INFO:Preloading libraries
2025-07-08 22:53:51,157:INFO:Set up data.
2025-07-08 22:53:51,165:INFO:Set up index.
2025-07-08 22:54:07,839:INFO:Initializing predict_model()
2025-07-08 22:54:07,839:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E53EDCF590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_vis...
                 TransformerWrapper(include=['hora_do_jogo', 'mandante',
                                             'visitante'],
                                    transformer=TargetEncoder(cols=['hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E53DC0E5C0>)
2025-07-08 22:54:07,839:INFO:Checking exceptions
2025-07-08 22:54:07,839:INFO:Preloading libraries
2025-07-08 22:54:07,842:INFO:Set up data.
2025-07-08 22:54:07,860:INFO:Set up index.
2025-07-08 22:54:13,601:INFO:Initializing predict_model()
2025-07-08 22:54:13,601:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E53EE08F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_vis...
                 TransformerWrapper(include=['hora_do_jogo', 'mandante',
                                             'visitante'],
                                    transformer=TargetEncoder(cols=['hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E5079F8540>)
2025-07-08 22:54:13,603:INFO:Checking exceptions
2025-07-08 22:54:13,603:INFO:Preloading libraries
2025-07-08 22:54:13,603:INFO:Set up data.
2025-07-08 22:54:13,610:INFO:Set up index.
2025-07-08 22:54:18,408:INFO:Initializing predict_model()
2025-07-08 22:54:18,408:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E53DC93890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_vis...
                 TransformerWrapper(include=['hora_do_jogo', 'mandante',
                                             'visitante'],
                                    transformer=TargetEncoder(cols=['hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E53DC0E700>)
2025-07-08 22:54:18,408:INFO:Checking exceptions
2025-07-08 22:54:18,408:INFO:Preloading libraries
2025-07-08 22:54:18,409:INFO:Set up data.
2025-07-08 22:54:18,410:INFO:Set up index.
2025-07-08 22:54:41,725:INFO:Initializing predict_model()
2025-07-08 22:54:41,725:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E53EDCFC90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_vis...
                 TransformerWrapper(include=['hora_do_jogo', 'mandante',
                                             'visitante'],
                                    transformer=TargetEncoder(cols=['hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E508E2A160>)
2025-07-08 22:54:41,725:INFO:Checking exceptions
2025-07-08 22:54:41,725:INFO:Preloading libraries
2025-07-08 22:54:41,725:INFO:Set up data.
2025-07-08 22:54:41,742:INFO:Set up index.
2025-07-08 23:15:34,644:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:15:34,644:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:15:34,644:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:15:34,644:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:15:36,098:INFO:Initializing load_model()
2025-07-08 23:15:36,098:INFO:load_model(model_name=model\modelo-final, platform=None, authentication=None, verbose=True)
2025-07-08 23:15:36,141:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-08 23:15:37,812:INFO:Initializing predict_model()
2025-07-08 23:15:37,812:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D5A6DEDE10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_vis...
                 TransformerWrapper(include=['hora_do_jogo', 'mandante',
                                             'visitante'],
                                    transformer=TargetEncoder(cols=['hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D5A6D23560>)
2025-07-08 23:15:37,812:INFO:Checking exceptions
2025-07-08 23:15:37,812:INFO:Preloading libraries
2025-07-08 23:15:37,812:INFO:Set up data.
2025-07-08 23:15:37,838:INFO:Set up index.
2025-07-08 23:15:51,888:INFO:Initializing predict_model()
2025-07-08 23:15:51,888:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D5A6D96190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_vis...
                 TransformerWrapper(include=['hora_do_jogo', 'mandante',
                                             'visitante'],
                                    transformer=TargetEncoder(cols=['hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D5A7EDF2E0>)
2025-07-08 23:15:51,888:INFO:Checking exceptions
2025-07-08 23:15:51,888:INFO:Preloading libraries
2025-07-08 23:15:51,888:INFO:Set up data.
2025-07-08 23:15:51,904:INFO:Set up index.
2025-07-08 23:15:58,570:INFO:Initializing predict_model()
2025-07-08 23:15:58,570:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D5A6DC82D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_vis...
                 TransformerWrapper(include=['hora_do_jogo', 'mandante',
                                             'visitante'],
                                    transformer=TargetEncoder(cols=['hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D5F1E2A020>)
2025-07-08 23:15:58,570:INFO:Checking exceptions
2025-07-08 23:15:58,570:INFO:Preloading libraries
2025-07-08 23:15:58,570:INFO:Set up data.
2025-07-08 23:15:58,587:INFO:Set up index.
2025-07-08 23:16:12,679:INFO:Initializing predict_model()
2025-07-08 23:16:12,679:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D5A6DC8590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_vis...
                 TransformerWrapper(include=['hora_do_jogo', 'mandante',
                                             'visitante'],
                                    transformer=TargetEncoder(cols=['hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D5F0C68540>)
2025-07-08 23:16:12,679:INFO:Checking exceptions
2025-07-08 23:16:12,679:INFO:Preloading libraries
2025-07-08 23:16:12,679:INFO:Set up data.
2025-07-08 23:16:12,686:INFO:Set up index.
2025-07-08 23:16:16,086:INFO:Initializing predict_model()
2025-07-08 23:16:16,086:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D5A6DCB910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_vis...
                 TransformerWrapper(include=['hora_do_jogo', 'mandante',
                                             'visitante'],
                                    transformer=TargetEncoder(cols=['hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D5A64E6480>)
2025-07-08 23:16:16,086:INFO:Checking exceptions
2025-07-08 23:16:16,086:INFO:Preloading libraries
2025-07-08 23:16:16,086:INFO:Set up data.
2025-07-08 23:16:16,103:INFO:Set up index.
2025-07-08 23:23:18,927:INFO:Initializing predict_model()
2025-07-08 23:23:18,928:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D5A6D91050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_vis...
                 TransformerWrapper(include=['hora_do_jogo', 'mandante',
                                             'visitante'],
                                    transformer=TargetEncoder(cols=['hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D5F1E29EE0>)
2025-07-08 23:23:18,928:INFO:Checking exceptions
2025-07-08 23:23:18,928:INFO:Preloading libraries
2025-07-08 23:23:18,928:INFO:Set up data.
2025-07-08 23:23:18,947:INFO:Set up index.
2025-07-08 23:23:22,779:INFO:Initializing predict_model()
2025-07-08 23:23:22,779:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D5A6E205D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_vis...
                 TransformerWrapper(include=['hora_do_jogo', 'mandante',
                                             'visitante'],
                                    transformer=TargetEncoder(cols=['hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D5A6D22200>)
2025-07-08 23:23:22,779:INFO:Checking exceptions
2025-07-08 23:23:22,779:INFO:Preloading libraries
2025-07-08 23:23:22,779:INFO:Set up data.
2025-07-08 23:23:22,812:INFO:Set up index.
2025-07-08 23:23:44,472:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:23:44,472:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:23:44,472:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:23:44,472:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:23:58,463:INFO:Initializing load_model()
2025-07-08 23:23:58,463:INFO:load_model(model_name=model\modelo-final, platform=None, authentication=None, verbose=True)
2025-07-08 23:23:58,509:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-08 23:23:59,815:INFO:Initializing predict_model()
2025-07-08 23:23:59,816:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F090D77690>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                             'mandante', 'visitante'],
                                    transformer=TargetEncoder(cols=['data_do_jogo',
                                                                    'hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F090D784A0>)
2025-07-08 23:23:59,816:INFO:Checking exceptions
2025-07-08 23:23:59,816:INFO:Preloading libraries
2025-07-08 23:23:59,816:INFO:Set up data.
2025-07-08 23:23:59,829:INFO:Set up index.
2025-07-08 23:24:11,412:INFO:Initializing predict_model()
2025-07-08 23:24:11,412:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F090D5C650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                             'mandante', 'visitante'],
                                    transformer=TargetEncoder(cols=['data_do_jogo',
                                                                    'hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F090D79620>)
2025-07-08 23:24:11,412:INFO:Checking exceptions
2025-07-08 23:24:11,412:INFO:Preloading libraries
2025-07-08 23:24:11,412:INFO:Set up data.
2025-07-08 23:24:11,426:INFO:Set up index.
2025-07-08 23:24:14,760:INFO:Initializing predict_model()
2025-07-08 23:24:14,760:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F090D22DD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                             'mandante', 'visitante'],
                                    transformer=TargetEncoder(cols=['data_do_jogo',
                                                                    'hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F090C82840>)
2025-07-08 23:24:14,760:INFO:Checking exceptions
2025-07-08 23:24:14,760:INFO:Preloading libraries
2025-07-08 23:24:14,760:INFO:Set up data.
2025-07-08 23:24:14,776:INFO:Set up index.
2025-07-08 23:24:18,343:INFO:Initializing predict_model()
2025-07-08 23:24:18,343:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F090DD1450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                             'mandante', 'visitante'],
                                    transformer=TargetEncoder(cols=['data_do_jogo',
                                                                    'hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F0DBFFA5C0>)
2025-07-08 23:24:18,343:INFO:Checking exceptions
2025-07-08 23:24:18,343:INFO:Preloading libraries
2025-07-08 23:24:18,343:INFO:Set up data.
2025-07-08 23:24:18,368:INFO:Set up index.
2025-07-08 23:24:22,409:INFO:Initializing predict_model()
2025-07-08 23:24:22,409:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F091EC3410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                             'mandante', 'visitante'],
                                    transformer=TargetEncoder(cols=['data_do_jogo',
                                                                    'hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F0DBFFA7A0>)
2025-07-08 23:24:22,409:INFO:Checking exceptions
2025-07-08 23:24:22,409:INFO:Preloading libraries
2025-07-08 23:24:22,409:INFO:Set up data.
2025-07-08 23:24:22,428:INFO:Set up index.
2025-07-08 23:31:15,828:INFO:Initializing load_model()
2025-07-08 23:31:15,829:INFO:load_model(model_name=model\modelo-final, platform=None, authentication=None, verbose=True)
2025-07-08 23:31:15,864:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-08 23:31:17,243:INFO:Initializing predict_model()
2025-07-08 23:31:17,244:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F091F5FBD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                             'mandante', 'visitante'],
                                    transformer=TargetEncoder(cols=['data_do_jogo',
                                                                    'hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 SGDClassifier(eta0=0.001, n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F090C828E0>)
2025-07-08 23:31:17,244:INFO:Checking exceptions
2025-07-08 23:31:17,244:INFO:Preloading libraries
2025-07-08 23:31:17,245:INFO:Set up data.
2025-07-08 23:31:17,253:INFO:Set up index.
2025-07-08 23:31:24,839:INFO:Initializing predict_model()
2025-07-08 23:31:24,849:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F090DB47D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                             'mandante', 'visitante'],
                                    transformer=TargetEncoder(cols=['data_do_jogo',
                                                                    'hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 SGDClassifier(eta0=0.001, n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F090D78CC0>)
2025-07-08 23:31:24,850:INFO:Checking exceptions
2025-07-08 23:31:24,850:INFO:Preloading libraries
2025-07-08 23:31:24,850:INFO:Set up data.
2025-07-08 23:31:24,867:INFO:Set up index.
2025-07-08 23:31:30,451:INFO:Initializing predict_model()
2025-07-08 23:31:30,451:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F090DB7990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                             'mandante', 'visitante'],
                                    transformer=TargetEncoder(cols=['data_do_jogo',
                                                                    'hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 SGDClassifier(eta0=0.001, n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F090C828E0>)
2025-07-08 23:31:30,451:INFO:Checking exceptions
2025-07-08 23:31:30,451:INFO:Preloading libraries
2025-07-08 23:31:30,451:INFO:Set up data.
2025-07-08 23:31:30,451:INFO:Set up index.
2025-07-08 23:31:37,418:INFO:Initializing predict_model()
2025-07-08 23:31:37,418:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F090DD03D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                             'mandante', 'visitante'],
                                    transformer=TargetEncoder(cols=['data_do_jogo',
                                                                    'hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 SGDClassifier(eta0=0.001, n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F090D78B80>)
2025-07-08 23:31:37,418:INFO:Checking exceptions
2025-07-08 23:31:37,418:INFO:Preloading libraries
2025-07-08 23:31:37,418:INFO:Set up data.
2025-07-08 23:31:37,433:INFO:Set up index.
2025-07-08 23:31:45,984:INFO:Initializing predict_model()
2025-07-08 23:31:45,984:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F090CE3D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                             'mandante', 'visitante'],
                                    transformer=TargetEncoder(cols=['data_do_jogo',
                                                                    'hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 SGDClassifier(eta0=0.001, n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F0DC0149A0>)
2025-07-08 23:31:45,984:INFO:Checking exceptions
2025-07-08 23:31:45,984:INFO:Preloading libraries
2025-07-08 23:31:45,984:INFO:Set up data.
2025-07-08 23:31:45,997:INFO:Set up index.
2025-07-08 23:31:53,549:INFO:Initializing predict_model()
2025-07-08 23:31:53,549:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F091EE5950>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                             'mandante', 'visitante'],
                                    transformer=TargetEncoder(cols=['data_do_jogo',
                                                                    'hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 SGDClassifier(eta0=0.001, n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F0DBFFA840>)
2025-07-08 23:31:53,549:INFO:Checking exceptions
2025-07-08 23:31:53,549:INFO:Preloading libraries
2025-07-08 23:31:53,549:INFO:Set up data.
2025-07-08 23:31:53,567:INFO:Set up index.
2025-07-08 23:32:00,499:INFO:Initializing predict_model()
2025-07-08 23:32:00,499:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F090D202D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                             'mandante', 'visitante'],
                                    transformer=TargetEncoder(cols=['data_do_jogo',
                                                                    'hora_do_jogo',
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 SGDClassifier(eta0=0.001, n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F090E93BA0>)
2025-07-08 23:32:00,499:INFO:Checking exceptions
2025-07-08 23:32:00,499:INFO:Preloading libraries
2025-07-08 23:32:00,499:INFO:Set up data.
2025-07-08 23:32:00,517:INFO:Set up index.
2025-07-08 23:37:01,297:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:37:01,297:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:37:01,297:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:37:01,297:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:37:02,747:INFO:Initializing load_model()
2025-07-08 23:37:02,747:INFO:load_model(model_name=model\modelo-final, platform=None, authentication=None, verbose=True)
2025-07-08 23:37:02,798:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-08 23:37:04,419:INFO:Initializing predict_model()
2025-07-08 23:37:04,419:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CAF4DF9FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CAF4D4F6A0>)
2025-07-08 23:37:04,419:INFO:Checking exceptions
2025-07-08 23:37:04,420:INFO:Preloading libraries
2025-07-08 23:37:04,421:INFO:Set up data.
2025-07-08 23:37:04,433:INFO:Set up index.
2025-07-08 23:37:08,382:INFO:Initializing predict_model()
2025-07-08 23:37:08,382:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CAF5FD1110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CABEFDA520>)
2025-07-08 23:37:08,382:INFO:Checking exceptions
2025-07-08 23:37:08,382:INFO:Preloading libraries
2025-07-08 23:37:08,382:INFO:Set up data.
2025-07-08 23:37:08,399:INFO:Set up index.
2025-07-08 23:37:10,915:INFO:Initializing predict_model()
2025-07-08 23:37:10,916:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CAF4DBD790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CABD8A1800>)
2025-07-08 23:37:10,916:INFO:Checking exceptions
2025-07-08 23:37:10,916:INFO:Preloading libraries
2025-07-08 23:37:10,916:INFO:Set up data.
2025-07-08 23:37:10,933:INFO:Set up index.
2025-07-08 23:37:13,849:INFO:Initializing predict_model()
2025-07-08 23:37:13,849:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CAF4E20D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CAF5F27C40>)
2025-07-08 23:37:13,849:INFO:Checking exceptions
2025-07-08 23:37:13,849:INFO:Preloading libraries
2025-07-08 23:37:13,849:INFO:Set up data.
2025-07-08 23:37:13,866:INFO:Set up index.
2025-07-08 23:37:17,315:INFO:Initializing predict_model()
2025-07-08 23:37:17,315:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CAF5F3B890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CABEDE8540>)
2025-07-08 23:37:17,315:INFO:Checking exceptions
2025-07-08 23:37:17,315:INFO:Preloading libraries
2025-07-08 23:37:17,315:INFO:Set up data.
2025-07-08 23:37:17,334:INFO:Set up index.
2025-07-08 23:37:57,281:INFO:Initializing predict_model()
2025-07-08 23:37:57,281:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CAF5F5B790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CAC019D9E0>)
2025-07-08 23:37:57,281:INFO:Checking exceptions
2025-07-08 23:37:57,281:INFO:Preloading libraries
2025-07-08 23:37:57,281:INFO:Set up data.
2025-07-08 23:37:57,285:INFO:Set up index.
2025-07-08 23:38:00,163:INFO:Initializing predict_model()
2025-07-08 23:38:00,163:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CAF4E50890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CAF5EA93A0>)
2025-07-08 23:38:00,163:INFO:Checking exceptions
2025-07-08 23:38:00,163:INFO:Preloading libraries
2025-07-08 23:38:00,163:INFO:Set up data.
2025-07-08 23:38:00,180:INFO:Set up index.
2025-07-08 23:38:03,263:INFO:Initializing predict_model()
2025-07-08 23:38:03,263:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CAF5F59250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'pinaccle_sports_mandante',
                                             'pinaccle_sports_empate',
                                             'pinaccle_sports_visitante',
                                             'fechamento_mandante',
                                             'fechamento_empate',
                                             'fechamento_visita...
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CAF5F27BA0>)
2025-07-08 23:38:03,263:INFO:Checking exceptions
2025-07-08 23:38:03,263:INFO:Preloading libraries
2025-07-08 23:38:03,263:INFO:Set up data.
2025-07-08 23:38:03,279:INFO:Set up index.
2025-07-08 23:44:05,503:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:44:05,506:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:44:05,506:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:44:05,506:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:47:21,526:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:47:21,526:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:47:21,526:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:47:21,526:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:56:29,169:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:56:29,169:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:56:29,169:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:56:29,171:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-08 23:56:32,134:INFO:Initializing load_model()
2025-07-08 23:56:32,134:INFO:load_model(model_name=model\modelo-final, platform=None, authentication=None, verbose=True)
2025-07-08 23:56:32,330:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-08 23:56:43,531:INFO:Initializing predict_model()
2025-07-08 23:56:43,532:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B880913D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transf...
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B880A04F40>)
2025-07-08 23:56:43,532:INFO:Checking exceptions
2025-07-08 23:56:43,532:INFO:Preloading libraries
2025-07-08 23:56:43,532:INFO:Set up data.
2025-07-08 23:56:43,548:INFO:Set up index.
2025-07-08 23:56:49,981:INFO:Initializing predict_model()
2025-07-08 23:56:49,981:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B881AC1E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transf...
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B880A04E00>)
2025-07-08 23:56:49,981:INFO:Checking exceptions
2025-07-08 23:56:49,981:INFO:Preloading libraries
2025-07-08 23:56:49,981:INFO:Set up data.
2025-07-08 23:56:49,998:INFO:Set up index.
2025-07-08 23:57:18,215:INFO:Initializing predict_model()
2025-07-08 23:57:18,215:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B8808F3790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transf...
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B880A06160>)
2025-07-08 23:57:18,230:INFO:Checking exceptions
2025-07-08 23:57:18,230:INFO:Preloading libraries
2025-07-08 23:57:18,230:INFO:Set up data.
2025-07-08 23:57:18,251:INFO:Set up index.
2025-07-08 23:57:27,048:INFO:Initializing predict_model()
2025-07-08 23:57:27,048:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B881ACB4D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transf...
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B8FFFAD4E0>)
2025-07-08 23:57:27,048:INFO:Checking exceptions
2025-07-08 23:57:27,048:INFO:Preloading libraries
2025-07-08 23:57:27,048:INFO:Set up data.
2025-07-08 23:57:27,063:INFO:Set up index.
2025-07-08 23:57:51,013:INFO:Initializing predict_model()
2025-07-08 23:57:51,013:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B880635F10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transf...
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B880A07D80>)
2025-07-08 23:57:51,013:INFO:Checking exceptions
2025-07-08 23:57:51,013:INFO:Preloading libraries
2025-07-08 23:57:51,027:INFO:Set up data.
2025-07-08 23:57:51,044:INFO:Set up index.
2025-07-08 23:57:54,111:INFO:Initializing predict_model()
2025-07-08 23:57:54,111:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B880940B90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transf...
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B880A06CA0>)
2025-07-08 23:57:54,111:INFO:Checking exceptions
2025-07-08 23:57:54,111:INFO:Preloading libraries
2025-07-08 23:57:54,111:INFO:Set up data.
2025-07-08 23:57:54,138:INFO:Set up index.
2025-07-08 23:57:57,131:INFO:Initializing predict_model()
2025-07-08 23:57:57,133:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B880934D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transf...
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B880A05DA0>)
2025-07-08 23:57:57,144:INFO:Checking exceptions
2025-07-08 23:57:57,144:INFO:Preloading libraries
2025-07-08 23:57:57,144:INFO:Set up data.
2025-07-08 23:57:57,165:INFO:Set up index.
2025-07-08 23:58:00,510:INFO:Initializing predict_model()
2025-07-08 23:58:00,510:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B880920450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gols_mandante',
                                             'gols_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transf...
                                                                    'mandante',
                                                                    'visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B8E4842D40>)
2025-07-08 23:58:00,510:INFO:Checking exceptions
2025-07-08 23:58:00,510:INFO:Preloading libraries
2025-07-08 23:58:00,510:INFO:Set up data.
2025-07-08 23:58:00,530:INFO:Set up index.
2025-07-09 00:12:45,132:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 00:12:45,132:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 00:12:45,132:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 00:12:45,132:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 00:12:48,410:INFO:Initializing load_model()
2025-07-09 00:12:48,410:INFO:load_model(model_name=model\modelo-final, platform=None, authentication=None, verbose=True)
2025-07-09 00:12:48,764:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-09 00:12:51,293:INFO:Initializing predict_model()
2025-07-09 00:12:51,293:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FF6CAC3850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tra...
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_estimators=300, n_jobs=-1,
                                        random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FF6CBE44A0>)
2025-07-09 00:12:51,293:INFO:Checking exceptions
2025-07-09 00:12:51,293:INFO:Preloading libraries
2025-07-09 00:12:51,293:INFO:Set up data.
2025-07-09 00:12:51,307:INFO:Set up index.
2025-07-09 00:12:57,029:INFO:Initializing predict_model()
2025-07-09 00:12:57,029:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FF6CADD350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tra...
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_estimators=300, n_jobs=-1,
                                        random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FF6CBE7560>)
2025-07-09 00:12:57,029:INFO:Checking exceptions
2025-07-09 00:12:57,029:INFO:Preloading libraries
2025-07-09 00:12:57,029:INFO:Set up data.
2025-07-09 00:12:57,052:INFO:Set up index.
2025-07-09 00:13:00,673:INFO:Initializing predict_model()
2025-07-09 00:13:00,673:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FF6CADC990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tra...
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_estimators=300, n_jobs=-1,
                                        random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FF6C879760>)
2025-07-09 00:13:00,673:INFO:Checking exceptions
2025-07-09 00:13:00,673:INFO:Preloading libraries
2025-07-09 00:13:00,673:INFO:Set up data.
2025-07-09 00:13:00,691:INFO:Set up index.
2025-07-09 00:13:04,442:INFO:Initializing predict_model()
2025-07-09 00:13:04,442:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FF6CA4C390>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tra...
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_estimators=300, n_jobs=-1,
                                        random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FF508DED40>)
2025-07-09 00:13:04,442:INFO:Checking exceptions
2025-07-09 00:13:04,442:INFO:Preloading libraries
2025-07-09 00:13:04,442:INFO:Set up data.
2025-07-09 00:13:04,465:INFO:Set up index.
2025-07-09 00:13:08,478:INFO:Initializing predict_model()
2025-07-09 00:13:08,478:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FF6CA1ED50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tra...
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_estimators=300, n_jobs=-1,
                                        random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FF6CBE56C0>)
2025-07-09 00:13:08,478:INFO:Checking exceptions
2025-07-09 00:13:08,478:INFO:Preloading libraries
2025-07-09 00:13:08,478:INFO:Set up data.
2025-07-09 00:13:08,495:INFO:Set up index.
2025-07-09 00:13:46,384:INFO:Initializing predict_model()
2025-07-09 00:13:46,384:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FF6C9F3D50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tra...
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_estimators=300, n_jobs=-1,
                                        random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FF6CBE7F60>)
2025-07-09 00:13:46,384:INFO:Checking exceptions
2025-07-09 00:13:46,384:INFO:Preloading libraries
2025-07-09 00:13:46,384:INFO:Set up data.
2025-07-09 00:13:46,407:INFO:Set up index.
2025-07-09 00:13:50,388:INFO:Initializing predict_model()
2025-07-09 00:13:50,388:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FF6C97A150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tra...
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_estimators=300, n_jobs=-1,
                                        random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FF6C8794E0>)
2025-07-09 00:13:50,388:INFO:Checking exceptions
2025-07-09 00:13:50,388:INFO:Preloading libraries
2025-07-09 00:13:50,388:INFO:Set up data.
2025-07-09 00:13:50,408:INFO:Set up index.
2025-07-09 00:13:54,977:INFO:Initializing predict_model()
2025-07-09 00:13:54,977:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FF6C8F5710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tra...
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_estimators=300, n_jobs=-1,
                                        random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FF6CBE7740>)
2025-07-09 00:13:54,977:INFO:Checking exceptions
2025-07-09 00:13:54,977:INFO:Preloading libraries
2025-07-09 00:13:54,979:INFO:Set up data.
2025-07-09 00:13:54,990:INFO:Set up index.
2025-07-09 00:23:53,756:INFO:Initializing predict_model()
2025-07-09 00:23:53,756:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FF6CADFB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tra...
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_estimators=300, n_jobs=-1,
                                        random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FF6CB99D00>)
2025-07-09 00:23:53,756:INFO:Checking exceptions
2025-07-09 00:23:53,756:INFO:Preloading libraries
2025-07-09 00:23:53,764:INFO:Set up data.
2025-07-09 00:23:53,764:INFO:Set up index.
2025-07-09 00:23:56,757:INFO:Initializing predict_model()
2025-07-09 00:23:56,758:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FF6CA96810>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tra...
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_estimators=300, n_jobs=-1,
                                        random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FF6CBE74C0>)
2025-07-09 00:23:56,758:INFO:Checking exceptions
2025-07-09 00:23:56,758:INFO:Preloading libraries
2025-07-09 00:23:56,758:INFO:Set up data.
2025-07-09 00:23:56,773:INFO:Set up index.
2025-07-09 00:24:00,646:INFO:Initializing predict_model()
2025-07-09 00:24:00,646:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FF6C9F0B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tra...
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_estimators=300, n_jobs=-1,
                                        random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FF6C04D4E0>)
2025-07-09 00:24:00,646:INFO:Checking exceptions
2025-07-09 00:24:00,646:INFO:Preloading libraries
2025-07-09 00:24:00,646:INFO:Set up data.
2025-07-09 00:24:00,670:INFO:Set up index.
2025-07-09 00:24:04,796:INFO:Initializing predict_model()
2025-07-09 00:24:04,796:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FF6CAEAE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tra...
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_estimators=300, n_jobs=-1,
                                        random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FF6CBE60C0>)
2025-07-09 00:24:04,796:INFO:Checking exceptions
2025-07-09 00:24:04,796:INFO:Preloading libraries
2025-07-09 00:24:04,799:INFO:Set up data.
2025-07-09 00:24:04,814:INFO:Set up index.
2025-07-09 00:24:08,889:INFO:Initializing predict_model()
2025-07-09 00:24:08,889:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FF6C992150>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['ano', 'gol_s_mandante',
                                             'gols_s_visitante',
                                             'media_vitoria_mandante',
                                             'media_vitoria_empate',
                                             'media_vitoria_visitante', 'mes'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Tra...
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 RandomForestClassifier(n_estimators=300, n_jobs=-1,
                                        random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FF6C04D4E0>)
2025-07-09 00:24:08,889:INFO:Checking exceptions
2025-07-09 00:24:08,889:INFO:Preloading libraries
2025-07-09 00:24:08,889:INFO:Set up data.
2025-07-09 00:24:08,910:INFO:Set up index.
2025-07-09 00:58:04,778:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 00:58:04,778:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 00:58:04,778:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 00:58:04,778:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 01:03:09,451:INFO:Initializing load_model()
2025-07-09 01:03:09,451:INFO:load_model(model_name=model/modelo-final, platform=None, authentication=None, verbose=True)
2025-07-09 01:03:09,541:WARNING:C:\Users\Flavia\anaconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-09 01:04:17,718:INFO:Initializing predict_model()
2025-07-09 01:04:17,718:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C8461B4C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C8111E9940>)
2025-07-09 01:04:17,721:INFO:Checking exceptions
2025-07-09 01:04:17,721:INFO:Preloading libraries
2025-07-09 01:04:17,722:INFO:Set up data.
2025-07-09 01:04:17,760:INFO:Set up index.
2025-07-09 01:04:32,105:INFO:Initializing predict_model()
2025-07-09 01:04:32,105:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C845DF9710>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C845E051C0>)
2025-07-09 01:04:32,105:INFO:Checking exceptions
2025-07-09 01:04:32,105:INFO:Preloading libraries
2025-07-09 01:04:32,106:INFO:Set up data.
2025-07-09 01:04:32,140:INFO:Set up index.
2025-07-09 01:04:49,420:INFO:Initializing predict_model()
2025-07-09 01:04:49,420:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C845E5B2D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C8111E98A0>)
2025-07-09 01:04:49,420:INFO:Checking exceptions
2025-07-09 01:04:49,420:INFO:Preloading libraries
2025-07-09 01:04:49,420:INFO:Set up data.
2025-07-09 01:04:49,458:INFO:Set up index.
2025-07-09 01:04:56,335:INFO:Initializing predict_model()
2025-07-09 01:04:56,335:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C845DFA650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', DecisionTreeClassifier(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C845509300>)
2025-07-09 01:04:56,335:INFO:Checking exceptions
2025-07-09 01:04:56,335:INFO:Preloading libraries
2025-07-09 01:04:56,336:INFO:Set up data.
2025-07-09 01:04:56,353:INFO:Set up index.
2025-07-09 09:28:14,909:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 09:28:14,910:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 09:28:14,910:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 09:28:14,910:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 09:28:19,321:INFO:Initializing load_model()
2025-07-09 09:28:19,321:INFO:load_model(model_name=model/modelo-final, platform=None, authentication=None, verbose=True)
2025-07-09 09:28:19,507:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-09 09:28:27,122:INFO:Initializing predict_model()
2025-07-09 09:28:27,122:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000273494D4310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000273328E5F80>)
2025-07-09 09:28:27,122:INFO:Checking exceptions
2025-07-09 09:28:27,122:INFO:Preloading libraries
2025-07-09 09:28:27,123:INFO:Set up data.
2025-07-09 09:28:27,180:INFO:Set up index.
2025-07-09 09:28:36,767:INFO:Initializing predict_model()
2025-07-09 09:28:36,767:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027348EA8750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000273328E7A60>)
2025-07-09 09:28:36,767:INFO:Checking exceptions
2025-07-09 09:28:36,768:INFO:Preloading libraries
2025-07-09 09:28:36,768:INFO:Set up data.
2025-07-09 09:28:36,820:INFO:Set up index.
2025-07-09 09:29:01,940:INFO:Initializing predict_model()
2025-07-09 09:29:01,941:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027348FC6FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000273488AE980>)
2025-07-09 09:29:01,941:INFO:Checking exceptions
2025-07-09 09:29:01,941:INFO:Preloading libraries
2025-07-09 09:29:01,941:INFO:Set up data.
2025-07-09 09:29:01,969:INFO:Set up index.
2025-07-09 09:29:12,477:INFO:Initializing predict_model()
2025-07-09 09:29:12,477:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027348FA3450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027348873420>)
2025-07-09 09:29:12,477:INFO:Checking exceptions
2025-07-09 09:29:12,477:INFO:Preloading libraries
2025-07-09 09:29:12,477:INFO:Set up data.
2025-07-09 09:29:12,508:INFO:Set up index.
2025-07-09 09:29:57,311:INFO:Initializing predict_model()
2025-07-09 09:29:57,311:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027348FA3290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000273328E5F80>)
2025-07-09 09:29:57,311:INFO:Checking exceptions
2025-07-09 09:29:57,311:INFO:Preloading libraries
2025-07-09 09:29:57,311:INFO:Set up data.
2025-07-09 09:29:57,334:INFO:Set up index.
2025-07-09 09:35:42,656:INFO:Initializing load_model()
2025-07-09 09:35:42,656:INFO:load_model(model_name=model\modelo-final, platform=None, authentication=None, verbose=True)
2025-07-09 09:35:42,772:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-09 09:35:56,493:INFO:Initializing predict_model()
2025-07-09 09:35:56,493:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027349013410>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002734865E0C0>)
2025-07-09 09:35:56,493:INFO:Checking exceptions
2025-07-09 09:35:56,493:INFO:Preloading libraries
2025-07-09 09:35:56,493:INFO:Set up data.
2025-07-09 09:35:56,513:INFO:Set up index.
2025-07-09 09:36:16,639:INFO:Initializing predict_model()
2025-07-09 09:36:16,639:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027348FC6E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027348485260>)
2025-07-09 09:36:16,639:INFO:Checking exceptions
2025-07-09 09:36:16,639:INFO:Preloading libraries
2025-07-09 09:36:16,640:INFO:Set up data.
2025-07-09 09:36:16,665:INFO:Set up index.
2025-07-09 09:36:22,471:INFO:Initializing predict_model()
2025-07-09 09:36:22,471:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000273495A2E90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002733065C0E0>)
2025-07-09 09:36:22,471:INFO:Checking exceptions
2025-07-09 09:36:22,471:INFO:Preloading libraries
2025-07-09 09:36:22,471:INFO:Set up data.
2025-07-09 09:36:22,489:INFO:Set up index.
2025-07-09 09:36:39,745:INFO:Initializing predict_model()
2025-07-09 09:36:39,746:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027348722310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027348793420>)
2025-07-09 09:36:39,746:INFO:Checking exceptions
2025-07-09 09:36:39,746:INFO:Preloading libraries
2025-07-09 09:36:39,746:INFO:Set up data.
2025-07-09 09:36:39,764:INFO:Set up index.
2025-07-09 09:36:45,782:INFO:Initializing predict_model()
2025-07-09 09:36:45,783:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002734960CF90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000273487B22A0>)
2025-07-09 09:36:45,783:INFO:Checking exceptions
2025-07-09 09:36:45,783:INFO:Preloading libraries
2025-07-09 09:36:45,783:INFO:Set up data.
2025-07-09 09:36:45,803:INFO:Set up index.
2025-07-09 10:07:51,907:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 10:07:51,907:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 10:07:51,907:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 10:07:51,907:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 10:11:37,966:INFO:Initializing load_model()
2025-07-09 10:11:37,967:INFO:load_model(model_name=model\modelo_brasileirao, platform=None, authentication=None, verbose=True)
2025-07-09 10:11:38,148:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-09 10:15:36,717:INFO:Initializing predict_model()
2025-07-09 10:15:36,717:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019AC3394A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(bagging_fraction=0.8, bagging_freq=3,
                                feature_fraction=1.0, learning_rate=0.5,
                                min_child_samples=100, min_split_gain=0.3,
                                n_estimators=190, n_jobs=-1, num_leaves=10,
                                random_state=42, reg_alpha=0.1,
                                reg_lambda=0.05))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000019AC3129E40>)
2025-07-09 10:15:36,717:INFO:Checking exceptions
2025-07-09 10:15:36,717:INFO:Preloading libraries
2025-07-09 10:15:36,718:INFO:Set up data.
2025-07-09 10:15:36,750:INFO:Set up index.
2025-07-09 10:15:56,799:INFO:Initializing predict_model()
2025-07-09 10:15:56,799:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019AC318B4D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(bagging_fraction=0.8, bagging_freq=3,
                                feature_fraction=1.0, learning_rate=0.5,
                                min_child_samples=100, min_split_gain=0.3,
                                n_estimators=190, n_jobs=-1, num_leaves=10,
                                random_state=42, reg_alpha=0.1,
                                reg_lambda=0.05))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000019AC3129620>)
2025-07-09 10:15:56,799:INFO:Checking exceptions
2025-07-09 10:15:56,799:INFO:Preloading libraries
2025-07-09 10:15:56,800:INFO:Set up data.
2025-07-09 10:15:56,826:INFO:Set up index.
2025-07-09 10:16:09,593:INFO:Initializing predict_model()
2025-07-09 10:16:09,593:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019AC34098D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(bagging_fraction=0.8, bagging_freq=3,
                                feature_fraction=1.0, learning_rate=0.5,
                                min_child_samples=100, min_split_gain=0.3,
                                n_estimators=190, n_jobs=-1, num_leaves=10,
                                random_state=42, reg_alpha=0.1,
                                reg_lambda=0.05))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000019AC3128EA0>)
2025-07-09 10:16:09,593:INFO:Checking exceptions
2025-07-09 10:16:09,593:INFO:Preloading libraries
2025-07-09 10:16:09,594:INFO:Set up data.
2025-07-09 10:16:09,613:INFO:Set up index.
2025-07-09 10:59:03,831:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 10:59:03,832:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 10:59:03,832:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 10:59:03,832:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 10:59:09,048:INFO:Initializing load_model()
2025-07-09 10:59:09,048:INFO:load_model(model_name=modelo-final, platform=None, authentication=None, verbose=True)
2025-07-09 10:59:37,945:INFO:Initializing load_model()
2025-07-09 10:59:37,945:INFO:load_model(model_name=model/modelo-final, platform=None, authentication=None, verbose=True)
2025-07-09 10:59:38,160:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-09 11:09:32,097:INFO:Initializing load_model()
2025-07-09 11:09:32,098:INFO:load_model(model_name=model\modelo-final, platform=None, authentication=None, verbose=True)
2025-07-09 11:09:32,203:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.1', 'setuptools': '78.1.1', 'pycaret': '3.3.2', 'IPython': '9.4.0', 'ipywidgets': '8.1.7', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.2', 'requests': '2.32.4', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.5', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.1.2', 'setuptools': '75.2.0', 'pycaret': '3.3.2', 'IPython': '7.34.0', 'ipywidgets': '7.7.1', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.6', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.5', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '1.0.0', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.5', 'markupsafe': '2.0.1', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': '3.1.1'}, 'python': {'version': '3.11.13', 'machine': 'x86_64'}}
  warnings.warn(

2025-07-09 11:10:13,034:INFO:Initializing predict_model()
2025-07-09 11:10:13,035:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B136B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B59A0FD80>)
2025-07-09 11:10:13,035:INFO:Checking exceptions
2025-07-09 11:10:13,035:INFO:Preloading libraries
2025-07-09 11:10:13,036:INFO:Set up data.
2025-07-09 11:10:13,088:INFO:Set up index.
2025-07-09 11:10:20,121:INFO:Initializing predict_model()
2025-07-09 11:10:20,121:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B712D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B44EC5580>)
2025-07-09 11:10:20,121:INFO:Checking exceptions
2025-07-09 11:10:20,121:INFO:Preloading libraries
2025-07-09 11:10:20,122:INFO:Set up data.
2025-07-09 11:10:20,151:INFO:Set up index.
2025-07-09 11:10:28,421:INFO:Initializing predict_model()
2025-07-09 11:10:28,422:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B156C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B4258BB00>)
2025-07-09 11:10:28,422:INFO:Checking exceptions
2025-07-09 11:10:28,422:INFO:Preloading libraries
2025-07-09 11:10:28,423:INFO:Set up data.
2025-07-09 11:10:28,439:INFO:Set up index.
2025-07-09 11:11:23,032:INFO:Initializing predict_model()
2025-07-09 11:11:23,032:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B6B1750>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B5B0BACA0>)
2025-07-09 11:11:23,032:INFO:Checking exceptions
2025-07-09 11:11:23,032:INFO:Preloading libraries
2025-07-09 11:11:23,033:INFO:Set up data.
2025-07-09 11:11:23,053:INFO:Set up index.
2025-07-09 11:11:32,718:INFO:Initializing predict_model()
2025-07-09 11:11:32,718:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B04ED50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B5AE6BCE0>)
2025-07-09 11:11:32,718:INFO:Checking exceptions
2025-07-09 11:11:32,719:INFO:Preloading libraries
2025-07-09 11:11:32,719:INFO:Set up data.
2025-07-09 11:11:32,738:INFO:Set up index.
2025-07-09 11:16:04,814:INFO:Initializing predict_model()
2025-07-09 11:16:04,814:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B68CB10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B5AE6A0C0>)
2025-07-09 11:16:04,815:INFO:Checking exceptions
2025-07-09 11:16:04,815:INFO:Preloading libraries
2025-07-09 11:16:04,816:INFO:Set up data.
2025-07-09 11:16:04,840:INFO:Set up index.
2025-07-09 11:16:51,327:INFO:Initializing predict_model()
2025-07-09 11:16:51,328:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B723BD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B4DB47D80>)
2025-07-09 11:16:51,328:INFO:Checking exceptions
2025-07-09 11:16:51,328:INFO:Preloading libraries
2025-07-09 11:16:51,328:INFO:Set up data.
2025-07-09 11:16:51,343:INFO:Set up index.
2025-07-09 11:18:17,492:INFO:Initializing predict_model()
2025-07-09 11:18:17,492:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B0871D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B44EC58A0>)
2025-07-09 11:18:17,493:INFO:Checking exceptions
2025-07-09 11:18:17,493:INFO:Preloading libraries
2025-07-09 11:18:17,493:INFO:Set up data.
2025-07-09 11:18:17,509:INFO:Set up index.
2025-07-09 11:42:46,256:INFO:Initializing predict_model()
2025-07-09 11:42:46,258:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B6E0D10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B419D3F60>)
2025-07-09 11:42:46,258:INFO:Checking exceptions
2025-07-09 11:42:46,258:INFO:Preloading libraries
2025-07-09 11:42:46,258:INFO:Set up data.
2025-07-09 11:42:46,276:INFO:Set up index.
2025-07-09 11:47:49,669:INFO:Initializing predict_model()
2025-07-09 11:47:49,669:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B124FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B419DC0E0>)
2025-07-09 11:47:49,669:INFO:Checking exceptions
2025-07-09 11:47:49,670:INFO:Preloading libraries
2025-07-09 11:47:49,670:INFO:Set up data.
2025-07-09 11:47:49,701:INFO:Set up index.
2025-07-09 11:47:54,588:INFO:Initializing predict_model()
2025-07-09 11:47:54,588:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B649650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B44EC5440>)
2025-07-09 11:47:54,589:INFO:Checking exceptions
2025-07-09 11:47:54,589:INFO:Preloading libraries
2025-07-09 11:47:54,589:INFO:Set up data.
2025-07-09 11:47:54,615:INFO:Set up index.
2025-07-09 11:48:26,384:INFO:Initializing predict_model()
2025-07-09 11:48:26,384:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B67C650>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B5B0BB420>)
2025-07-09 11:48:26,384:INFO:Checking exceptions
2025-07-09 11:48:26,385:INFO:Preloading libraries
2025-07-09 11:48:26,385:INFO:Set up data.
2025-07-09 11:48:26,405:INFO:Set up index.
2025-07-09 11:50:08,372:INFO:Initializing predict_model()
2025-07-09 11:50:08,372:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B7E0FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B59A0F740>)
2025-07-09 11:50:08,372:INFO:Checking exceptions
2025-07-09 11:50:08,372:INFO:Preloading libraries
2025-07-09 11:50:08,373:INFO:Set up data.
2025-07-09 11:50:08,400:INFO:Set up index.
2025-07-09 11:50:13,369:INFO:Initializing predict_model()
2025-07-09 11:50:13,369:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5AFDCA50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B59A0F740>)
2025-07-09 11:50:13,369:INFO:Checking exceptions
2025-07-09 11:50:13,369:INFO:Preloading libraries
2025-07-09 11:50:13,370:INFO:Set up data.
2025-07-09 11:50:13,398:INFO:Set up index.
2025-07-09 11:52:58,147:INFO:Initializing predict_model()
2025-07-09 11:52:58,147:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B65A050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B5B06A980>)
2025-07-09 11:52:58,147:INFO:Checking exceptions
2025-07-09 11:52:58,147:INFO:Preloading libraries
2025-07-09 11:52:58,148:INFO:Set up data.
2025-07-09 11:52:58,167:INFO:Set up index.
2025-07-09 11:53:29,977:INFO:Initializing predict_model()
2025-07-09 11:53:29,977:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B659910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B5B0680E0>)
2025-07-09 11:53:29,979:INFO:Checking exceptions
2025-07-09 11:53:29,979:INFO:Preloading libraries
2025-07-09 11:53:29,981:INFO:Set up data.
2025-07-09 11:53:30,001:INFO:Set up index.
2025-07-09 11:53:39,332:INFO:Initializing predict_model()
2025-07-09 11:53:39,332:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5AFEDE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B5B068B80>)
2025-07-09 11:53:39,332:INFO:Checking exceptions
2025-07-09 11:53:39,332:INFO:Preloading libraries
2025-07-09 11:53:39,332:INFO:Set up data.
2025-07-09 11:53:39,345:INFO:Set up index.
2025-07-09 11:53:44,380:INFO:Initializing predict_model()
2025-07-09 11:53:44,380:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B6D16D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B419DC0E0>)
2025-07-09 11:53:44,380:INFO:Checking exceptions
2025-07-09 11:53:44,380:INFO:Preloading libraries
2025-07-09 11:53:44,381:INFO:Set up data.
2025-07-09 11:53:44,401:INFO:Set up index.
2025-07-09 12:38:15,082:INFO:Initializing predict_model()
2025-07-09 12:38:15,085:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B645A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B5B0B9DA0>)
2025-07-09 12:38:15,085:INFO:Checking exceptions
2025-07-09 12:38:15,085:INFO:Preloading libraries
2025-07-09 12:38:15,086:INFO:Set up data.
2025-07-09 12:38:15,129:INFO:Set up index.
2025-07-09 12:39:35,495:INFO:Initializing predict_model()
2025-07-09 12:39:35,496:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B6AEFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B5B0B9800>)
2025-07-09 12:39:35,496:INFO:Checking exceptions
2025-07-09 12:39:35,497:INFO:Preloading libraries
2025-07-09 12:39:35,497:INFO:Set up data.
2025-07-09 12:39:35,518:INFO:Set up index.
2025-07-09 12:41:38,377:INFO:Initializing predict_model()
2025-07-09 12:41:38,377:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B1161D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B5B0BB880>)
2025-07-09 12:41:38,377:INFO:Checking exceptions
2025-07-09 12:41:38,378:INFO:Preloading libraries
2025-07-09 12:41:38,378:INFO:Set up data.
2025-07-09 12:41:38,398:INFO:Set up index.
2025-07-09 12:43:05,053:INFO:Initializing predict_model()
2025-07-09 12:43:05,053:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B0F8C90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B59A0D1C0>)
2025-07-09 12:43:05,053:INFO:Checking exceptions
2025-07-09 12:43:05,053:INFO:Preloading libraries
2025-07-09 12:43:05,053:INFO:Set up data.
2025-07-09 12:43:05,072:INFO:Set up index.
2025-07-09 12:44:49,144:INFO:Initializing predict_model()
2025-07-09 12:44:49,144:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B65A6D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B5B0BAFC0>)
2025-07-09 12:44:49,144:INFO:Checking exceptions
2025-07-09 12:44:49,144:INFO:Preloading libraries
2025-07-09 12:44:49,146:INFO:Set up data.
2025-07-09 12:44:49,167:INFO:Set up index.
2025-07-09 12:45:08,652:INFO:Initializing predict_model()
2025-07-09 12:45:08,653:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B7F0A50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B4258BB00>)
2025-07-09 12:45:08,654:INFO:Checking exceptions
2025-07-09 12:45:08,655:INFO:Preloading libraries
2025-07-09 12:45:08,658:INFO:Set up data.
2025-07-09 12:45:08,692:INFO:Set up index.
2025-07-09 12:45:14,037:INFO:Initializing predict_model()
2025-07-09 12:45:14,037:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027B5B713590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_titular_mandante',
                                             'idade_media_titular_...
                                                                    'time_visitante'],
                                                              handle_missing='return_nan'))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=42))),
                ('balance',
                 TransformerWrapper(transformer=FixImbalancer(estimator=SMOTE(random_state=42)))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LGBMClassifier(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027B44EC51C0>)
2025-07-09 12:45:14,038:INFO:Checking exceptions
2025-07-09 12:45:14,038:INFO:Preloading libraries
2025-07-09 12:45:14,038:INFO:Set up data.
2025-07-09 12:45:14,058:INFO:Set up index.
2025-07-09 14:31:24,561:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:31:24,562:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:31:24,562:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:31:24,562:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:40:19,220:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:40:19,221:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:40:19,221:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:40:19,221:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:41:09,725:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:41:09,725:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:41:09,725:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:41:09,725:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:41:11,989:INFO:PyCaret ClassificationExperiment
2025-07-09 14:41:11,989:INFO:Logging name: clf-default-name
2025-07-09 14:41:11,990:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-09 14:41:11,990:INFO:version 3.3.2
2025-07-09 14:41:11,990:INFO:Initializing setup()
2025-07-09 14:41:11,990:INFO:self.USI: ed6c
2025-07-09 14:41:11,990:INFO:self._variable_keys: {'idx', 'data', 'gpu_param', 'y_test', 'exp_name_log', 'is_multiclass', 'fold_generator', '_available_plots', 'gpu_n_jobs_param', 'fold_groups_param', 'seed', 'logging_param', 'fold_shuffle_param', 'target_param', 'exp_id', 'X', 'fix_imbalance', 'y_train', 'memory', 'pipeline', '_ml_usecase', 'html_param', 'log_plots_param', 'y', 'X_test', 'X_train', 'USI', 'n_jobs_param'}
2025-07-09 14:41:11,990:INFO:Checking environment
2025-07-09 14:41:11,990:INFO:python_version: 3.11.13
2025-07-09 14:41:11,990:INFO:python_build: ('main', 'Jun  5 2025 13:03:15')
2025-07-09 14:41:11,990:INFO:machine: AMD64
2025-07-09 14:41:12,010:INFO:platform: Windows-10-10.0.19045-SP0
2025-07-09 14:41:12,013:INFO:Memory: svmem(total=8459489280, available=853188608, percent=89.9, used=7606300672, free=853188608)
2025-07-09 14:41:12,013:INFO:Physical Core: 2
2025-07-09 14:41:12,013:INFO:Logical Core: 4
2025-07-09 14:41:12,013:INFO:Checking libraries
2025-07-09 14:41:12,013:INFO:System:
2025-07-09 14:41:12,013:INFO:    python: 3.11.13 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:03:15) [MSC v.1929 64 bit (AMD64)]
2025-07-09 14:41:12,013:INFO:executable: C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\python.exe
2025-07-09 14:41:12,013:INFO:   machine: Windows-10-10.0.19045-SP0
2025-07-09 14:41:12,014:INFO:PyCaret required dependencies:
2025-07-09 14:41:12,098:INFO:                 pip: 25.1
2025-07-09 14:41:12,098:INFO:          setuptools: 78.1.1
2025-07-09 14:41:12,098:INFO:             pycaret: 3.3.2
2025-07-09 14:41:12,099:INFO:             IPython: 9.4.0
2025-07-09 14:41:12,099:INFO:          ipywidgets: 8.1.7
2025-07-09 14:41:12,099:INFO:                tqdm: 4.67.1
2025-07-09 14:41:12,099:INFO:               numpy: 1.26.4
2025-07-09 14:41:12,099:INFO:              pandas: 2.1.4
2025-07-09 14:41:12,099:INFO:              jinja2: 3.1.6
2025-07-09 14:41:12,100:INFO:               scipy: 1.11.4
2025-07-09 14:41:12,100:INFO:              joblib: 1.3.2
2025-07-09 14:41:12,100:INFO:             sklearn: 1.4.2
2025-07-09 14:41:12,100:INFO:                pyod: 2.0.5
2025-07-09 14:41:12,100:INFO:            imblearn: 0.13.0
2025-07-09 14:41:12,100:INFO:   category_encoders: 2.7.0
2025-07-09 14:41:12,101:INFO:            lightgbm: 4.6.0
2025-07-09 14:41:12,101:INFO:               numba: 0.61.2
2025-07-09 14:41:12,101:INFO:            requests: 2.32.4
2025-07-09 14:41:12,101:INFO:          matplotlib: 3.7.5
2025-07-09 14:41:12,101:INFO:          scikitplot: 0.3.7
2025-07-09 14:41:12,101:INFO:         yellowbrick: 1.5
2025-07-09 14:41:12,101:INFO:              plotly: 5.24.1
2025-07-09 14:41:12,102:INFO:    plotly-resampler: Not installed
2025-07-09 14:41:12,102:INFO:             kaleido: 1.0.0
2025-07-09 14:41:12,102:INFO:           schemdraw: 0.15
2025-07-09 14:41:12,102:INFO:         statsmodels: 0.14.5
2025-07-09 14:41:12,102:INFO:              sktime: 0.26.0
2025-07-09 14:41:12,102:INFO:               tbats: 1.1.3
2025-07-09 14:41:12,102:INFO:            pmdarima: 2.0.4
2025-07-09 14:41:12,103:INFO:              psutil: 7.0.0
2025-07-09 14:41:12,103:INFO:          markupsafe: 3.0.2
2025-07-09 14:41:12,103:INFO:             pickle5: Not installed
2025-07-09 14:41:12,103:INFO:         cloudpickle: 3.1.1
2025-07-09 14:41:12,103:INFO:         deprecation: 2.1.0
2025-07-09 14:41:12,103:INFO:              xxhash: 3.5.0
2025-07-09 14:41:12,103:INFO:           wurlitzer: Not installed
2025-07-09 14:41:12,103:INFO:PyCaret optional dependencies:
2025-07-09 14:41:12,131:INFO:                shap: Not installed
2025-07-09 14:41:12,131:INFO:           interpret: Not installed
2025-07-09 14:41:12,131:INFO:                umap: Not installed
2025-07-09 14:41:12,131:INFO:     ydata_profiling: Not installed
2025-07-09 14:41:12,131:INFO:  explainerdashboard: Not installed
2025-07-09 14:41:12,131:INFO:             autoviz: Not installed
2025-07-09 14:41:12,131:INFO:           fairlearn: Not installed
2025-07-09 14:41:12,131:INFO:          deepchecks: Not installed
2025-07-09 14:41:12,131:INFO:             xgboost: Not installed
2025-07-09 14:41:12,131:INFO:            catboost: Not installed
2025-07-09 14:41:12,131:INFO:              kmodes: Not installed
2025-07-09 14:41:12,131:INFO:             mlxtend: Not installed
2025-07-09 14:41:12,131:INFO:       statsforecast: Not installed
2025-07-09 14:41:12,131:INFO:        tune_sklearn: Not installed
2025-07-09 14:41:12,131:INFO:                 ray: Not installed
2025-07-09 14:41:12,131:INFO:            hyperopt: Not installed
2025-07-09 14:41:12,131:INFO:              optuna: Not installed
2025-07-09 14:41:12,131:INFO:               skopt: Not installed
2025-07-09 14:41:12,132:INFO:              mlflow: Not installed
2025-07-09 14:41:12,132:INFO:              gradio: Not installed
2025-07-09 14:41:12,132:INFO:             fastapi: Not installed
2025-07-09 14:41:12,132:INFO:             uvicorn: Not installed
2025-07-09 14:41:12,132:INFO:              m2cgen: Not installed
2025-07-09 14:41:12,132:INFO:           evidently: Not installed
2025-07-09 14:41:12,132:INFO:               fugue: Not installed
2025-07-09 14:41:12,132:INFO:           streamlit: 1.46.1
2025-07-09 14:41:12,132:INFO:             prophet: Not installed
2025-07-09 14:41:12,132:INFO:None
2025-07-09 14:41:12,132:INFO:Set up data.
2025-07-09 14:41:12,162:INFO:Set up folding strategy.
2025-07-09 14:41:12,162:INFO:Set up train/test split.
2025-07-09 14:41:12,200:INFO:Set up index.
2025-07-09 14:41:12,200:INFO:Assigning column types.
2025-07-09 14:41:12,209:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-09 14:41:12,259:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-09 14:41:12,264:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-09 14:41:12,322:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:41:12,322:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:41:12,426:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-09 14:41:12,426:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-09 14:41:12,479:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:41:12,479:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:41:12,480:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-09 14:41:12,566:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-09 14:41:12,604:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:41:12,604:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:41:12,655:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-09 14:41:12,686:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:41:12,686:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:41:12,686:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-09 14:41:12,771:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:41:12,772:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:41:12,858:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:41:12,859:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:41:12,866:INFO:Preparing preprocessing pipeline...
2025-07-09 14:41:12,870:INFO:Set up label encoding.
2025-07-09 14:41:12,870:INFO:Set up simple imputation.
2025-07-09 14:41:12,875:INFO:Set up encoding of categorical features.
2025-07-09 14:41:12,875:INFO:Set up feature normalization.
2025-07-09 14:41:13,050:INFO:Finished creating preprocessing pipeline.
2025-07-09 14:41:13,062:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\flavi\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor...
                                    transformer=TargetEncoder(cols=['estadio',
                                                                    'time_mandante',
                                                                    'time_visitante'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-07-09 14:41:13,062:INFO:Creating final display dataframe.
2025-07-09 14:41:13,464:INFO:Setup _display_container:                     Description                        Value
0                    Session id                           42
1                        Target           resultado_ajustado
2                   Target type                   Multiclass
3                Target mapping  Casa: 0, Empate: 1, Fora: 2
4           Original data shape                   (3286, 40)
5        Transformed data shape                   (3286, 31)
6   Transformed train set shape                   (2300, 31)
7    Transformed test set shape                    (986, 31)
8               Ignore features                            9
9              Numeric features                           26
10         Categorical features                            4
11     Rows with missing values                        74.9%
12                   Preprocess                         True
13              Imputation type                       simple
14           Numeric imputation                         mean
15       Categorical imputation                         mode
16     Maximum one-hot encoding                           25
17              Encoding method                         None
18                    Normalize                         True
19             Normalize method                       zscore
20               Fold Generator              StratifiedKFold
21                  Fold Number                           10
22                     CPU Jobs                           -1
23                      Use GPU                        False
24               Log Experiment                        False
25              Experiment Name             clf-default-name
26                          USI                         ed6c
2025-07-09 14:41:13,544:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:41:13,545:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:41:13,626:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:41:13,627:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:41:13,629:INFO:setup() successfully completed in 1.65s...............
2025-07-09 14:43:03,700:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:43:03,700:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:43:03,700:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:43:03,700:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:43:28,137:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:43:28,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:43:28,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:43:28,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 14:43:30,234:INFO:PyCaret ClassificationExperiment
2025-07-09 14:43:30,235:INFO:Logging name: clf-default-name
2025-07-09 14:43:30,235:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-09 14:43:30,235:INFO:version 3.3.2
2025-07-09 14:43:30,235:INFO:Initializing setup()
2025-07-09 14:43:30,235:INFO:self.USI: 35cb
2025-07-09 14:43:30,235:INFO:self._variable_keys: {'exp_id', 'gpu_param', 'html_param', 'n_jobs_param', 'logging_param', 'data', 'gpu_n_jobs_param', 'fold_shuffle_param', 'y_test', 'y', '_ml_usecase', 'seed', 'X_train', '_available_plots', 'USI', 'target_param', 'pipeline', 'fold_groups_param', 'is_multiclass', 'y_train', 'log_plots_param', 'fix_imbalance', 'X_test', 'fold_generator', 'memory', 'X', 'exp_name_log', 'idx'}
2025-07-09 14:43:30,235:INFO:Checking environment
2025-07-09 14:43:30,235:INFO:python_version: 3.11.13
2025-07-09 14:43:30,235:INFO:python_build: ('main', 'Jun  5 2025 13:03:15')
2025-07-09 14:43:30,236:INFO:machine: AMD64
2025-07-09 14:43:30,255:INFO:platform: Windows-10-10.0.19045-SP0
2025-07-09 14:43:30,257:INFO:Memory: svmem(total=8459489280, available=804036608, percent=90.5, used=7655452672, free=804036608)
2025-07-09 14:43:30,257:INFO:Physical Core: 2
2025-07-09 14:43:30,258:INFO:Logical Core: 4
2025-07-09 14:43:30,258:INFO:Checking libraries
2025-07-09 14:43:30,258:INFO:System:
2025-07-09 14:43:30,258:INFO:    python: 3.11.13 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:03:15) [MSC v.1929 64 bit (AMD64)]
2025-07-09 14:43:30,258:INFO:executable: C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\python.exe
2025-07-09 14:43:30,258:INFO:   machine: Windows-10-10.0.19045-SP0
2025-07-09 14:43:30,258:INFO:PyCaret required dependencies:
2025-07-09 14:43:30,294:INFO:                 pip: 25.1
2025-07-09 14:43:30,294:INFO:          setuptools: 78.1.1
2025-07-09 14:43:30,294:INFO:             pycaret: 3.3.2
2025-07-09 14:43:30,294:INFO:             IPython: 9.4.0
2025-07-09 14:43:30,294:INFO:          ipywidgets: 8.1.7
2025-07-09 14:43:30,294:INFO:                tqdm: 4.67.1
2025-07-09 14:43:30,294:INFO:               numpy: 1.26.4
2025-07-09 14:43:30,294:INFO:              pandas: 2.1.4
2025-07-09 14:43:30,294:INFO:              jinja2: 3.1.6
2025-07-09 14:43:30,294:INFO:               scipy: 1.11.4
2025-07-09 14:43:30,294:INFO:              joblib: 1.3.2
2025-07-09 14:43:30,294:INFO:             sklearn: 1.4.2
2025-07-09 14:43:30,294:INFO:                pyod: 2.0.5
2025-07-09 14:43:30,294:INFO:            imblearn: 0.13.0
2025-07-09 14:43:30,294:INFO:   category_encoders: 2.7.0
2025-07-09 14:43:30,294:INFO:            lightgbm: 4.6.0
2025-07-09 14:43:30,294:INFO:               numba: 0.61.2
2025-07-09 14:43:30,294:INFO:            requests: 2.32.4
2025-07-09 14:43:30,295:INFO:          matplotlib: 3.7.5
2025-07-09 14:43:30,295:INFO:          scikitplot: 0.3.7
2025-07-09 14:43:30,295:INFO:         yellowbrick: 1.5
2025-07-09 14:43:30,295:INFO:              plotly: 5.24.1
2025-07-09 14:43:30,295:INFO:    plotly-resampler: Not installed
2025-07-09 14:43:30,295:INFO:             kaleido: 1.0.0
2025-07-09 14:43:30,295:INFO:           schemdraw: 0.15
2025-07-09 14:43:30,295:INFO:         statsmodels: 0.14.5
2025-07-09 14:43:30,295:INFO:              sktime: 0.26.0
2025-07-09 14:43:30,295:INFO:               tbats: 1.1.3
2025-07-09 14:43:30,295:INFO:            pmdarima: 2.0.4
2025-07-09 14:43:30,295:INFO:              psutil: 7.0.0
2025-07-09 14:43:30,295:INFO:          markupsafe: 3.0.2
2025-07-09 14:43:30,295:INFO:             pickle5: Not installed
2025-07-09 14:43:30,295:INFO:         cloudpickle: 3.1.1
2025-07-09 14:43:30,295:INFO:         deprecation: 2.1.0
2025-07-09 14:43:30,295:INFO:              xxhash: 3.5.0
2025-07-09 14:43:30,295:INFO:           wurlitzer: Not installed
2025-07-09 14:43:30,296:INFO:PyCaret optional dependencies:
2025-07-09 14:43:30,311:INFO:                shap: Not installed
2025-07-09 14:43:30,312:INFO:           interpret: Not installed
2025-07-09 14:43:30,312:INFO:                umap: Not installed
2025-07-09 14:43:30,312:INFO:     ydata_profiling: Not installed
2025-07-09 14:43:30,312:INFO:  explainerdashboard: Not installed
2025-07-09 14:43:30,312:INFO:             autoviz: Not installed
2025-07-09 14:43:30,312:INFO:           fairlearn: Not installed
2025-07-09 14:43:30,312:INFO:          deepchecks: Not installed
2025-07-09 14:43:30,312:INFO:             xgboost: Not installed
2025-07-09 14:43:30,312:INFO:            catboost: Not installed
2025-07-09 14:43:30,312:INFO:              kmodes: Not installed
2025-07-09 14:43:30,312:INFO:             mlxtend: Not installed
2025-07-09 14:43:30,312:INFO:       statsforecast: Not installed
2025-07-09 14:43:30,312:INFO:        tune_sklearn: Not installed
2025-07-09 14:43:30,312:INFO:                 ray: Not installed
2025-07-09 14:43:30,312:INFO:            hyperopt: Not installed
2025-07-09 14:43:30,312:INFO:              optuna: Not installed
2025-07-09 14:43:30,312:INFO:               skopt: Not installed
2025-07-09 14:43:30,313:INFO:              mlflow: Not installed
2025-07-09 14:43:30,313:INFO:              gradio: Not installed
2025-07-09 14:43:30,313:INFO:             fastapi: Not installed
2025-07-09 14:43:30,313:INFO:             uvicorn: Not installed
2025-07-09 14:43:30,313:INFO:              m2cgen: Not installed
2025-07-09 14:43:30,313:INFO:           evidently: Not installed
2025-07-09 14:43:30,313:INFO:               fugue: Not installed
2025-07-09 14:43:30,313:INFO:           streamlit: 1.46.1
2025-07-09 14:43:30,313:INFO:             prophet: Not installed
2025-07-09 14:43:30,313:INFO:None
2025-07-09 14:43:30,313:INFO:Set up data.
2025-07-09 14:43:30,336:INFO:Set up folding strategy.
2025-07-09 14:43:30,336:INFO:Set up train/test split.
2025-07-09 14:43:30,353:INFO:Set up index.
2025-07-09 14:43:30,354:INFO:Assigning column types.
2025-07-09 14:43:30,362:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-09 14:43:30,411:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-09 14:43:30,415:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-09 14:43:30,453:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:43:30,454:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:43:30,501:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-09 14:43:30,502:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-09 14:43:30,532:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:43:30,532:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:43:30,533:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-09 14:43:30,592:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-09 14:43:30,646:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:43:30,646:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:43:30,701:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-09 14:43:30,731:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:43:30,732:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:43:30,732:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-09 14:43:31,003:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:43:31,003:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:43:31,131:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:43:31,131:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:43:31,133:INFO:Preparing preprocessing pipeline...
2025-07-09 14:43:31,135:INFO:Set up label encoding.
2025-07-09 14:43:31,135:INFO:Set up simple imputation.
2025-07-09 14:43:31,140:INFO:Set up encoding of categorical features.
2025-07-09 14:43:31,140:INFO:Set up feature normalization.
2025-07-09 14:43:31,335:INFO:Finished creating preprocessing pipeline.
2025-07-09 14:43:31,346:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\flavi\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor...
                                    transformer=TargetEncoder(cols=['estadio',
                                                                    'time_mandante',
                                                                    'time_visitante'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-07-09 14:43:31,346:INFO:Creating final display dataframe.
2025-07-09 14:43:31,899:INFO:Setup _display_container:                     Description                        Value
0                    Session id                           42
1                        Target           resultado_ajustado
2                   Target type                   Multiclass
3                Target mapping  Casa: 0, Empate: 1, Fora: 2
4           Original data shape                   (3286, 40)
5        Transformed data shape                   (3286, 31)
6   Transformed train set shape                   (2300, 31)
7    Transformed test set shape                    (986, 31)
8               Ignore features                            9
9              Numeric features                           26
10         Categorical features                            4
11     Rows with missing values                        74.9%
12                   Preprocess                         True
13              Imputation type                       simple
14           Numeric imputation                         mean
15       Categorical imputation                         mode
16     Maximum one-hot encoding                           25
17              Encoding method                         None
18                    Normalize                         True
19             Normalize method                       zscore
20               Fold Generator              StratifiedKFold
21                  Fold Number                           10
22                     CPU Jobs                           -1
23                      Use GPU                        False
24               Log Experiment                        False
25              Experiment Name             clf-default-name
26                          USI                         35cb
2025-07-09 14:43:31,980:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:43:31,981:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:43:32,070:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:43:32,070:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 14:43:32,072:INFO:setup() successfully completed in 1.84s...............
2025-07-09 14:43:32,073:INFO:Initializing compare_models()
2025-07-09 14:43:32,073:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025442D33D90>, include=None, exclude=None, fold=5, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000025442D33D90>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-07-09 14:43:32,073:INFO:Checking exceptions
2025-07-09 14:43:32,083:INFO:Preparing display monitor
2025-07-09 14:43:32,093:INFO:Initializing Logistic Regression
2025-07-09 14:43:32,094:INFO:Total runtime is 1.6597906748453774e-05 minutes
2025-07-09 14:43:32,094:INFO:SubProcess create_model() called ==================================
2025-07-09 14:43:32,094:INFO:Initializing create_model()
2025-07-09 14:43:32,094:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025442D33D90>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025450C20910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 14:43:32,094:INFO:Checking exceptions
2025-07-09 14:43:32,094:INFO:Importing libraries
2025-07-09 14:43:32,094:INFO:Copying training dataset
2025-07-09 14:43:32,106:INFO:Defining folds
2025-07-09 14:43:32,106:INFO:Declaring metric variables
2025-07-09 14:43:32,106:INFO:Importing untrained model
2025-07-09 14:43:32,106:INFO:Logistic Regression Imported successfully
2025-07-09 14:43:32,107:INFO:Starting cross validation
2025-07-09 14:43:32,109:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 14:43:32,140:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 14:43:39,403:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:39,412:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:39,414:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:39,424:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:39,428:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:39,428:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:39,432:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:39,433:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:39,436:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:39,437:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:39,442:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:39,526:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:39,533:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:39,539:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:39,542:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:39,545:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:39,548:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:39,553:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:39,608:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:39,612:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:39,617:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:39,622:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:39,625:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:39,718:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:39,720:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:39,725:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:39,727:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:39,729:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:39,737:INFO:Calculating mean and std
2025-07-09 14:43:39,740:INFO:Creating metrics dataframe
2025-07-09 14:43:39,747:INFO:Uploading results into container
2025-07-09 14:43:39,748:INFO:Uploading model into container now
2025-07-09 14:43:39,749:INFO:_master_model_container: 1
2025-07-09 14:43:39,749:INFO:_display_container: 2
2025-07-09 14:43:39,750:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-09 14:43:39,750:INFO:create_model() successfully completed......................................
2025-07-09 14:43:39,832:INFO:SubProcess create_model() end ==================================
2025-07-09 14:43:39,832:INFO:Creating metrics dataframe
2025-07-09 14:43:39,834:INFO:Initializing K Neighbors Classifier
2025-07-09 14:43:39,834:INFO:Total runtime is 0.12901830673217773 minutes
2025-07-09 14:43:39,835:INFO:SubProcess create_model() called ==================================
2025-07-09 14:43:39,835:INFO:Initializing create_model()
2025-07-09 14:43:39,835:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025442D33D90>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025450C20910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 14:43:39,835:INFO:Checking exceptions
2025-07-09 14:43:39,835:INFO:Importing libraries
2025-07-09 14:43:39,835:INFO:Copying training dataset
2025-07-09 14:43:39,845:INFO:Defining folds
2025-07-09 14:43:39,845:INFO:Declaring metric variables
2025-07-09 14:43:39,845:INFO:Importing untrained model
2025-07-09 14:43:39,845:INFO:K Neighbors Classifier Imported successfully
2025-07-09 14:43:39,846:INFO:Starting cross validation
2025-07-09 14:43:39,847:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 14:43:39,851:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 14:43:40,297:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 14:43:40,300:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 14:43:40,302:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:40,304:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:40,307:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

etric.capitalize()} is", len(result))

2025-07-09 14:43:40,307:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:40,309:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:40,311:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:40,313:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:40,315:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:40,316:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:40,318:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:40,319:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:40,320:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:40,322:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:40,322:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:40,323:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:40,325:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:40,326:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:40,326:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:40,485:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:40,490:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:40,493:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:40,495:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:40,511:INFO:Calculating mean and std
2025-07-09 14:43:40,513:INFO:Creating metrics dataframe
2025-07-09 14:43:40,516:INFO:Uploading results into container
2025-07-09 14:43:40,517:INFO:Uploading model into container now
2025-07-09 14:43:40,518:INFO:_master_model_container: 2
2025-07-09 14:43:40,518:INFO:_display_container: 2
2025-07-09 14:43:40,518:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-07-09 14:43:40,518:INFO:create_model() successfully completed......................................
2025-07-09 14:43:40,584:INFO:SubProcess create_model() end ==================================
2025-07-09 14:43:40,584:INFO:Creating metrics dataframe
2025-07-09 14:43:40,589:INFO:Initializing Naive Bayes
2025-07-09 14:43:40,589:INFO:Total runtime is 0.14160139560699464 minutes
2025-07-09 14:43:40,589:INFO:SubProcess create_model() called ==================================
2025-07-09 14:43:40,589:INFO:Initializing create_model()
2025-07-09 14:43:40,589:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025442D33D90>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025450C20910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 14:43:40,589:INFO:Checking exceptions
2025-07-09 14:43:40,589:INFO:Importing libraries
2025-07-09 14:43:40,590:INFO:Copying training dataset
2025-07-09 14:43:40,599:INFO:Defining folds
2025-07-09 14:43:40,599:INFO:Declaring metric variables
2025-07-09 14:43:40,600:INFO:Importing untrained model
2025-07-09 14:43:40,600:INFO:Naive Bayes Imported successfully
2025-07-09 14:43:40,601:INFO:Starting cross validation
2025-07-09 14:43:40,603:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 14:43:40,607:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 14:43:40,819:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 14:43:40,821:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:40,826:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:40,829:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 14:43:40,831:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:40,833:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:40,837:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:40,839:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:40,841:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:40,844:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:40,846:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:40,849:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:40,851:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:40,854:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:40,859:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:40,862:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:40,977:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:40,982:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:40,986:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:41,003:INFO:Calculating mean and std
2025-07-09 14:43:41,004:INFO:Creating metrics dataframe
2025-07-09 14:43:41,006:INFO:Uploading results into container
2025-07-09 14:43:41,007:INFO:Uploading model into container now
2025-07-09 14:43:41,007:INFO:_master_model_container: 3
2025-07-09 14:43:41,007:INFO:_display_container: 2
2025-07-09 14:43:41,008:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-07-09 14:43:41,008:INFO:create_model() successfully completed......................................
2025-07-09 14:43:41,072:INFO:SubProcess create_model() end ==================================
2025-07-09 14:43:41,072:INFO:Creating metrics dataframe
2025-07-09 14:43:41,075:INFO:Initializing Decision Tree Classifier
2025-07-09 14:43:41,075:INFO:Total runtime is 0.1497032682100932 minutes
2025-07-09 14:43:41,075:INFO:SubProcess create_model() called ==================================
2025-07-09 14:43:41,075:INFO:Initializing create_model()
2025-07-09 14:43:41,076:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025442D33D90>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025450C20910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 14:43:41,076:INFO:Checking exceptions
2025-07-09 14:43:41,076:INFO:Importing libraries
2025-07-09 14:43:41,076:INFO:Copying training dataset
2025-07-09 14:43:41,086:INFO:Defining folds
2025-07-09 14:43:41,086:INFO:Declaring metric variables
2025-07-09 14:43:41,086:INFO:Importing untrained model
2025-07-09 14:43:41,086:INFO:Decision Tree Classifier Imported successfully
2025-07-09 14:43:41,087:INFO:Starting cross validation
2025-07-09 14:43:41,088:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 14:43:41,092:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 14:43:41,343:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 14:43:41,346:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:41,347:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:41,348:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:41,350:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:41,351:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:41,353:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:41,353:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:41,355:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:41,357:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:41,357:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:41,361:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:41,361:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:41,362:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:41,365:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:41,366:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:41,370:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:41,507:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:41,512:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:41,514:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:41,516:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:41,525:INFO:Calculating mean and std
2025-07-09 14:43:41,527:INFO:Creating metrics dataframe
2025-07-09 14:43:41,531:INFO:Uploading results into container
2025-07-09 14:43:41,531:INFO:Uploading model into container now
2025-07-09 14:43:41,532:INFO:_master_model_container: 4
2025-07-09 14:43:41,532:INFO:_display_container: 2
2025-07-09 14:43:41,533:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-07-09 14:43:41,533:INFO:create_model() successfully completed......................................
2025-07-09 14:43:41,599:INFO:SubProcess create_model() end ==================================
2025-07-09 14:43:41,599:INFO:Creating metrics dataframe
2025-07-09 14:43:41,602:INFO:Initializing SVM - Linear Kernel
2025-07-09 14:43:41,602:INFO:Total runtime is 0.15849375327428183 minutes
2025-07-09 14:43:41,602:INFO:SubProcess create_model() called ==================================
2025-07-09 14:43:41,602:INFO:Initializing create_model()
2025-07-09 14:43:41,602:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025442D33D90>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025450C20910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 14:43:41,603:INFO:Checking exceptions
2025-07-09 14:43:41,603:INFO:Importing libraries
2025-07-09 14:43:41,603:INFO:Copying training dataset
2025-07-09 14:43:41,613:INFO:Defining folds
2025-07-09 14:43:41,613:INFO:Declaring metric variables
2025-07-09 14:43:41,613:INFO:Importing untrained model
2025-07-09 14:43:41,613:INFO:SVM - Linear Kernel Imported successfully
2025-07-09 14:43:41,613:INFO:Starting cross validation
2025-07-09 14:43:41,615:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 14:43:41,618:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 14:43:41,869:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:41,872:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:41,873:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:41,876:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:41,878:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:41,880:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:41,883:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:41,884:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:41,887:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:41,889:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:41,891:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:41,893:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:41,893:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:41,896:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:41,897:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:41,898:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:41,905:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:41,906:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:41,909:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:41,910:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:41,912:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:41,916:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:41,921:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:41,924:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:42,061:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:42,063:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:42,067:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:42,069:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:42,072:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:42,084:INFO:Calculating mean and std
2025-07-09 14:43:42,085:INFO:Creating metrics dataframe
2025-07-09 14:43:42,087:INFO:Uploading results into container
2025-07-09 14:43:42,087:INFO:Uploading model into container now
2025-07-09 14:43:42,087:INFO:_master_model_container: 5
2025-07-09 14:43:42,088:INFO:_display_container: 2
2025-07-09 14:43:42,088:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-07-09 14:43:42,088:INFO:create_model() successfully completed......................................
2025-07-09 14:43:42,154:INFO:SubProcess create_model() end ==================================
2025-07-09 14:43:42,154:INFO:Creating metrics dataframe
2025-07-09 14:43:42,157:INFO:Initializing Ridge Classifier
2025-07-09 14:43:42,157:INFO:Total runtime is 0.1677364746729533 minutes
2025-07-09 14:43:42,157:INFO:SubProcess create_model() called ==================================
2025-07-09 14:43:42,157:INFO:Initializing create_model()
2025-07-09 14:43:42,157:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025442D33D90>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025450C20910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 14:43:42,157:INFO:Checking exceptions
2025-07-09 14:43:42,157:INFO:Importing libraries
2025-07-09 14:43:42,157:INFO:Copying training dataset
2025-07-09 14:43:42,167:INFO:Defining folds
2025-07-09 14:43:42,167:INFO:Declaring metric variables
2025-07-09 14:43:42,167:INFO:Importing untrained model
2025-07-09 14:43:42,167:INFO:Ridge Classifier Imported successfully
2025-07-09 14:43:42,168:INFO:Starting cross validation
2025-07-09 14:43:42,169:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 14:43:42,173:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 14:43:42,395:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:42,398:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:42,399:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:42,399:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:42,402:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:42,403:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:42,404:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:42,404:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:42,407:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:42,408:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:42,408:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:42,410:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:42,412:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:42,413:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:42,414:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:42,415:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:42,416:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:42,418:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:42,418:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:42,419:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:42,421:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:42,422:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:42,423:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:42,427:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:42,542:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:42,544:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:42,548:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:42,551:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:42,553:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:42,561:INFO:Calculating mean and std
2025-07-09 14:43:42,562:INFO:Creating metrics dataframe
2025-07-09 14:43:42,564:INFO:Uploading results into container
2025-07-09 14:43:42,564:INFO:Uploading model into container now
2025-07-09 14:43:42,564:INFO:_master_model_container: 6
2025-07-09 14:43:42,564:INFO:_display_container: 2
2025-07-09 14:43:42,564:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-07-09 14:43:42,564:INFO:create_model() successfully completed......................................
2025-07-09 14:43:42,631:INFO:SubProcess create_model() end ==================================
2025-07-09 14:43:42,632:INFO:Creating metrics dataframe
2025-07-09 14:43:42,635:INFO:Initializing Random Forest Classifier
2025-07-09 14:43:42,635:INFO:Total runtime is 0.17570528189341228 minutes
2025-07-09 14:43:42,635:INFO:SubProcess create_model() called ==================================
2025-07-09 14:43:42,636:INFO:Initializing create_model()
2025-07-09 14:43:42,636:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025442D33D90>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025450C20910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 14:43:42,636:INFO:Checking exceptions
2025-07-09 14:43:42,636:INFO:Importing libraries
2025-07-09 14:43:42,636:INFO:Copying training dataset
2025-07-09 14:43:42,646:INFO:Defining folds
2025-07-09 14:43:42,646:INFO:Declaring metric variables
2025-07-09 14:43:42,646:INFO:Importing untrained model
2025-07-09 14:43:42,646:INFO:Random Forest Classifier Imported successfully
2025-07-09 14:43:42,647:INFO:Starting cross validation
2025-07-09 14:43:42,649:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 14:43:42,653:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 14:43:43,566:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 14:43:43,583:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:43,583:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 14:43:43,587:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:43,587:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:43,591:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:43,593:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:43,595:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:43,598:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:43,600:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:43,600:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:43,602:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:43,604:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:43,604:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:43,606:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:43,610:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:43,612:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:43,616:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:43,760:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:43,765:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:43,767:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:43,770:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:44,095:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:44,099:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:44,102:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:44,104:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:44,114:INFO:Calculating mean and std
2025-07-09 14:43:44,115:INFO:Creating metrics dataframe
2025-07-09 14:43:44,117:INFO:Uploading results into container
2025-07-09 14:43:44,117:INFO:Uploading model into container now
2025-07-09 14:43:44,118:INFO:_master_model_container: 7
2025-07-09 14:43:44,118:INFO:_display_container: 2
2025-07-09 14:43:44,118:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-07-09 14:43:44,118:INFO:create_model() successfully completed......................................
2025-07-09 14:43:44,184:INFO:SubProcess create_model() end ==================================
2025-07-09 14:43:44,185:INFO:Creating metrics dataframe
2025-07-09 14:43:44,187:INFO:Initializing Quadratic Discriminant Analysis
2025-07-09 14:43:44,187:INFO:Total runtime is 0.20157631238301596 minutes
2025-07-09 14:43:44,188:INFO:SubProcess create_model() called ==================================
2025-07-09 14:43:44,188:INFO:Initializing create_model()
2025-07-09 14:43:44,188:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025442D33D90>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025450C20910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 14:43:44,188:INFO:Checking exceptions
2025-07-09 14:43:44,188:INFO:Importing libraries
2025-07-09 14:43:44,188:INFO:Copying training dataset
2025-07-09 14:43:44,199:INFO:Defining folds
2025-07-09 14:43:44,200:INFO:Declaring metric variables
2025-07-09 14:43:44,200:INFO:Importing untrained model
2025-07-09 14:43:44,200:INFO:Quadratic Discriminant Analysis Imported successfully
2025-07-09 14:43:44,200:INFO:Starting cross validation
2025-07-09 14:43:44,202:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 14:43:44,205:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 14:43:44,379:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-09 14:43:44,441:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:44,442:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:44,444:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:44,445:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:44,445:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:44,447:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:44,448:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:44,448:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:44,451:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:44,452:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:44,452:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:44,455:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:44,456:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:44,456:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:44,456:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:44,459:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:44,460:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:44,460:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:44,461:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:44,464:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:44,464:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:44,465:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:44,468:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:44,469:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:44,552:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-09 14:43:44,588:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:44,590:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:44,594:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:44,597:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:44,599:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:44,610:INFO:Calculating mean and std
2025-07-09 14:43:44,612:INFO:Creating metrics dataframe
2025-07-09 14:43:44,616:INFO:Uploading results into container
2025-07-09 14:43:44,617:INFO:Uploading model into container now
2025-07-09 14:43:44,617:INFO:_master_model_container: 8
2025-07-09 14:43:44,617:INFO:_display_container: 2
2025-07-09 14:43:44,618:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-07-09 14:43:44,618:INFO:create_model() successfully completed......................................
2025-07-09 14:43:44,685:INFO:SubProcess create_model() end ==================================
2025-07-09 14:43:44,685:INFO:Creating metrics dataframe
2025-07-09 14:43:44,688:INFO:Initializing Ada Boost Classifier
2025-07-09 14:43:44,688:INFO:Total runtime is 0.20992555618286135 minutes
2025-07-09 14:43:44,689:INFO:SubProcess create_model() called ==================================
2025-07-09 14:43:44,689:INFO:Initializing create_model()
2025-07-09 14:43:44,689:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025442D33D90>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025450C20910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 14:43:44,689:INFO:Checking exceptions
2025-07-09 14:43:44,689:INFO:Importing libraries
2025-07-09 14:43:44,689:INFO:Copying training dataset
2025-07-09 14:43:44,698:INFO:Defining folds
2025-07-09 14:43:44,698:INFO:Declaring metric variables
2025-07-09 14:43:44,698:INFO:Importing untrained model
2025-07-09 14:43:44,699:INFO:Ada Boost Classifier Imported successfully
2025-07-09 14:43:44,699:INFO:Starting cross validation
2025-07-09 14:43:44,700:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 14:43:44,704:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 14:43:44,847:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-09 14:43:44,847:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-09 14:43:44,851:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-09 14:43:44,863:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-09 14:43:45,229:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:45,231:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:45,233:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:45,234:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:45,235:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:45,238:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:45,240:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:45,242:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:45,242:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:45,244:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:45,246:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:45,247:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:45,248:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:45,250:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:45,251:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:45,252:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:45,253:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:45,255:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:45,256:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:45,257:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:45,264:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:45,267:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:45,272:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:45,348:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-09 14:43:45,593:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:45,595:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:45,599:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:45,602:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:45,604:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:45,617:INFO:Calculating mean and std
2025-07-09 14:43:45,620:INFO:Creating metrics dataframe
2025-07-09 14:43:45,623:INFO:Uploading results into container
2025-07-09 14:43:45,624:INFO:Uploading model into container now
2025-07-09 14:43:45,625:INFO:_master_model_container: 9
2025-07-09 14:43:45,625:INFO:_display_container: 2
2025-07-09 14:43:45,626:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-07-09 14:43:45,626:INFO:create_model() successfully completed......................................
2025-07-09 14:43:45,693:INFO:SubProcess create_model() end ==================================
2025-07-09 14:43:45,693:INFO:Creating metrics dataframe
2025-07-09 14:43:45,696:INFO:Initializing Gradient Boosting Classifier
2025-07-09 14:43:45,696:INFO:Total runtime is 0.2267162879308065 minutes
2025-07-09 14:43:45,696:INFO:SubProcess create_model() called ==================================
2025-07-09 14:43:45,696:INFO:Initializing create_model()
2025-07-09 14:43:45,696:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025442D33D90>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025450C20910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 14:43:45,696:INFO:Checking exceptions
2025-07-09 14:43:45,696:INFO:Importing libraries
2025-07-09 14:43:45,696:INFO:Copying training dataset
2025-07-09 14:43:45,706:INFO:Defining folds
2025-07-09 14:43:45,706:INFO:Declaring metric variables
2025-07-09 14:43:45,706:INFO:Importing untrained model
2025-07-09 14:43:45,707:INFO:Gradient Boosting Classifier Imported successfully
2025-07-09 14:43:45,707:INFO:Starting cross validation
2025-07-09 14:43:45,708:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 14:43:45,712:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 14:43:48,522:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:48,526:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:48,528:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:48,532:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:48,533:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:48,534:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:48,537:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:48,539:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:48,541:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:48,541:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:48,546:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:48,547:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:48,551:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:48,555:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:48,560:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:48,564:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:48,568:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:48,572:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:48,575:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:48,580:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:50,450:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:50,452:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:50,457:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:50,461:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:50,469:INFO:Calculating mean and std
2025-07-09 14:43:50,470:INFO:Creating metrics dataframe
2025-07-09 14:43:50,472:INFO:Uploading results into container
2025-07-09 14:43:50,472:INFO:Uploading model into container now
2025-07-09 14:43:50,473:INFO:_master_model_container: 10
2025-07-09 14:43:50,473:INFO:_display_container: 2
2025-07-09 14:43:50,473:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-07-09 14:43:50,473:INFO:create_model() successfully completed......................................
2025-07-09 14:43:50,539:INFO:SubProcess create_model() end ==================================
2025-07-09 14:43:50,540:INFO:Creating metrics dataframe
2025-07-09 14:43:50,543:INFO:Initializing Linear Discriminant Analysis
2025-07-09 14:43:50,543:INFO:Total runtime is 0.30750950972239177 minutes
2025-07-09 14:43:50,543:INFO:SubProcess create_model() called ==================================
2025-07-09 14:43:50,543:INFO:Initializing create_model()
2025-07-09 14:43:50,543:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025442D33D90>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025450C20910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 14:43:50,543:INFO:Checking exceptions
2025-07-09 14:43:50,543:INFO:Importing libraries
2025-07-09 14:43:50,543:INFO:Copying training dataset
2025-07-09 14:43:50,554:INFO:Defining folds
2025-07-09 14:43:50,554:INFO:Declaring metric variables
2025-07-09 14:43:50,554:INFO:Importing untrained model
2025-07-09 14:43:50,554:INFO:Linear Discriminant Analysis Imported successfully
2025-07-09 14:43:50,555:INFO:Starting cross validation
2025-07-09 14:43:50,556:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 14:43:50,559:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 14:43:50,774:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:50,774:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:50,775:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:50,778:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:50,779:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:50,783:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:50,785:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:50,787:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:50,790:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:50,792:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:50,793:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:50,794:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:50,782:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:50,798:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:50,798:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:50,799:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:50,803:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:50,803:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:50,807:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:50,933:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 14:43:50,935:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:50,940:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:50,945:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:50,962:INFO:Calculating mean and std
2025-07-09 14:43:50,964:INFO:Creating metrics dataframe
2025-07-09 14:43:50,968:INFO:Uploading results into container
2025-07-09 14:43:50,969:INFO:Uploading model into container now
2025-07-09 14:43:50,970:INFO:_master_model_container: 11
2025-07-09 14:43:50,970:INFO:_display_container: 2
2025-07-09 14:43:50,970:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-07-09 14:43:50,971:INFO:create_model() successfully completed......................................
2025-07-09 14:43:51,037:INFO:SubProcess create_model() end ==================================
2025-07-09 14:43:51,037:INFO:Creating metrics dataframe
2025-07-09 14:43:51,040:INFO:Initializing Extra Trees Classifier
2025-07-09 14:43:51,040:INFO:Total runtime is 0.3157910505930583 minutes
2025-07-09 14:43:51,040:INFO:SubProcess create_model() called ==================================
2025-07-09 14:43:51,041:INFO:Initializing create_model()
2025-07-09 14:43:51,041:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025442D33D90>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025450C20910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 14:43:51,041:INFO:Checking exceptions
2025-07-09 14:43:51,041:INFO:Importing libraries
2025-07-09 14:43:51,041:INFO:Copying training dataset
2025-07-09 14:43:51,050:INFO:Defining folds
2025-07-09 14:43:51,051:INFO:Declaring metric variables
2025-07-09 14:43:51,051:INFO:Importing untrained model
2025-07-09 14:43:51,051:INFO:Extra Trees Classifier Imported successfully
2025-07-09 14:43:51,051:INFO:Starting cross validation
2025-07-09 14:43:51,053:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 14:43:51,056:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 14:43:51,862:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 14:43:51,871:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:51,875:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:51,885:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:51,891:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:51,895:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:51,895:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:51,898:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:51,900:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:51,902:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:51,905:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:51,907:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:51,908:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 14:43:51,909:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:51,911:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:51,912:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:51,917:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:51,921:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:51,927:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:51,931:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:51,935:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:52,324:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:52,328:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:52,331:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:52,333:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:52,344:INFO:Calculating mean and std
2025-07-09 14:43:52,345:INFO:Creating metrics dataframe
2025-07-09 14:43:52,347:INFO:Uploading results into container
2025-07-09 14:43:52,347:INFO:Uploading model into container now
2025-07-09 14:43:52,347:INFO:_master_model_container: 12
2025-07-09 14:43:52,348:INFO:_display_container: 2
2025-07-09 14:43:52,348:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-07-09 14:43:52,348:INFO:create_model() successfully completed......................................
2025-07-09 14:43:52,416:INFO:SubProcess create_model() end ==================================
2025-07-09 14:43:52,416:INFO:Creating metrics dataframe
2025-07-09 14:43:52,418:INFO:Initializing Light Gradient Boosting Machine
2025-07-09 14:43:52,418:INFO:Total runtime is 0.3387482166290283 minutes
2025-07-09 14:43:52,419:INFO:SubProcess create_model() called ==================================
2025-07-09 14:43:52,419:INFO:Initializing create_model()
2025-07-09 14:43:52,419:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025442D33D90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025450C20910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 14:43:52,419:INFO:Checking exceptions
2025-07-09 14:43:52,419:INFO:Importing libraries
2025-07-09 14:43:52,419:INFO:Copying training dataset
2025-07-09 14:43:52,428:INFO:Defining folds
2025-07-09 14:43:52,428:INFO:Declaring metric variables
2025-07-09 14:43:52,428:INFO:Importing untrained model
2025-07-09 14:43:52,429:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-09 14:43:52,429:INFO:Starting cross validation
2025-07-09 14:43:52,431:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 14:43:52,434:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 14:43:53,999:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:54,008:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:54,012:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:54,017:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:54,027:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 14:43:54,032:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:54,034:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:54,037:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:54,041:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:54,042:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:54,046:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:54,046:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:54,050:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:54,051:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:54,056:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:54,077:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 14:43:54,081:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:54,085:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:54,088:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:54,097:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:54,776:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:54,787:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:54,793:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:54,799:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:54,819:INFO:Calculating mean and std
2025-07-09 14:43:54,821:INFO:Creating metrics dataframe
2025-07-09 14:43:54,824:INFO:Uploading results into container
2025-07-09 14:43:54,825:INFO:Uploading model into container now
2025-07-09 14:43:54,826:INFO:_master_model_container: 13
2025-07-09 14:43:54,826:INFO:_display_container: 2
2025-07-09 14:43:54,828:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-09 14:43:54,828:INFO:create_model() successfully completed......................................
2025-07-09 14:43:54,910:INFO:SubProcess create_model() end ==================================
2025-07-09 14:43:54,910:INFO:Creating metrics dataframe
2025-07-09 14:43:54,913:INFO:Initializing Dummy Classifier
2025-07-09 14:43:54,913:INFO:Total runtime is 0.3803444027900696 minutes
2025-07-09 14:43:54,913:INFO:SubProcess create_model() called ==================================
2025-07-09 14:43:54,914:INFO:Initializing create_model()
2025-07-09 14:43:54,914:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025442D33D90>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025450C20910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 14:43:54,914:INFO:Checking exceptions
2025-07-09 14:43:54,914:INFO:Importing libraries
2025-07-09 14:43:54,914:INFO:Copying training dataset
2025-07-09 14:43:54,924:INFO:Defining folds
2025-07-09 14:43:54,924:INFO:Declaring metric variables
2025-07-09 14:43:54,924:INFO:Importing untrained model
2025-07-09 14:43:54,925:INFO:Dummy Classifier Imported successfully
2025-07-09 14:43:54,925:INFO:Starting cross validation
2025-07-09 14:43:54,926:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 14:43:54,931:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 14:43:55,130:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 14:43:55,134:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:55,136:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 14:43:55,139:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:55,140:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:55,143:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:55,145:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:55,146:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:55,148:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:55,149:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:55,152:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:55,153:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:55,154:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:55,156:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

 modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:55,157:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:55,159:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:55,162:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:55,163:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:55,165:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:55,169:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:55,174:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:55,284:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:55,289:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:55,291:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 14:43:55,293:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 14:43:55,302:INFO:Calculating mean and std
2025-07-09 14:43:55,304:INFO:Creating metrics dataframe
2025-07-09 14:43:55,308:INFO:Uploading results into container
2025-07-09 14:43:55,309:INFO:Uploading model into container now
2025-07-09 14:43:55,309:INFO:_master_model_container: 14
2025-07-09 14:43:55,309:INFO:_display_container: 2
2025-07-09 14:43:55,310:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-07-09 14:43:55,310:INFO:create_model() successfully completed......................................
2025-07-09 14:43:55,379:INFO:SubProcess create_model() end ==================================
2025-07-09 14:43:55,379:INFO:Creating metrics dataframe
2025-07-09 14:43:55,386:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-07-09 14:43:55,388:INFO:Initializing create_model()
2025-07-09 14:43:55,388:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025442D33D90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 14:43:55,388:INFO:Checking exceptions
2025-07-09 14:43:55,389:INFO:Importing libraries
2025-07-09 14:43:55,389:INFO:Copying training dataset
2025-07-09 14:43:55,399:INFO:Defining folds
2025-07-09 14:43:55,399:INFO:Declaring metric variables
2025-07-09 14:43:55,399:INFO:Importing untrained model
2025-07-09 14:43:55,399:INFO:Declaring custom model
2025-07-09 14:43:55,400:INFO:Logistic Regression Imported successfully
2025-07-09 14:43:55,402:INFO:Cross validation set to False
2025-07-09 14:43:55,402:INFO:Fitting Model
2025-07-09 14:43:55,512:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-09 14:43:55,512:INFO:create_model() successfully completed......................................
2025-07-09 14:43:55,592:INFO:_master_model_container: 14
2025-07-09 14:43:55,592:INFO:_display_container: 2
2025-07-09 14:43:55,593:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-09 14:43:55,593:INFO:compare_models() successfully completed......................................
2025-07-09 14:43:55,595:INFO:Initializing finalize_model()
2025-07-09 14:43:55,595:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025442D33D90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-09 14:43:55,596:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-09 14:43:55,652:INFO:Initializing create_model()
2025-07-09 14:43:55,652:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025442D33D90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 14:43:55,652:INFO:Checking exceptions
2025-07-09 14:43:55,653:INFO:Importing libraries
2025-07-09 14:43:55,653:INFO:Copying training dataset
2025-07-09 14:43:55,655:INFO:Defining folds
2025-07-09 14:43:55,655:INFO:Declaring metric variables
2025-07-09 14:43:55,655:INFO:Importing untrained model
2025-07-09 14:43:55,655:INFO:Declaring custom model
2025-07-09 14:43:55,660:INFO:Logistic Regression Imported successfully
2025-07-09 14:43:55,671:INFO:Cross validation set to False
2025-07-09 14:43:55,672:INFO:Fitting Model
2025-07-09 14:43:55,864:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-07-09 14:43:55,864:INFO:create_model() successfully completed......................................
2025-07-09 14:43:55,927:INFO:_master_model_container: 14
2025-07-09 14:43:55,927:INFO:_display_container: 2
2025-07-09 14:43:55,937:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-07-09 14:43:55,937:INFO:finalize_model() successfully completed......................................
2025-07-09 14:43:56,022:INFO:Initializing save_model()
2025-07-09 14:43:56,022:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), model_name=C:\Users\flavi\Downloads\Trabalho_Final_VIZ\model\modelo-final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\flavi\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor...
                                    transformer=TargetEncoder(cols=['estadio',
                                                                    'time_mandante',
                                                                    'time_visitante'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-07-09 14:43:56,023:INFO:Adding model into prep_pipe
2025-07-09 14:43:56,023:WARNING:Only Model saved as it was a pipeline.
2025-07-09 14:43:56,032:INFO:C:\Users\flavi\Downloads\Trabalho_Final_VIZ\model\modelo-final.pkl saved in current working directory
2025-07-09 14:43:56,042:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-07-09 14:43:56,043:INFO:save_model() successfully completed......................................
2025-07-09 16:05:53,806:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 16:05:53,807:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 16:05:53,807:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 16:05:53,807:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 16:05:57,807:INFO:PyCaret ClassificationExperiment
2025-07-09 16:05:57,807:INFO:Logging name: clf-default-name
2025-07-09 16:05:57,808:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-09 16:05:57,808:INFO:version 3.3.2
2025-07-09 16:05:57,808:INFO:Initializing setup()
2025-07-09 16:05:57,808:INFO:self.USI: 44f2
2025-07-09 16:05:57,808:INFO:self._variable_keys: {'USI', 'html_param', 'logging_param', 'y', 'gpu_n_jobs_param', 'y_test', 'fix_imbalance', 'seed', '_ml_usecase', 'log_plots_param', 'gpu_param', 'is_multiclass', 'data', 'X_test', 'idx', 'fold_shuffle_param', 'X_train', 'exp_name_log', '_available_plots', 'y_train', 'X', 'fold_generator', 'target_param', 'memory', 'n_jobs_param', 'pipeline', 'exp_id', 'fold_groups_param'}
2025-07-09 16:05:57,808:INFO:Checking environment
2025-07-09 16:05:57,808:INFO:python_version: 3.11.13
2025-07-09 16:05:57,808:INFO:python_build: ('main', 'Jun  5 2025 13:03:15')
2025-07-09 16:05:57,809:INFO:machine: AMD64
2025-07-09 16:05:57,854:INFO:platform: Windows-10-10.0.19045-SP0
2025-07-09 16:05:57,858:INFO:Memory: svmem(total=8459489280, available=459059200, percent=94.6, used=8000430080, free=459059200)
2025-07-09 16:05:57,858:INFO:Physical Core: 2
2025-07-09 16:05:57,859:INFO:Logical Core: 4
2025-07-09 16:05:57,859:INFO:Checking libraries
2025-07-09 16:05:57,859:INFO:System:
2025-07-09 16:05:57,859:INFO:    python: 3.11.13 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:03:15) [MSC v.1929 64 bit (AMD64)]
2025-07-09 16:05:57,859:INFO:executable: C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\python.exe
2025-07-09 16:05:57,859:INFO:   machine: Windows-10-10.0.19045-SP0
2025-07-09 16:05:57,859:INFO:PyCaret required dependencies:
2025-07-09 16:05:57,920:INFO:                 pip: 25.1
2025-07-09 16:05:57,920:INFO:          setuptools: 78.1.1
2025-07-09 16:05:57,920:INFO:             pycaret: 3.3.2
2025-07-09 16:05:57,920:INFO:             IPython: 9.4.0
2025-07-09 16:05:57,920:INFO:          ipywidgets: 8.1.7
2025-07-09 16:05:57,920:INFO:                tqdm: 4.67.1
2025-07-09 16:05:57,920:INFO:               numpy: 1.26.4
2025-07-09 16:05:57,920:INFO:              pandas: 2.1.4
2025-07-09 16:05:57,920:INFO:              jinja2: 3.1.6
2025-07-09 16:05:57,920:INFO:               scipy: 1.11.4
2025-07-09 16:05:57,920:INFO:              joblib: 1.3.2
2025-07-09 16:05:57,920:INFO:             sklearn: 1.4.2
2025-07-09 16:05:57,920:INFO:                pyod: 2.0.5
2025-07-09 16:05:57,921:INFO:            imblearn: 0.13.0
2025-07-09 16:05:57,921:INFO:   category_encoders: 2.7.0
2025-07-09 16:05:57,921:INFO:            lightgbm: 4.6.0
2025-07-09 16:05:57,921:INFO:               numba: 0.61.2
2025-07-09 16:05:57,921:INFO:            requests: 2.32.4
2025-07-09 16:05:57,921:INFO:          matplotlib: 3.7.5
2025-07-09 16:05:57,921:INFO:          scikitplot: 0.3.7
2025-07-09 16:05:57,921:INFO:         yellowbrick: 1.5
2025-07-09 16:05:57,921:INFO:              plotly: 5.24.1
2025-07-09 16:05:57,921:INFO:    plotly-resampler: Not installed
2025-07-09 16:05:57,921:INFO:             kaleido: 1.0.0
2025-07-09 16:05:57,921:INFO:           schemdraw: 0.15
2025-07-09 16:05:57,921:INFO:         statsmodels: 0.14.5
2025-07-09 16:05:57,921:INFO:              sktime: 0.26.0
2025-07-09 16:05:57,921:INFO:               tbats: 1.1.3
2025-07-09 16:05:57,921:INFO:            pmdarima: 2.0.4
2025-07-09 16:05:57,921:INFO:              psutil: 7.0.0
2025-07-09 16:05:57,921:INFO:          markupsafe: 3.0.2
2025-07-09 16:05:57,922:INFO:             pickle5: Not installed
2025-07-09 16:05:57,922:INFO:         cloudpickle: 3.1.1
2025-07-09 16:05:57,922:INFO:         deprecation: 2.1.0
2025-07-09 16:05:57,922:INFO:              xxhash: 3.5.0
2025-07-09 16:05:57,922:INFO:           wurlitzer: Not installed
2025-07-09 16:05:57,922:INFO:PyCaret optional dependencies:
2025-07-09 16:05:57,938:INFO:                shap: Not installed
2025-07-09 16:05:57,938:INFO:           interpret: Not installed
2025-07-09 16:05:57,938:INFO:                umap: Not installed
2025-07-09 16:05:57,939:INFO:     ydata_profiling: Not installed
2025-07-09 16:05:57,939:INFO:  explainerdashboard: Not installed
2025-07-09 16:05:57,939:INFO:             autoviz: Not installed
2025-07-09 16:05:57,939:INFO:           fairlearn: Not installed
2025-07-09 16:05:57,939:INFO:          deepchecks: Not installed
2025-07-09 16:05:57,939:INFO:             xgboost: Not installed
2025-07-09 16:05:57,939:INFO:            catboost: Not installed
2025-07-09 16:05:57,939:INFO:              kmodes: Not installed
2025-07-09 16:05:57,939:INFO:             mlxtend: Not installed
2025-07-09 16:05:57,939:INFO:       statsforecast: Not installed
2025-07-09 16:05:57,940:INFO:        tune_sklearn: Not installed
2025-07-09 16:05:57,940:INFO:                 ray: Not installed
2025-07-09 16:05:57,940:INFO:            hyperopt: Not installed
2025-07-09 16:05:57,940:INFO:              optuna: Not installed
2025-07-09 16:05:57,940:INFO:               skopt: Not installed
2025-07-09 16:05:57,940:INFO:              mlflow: Not installed
2025-07-09 16:05:57,940:INFO:              gradio: Not installed
2025-07-09 16:05:57,940:INFO:             fastapi: Not installed
2025-07-09 16:05:57,941:INFO:             uvicorn: Not installed
2025-07-09 16:05:57,941:INFO:              m2cgen: Not installed
2025-07-09 16:05:57,941:INFO:           evidently: Not installed
2025-07-09 16:05:57,941:INFO:               fugue: Not installed
2025-07-09 16:05:57,941:INFO:           streamlit: 1.46.1
2025-07-09 16:05:57,941:INFO:             prophet: Not installed
2025-07-09 16:05:57,941:INFO:None
2025-07-09 16:05:57,941:INFO:Set up data.
2025-07-09 16:05:57,974:INFO:Set up folding strategy.
2025-07-09 16:05:57,975:INFO:Set up train/test split.
2025-07-09 16:05:58,007:INFO:Set up index.
2025-07-09 16:05:58,007:INFO:Assigning column types.
2025-07-09 16:05:58,017:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-09 16:05:58,098:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-09 16:05:58,104:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-09 16:05:58,153:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:05:58,154:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:05:58,226:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-09 16:05:58,227:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-09 16:05:58,260:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:05:58,260:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:05:58,260:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-09 16:05:58,431:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-09 16:05:58,562:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:05:58,563:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:05:58,646:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-09 16:05:58,701:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:05:58,702:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:05:58,704:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-09 16:05:58,806:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:05:58,806:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:05:58,894:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:05:58,894:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:05:58,911:INFO:Preparing preprocessing pipeline...
2025-07-09 16:05:58,915:INFO:Set up label encoding.
2025-07-09 16:05:58,915:INFO:Set up simple imputation.
2025-07-09 16:05:58,923:INFO:Set up encoding of categorical features.
2025-07-09 16:05:58,923:INFO:Set up feature normalization.
2025-07-09 16:05:59,127:INFO:Finished creating preprocessing pipeline.
2025-07-09 16:05:59,139:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\flavi\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor...
                                    transformer=TargetEncoder(cols=['estadio',
                                                                    'time_mandante',
                                                                    'time_visitante'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-07-09 16:05:59,140:INFO:Creating final display dataframe.
2025-07-09 16:05:59,532:INFO:Setup _display_container:                     Description                        Value
0                    Session id                           42
1                        Target           resultado_ajustado
2                   Target type                   Multiclass
3                Target mapping  Casa: 0, Empate: 1, Fora: 2
4           Original data shape                   (3286, 40)
5        Transformed data shape                   (3286, 31)
6   Transformed train set shape                   (2300, 31)
7    Transformed test set shape                    (986, 31)
8               Ignore features                            9
9              Numeric features                           26
10         Categorical features                            4
11     Rows with missing values                        74.9%
12                   Preprocess                         True
13              Imputation type                       simple
14           Numeric imputation                         mean
15       Categorical imputation                         mode
16     Maximum one-hot encoding                           25
17              Encoding method                         None
18                    Normalize                         True
19             Normalize method                       zscore
20               Fold Generator              StratifiedKFold
21                  Fold Number                           10
22                     CPU Jobs                           -1
23                      Use GPU                        False
24               Log Experiment                        False
25              Experiment Name             clf-default-name
26                          USI                         44f2
2025-07-09 16:05:59,620:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:05:59,620:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:05:59,704:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:05:59,705:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:05:59,706:INFO:setup() successfully completed in 1.91s...............
2025-07-09 16:05:59,707:INFO:Initializing compare_models()
2025-07-09 16:05:59,707:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000195ECD53490>, include=None, exclude=None, fold=5, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000195ECD53490>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-07-09 16:05:59,707:INFO:Checking exceptions
2025-07-09 16:05:59,713:INFO:Preparing display monitor
2025-07-09 16:05:59,722:INFO:Initializing Logistic Regression
2025-07-09 16:05:59,722:INFO:Total runtime is 0.0 minutes
2025-07-09 16:05:59,722:INFO:SubProcess create_model() called ==================================
2025-07-09 16:05:59,722:INFO:Initializing create_model()
2025-07-09 16:05:59,722:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000195ECD53490>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000195ED5CAFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:05:59,723:INFO:Checking exceptions
2025-07-09 16:05:59,723:INFO:Importing libraries
2025-07-09 16:05:59,723:INFO:Copying training dataset
2025-07-09 16:05:59,734:INFO:Defining folds
2025-07-09 16:05:59,734:INFO:Declaring metric variables
2025-07-09 16:05:59,735:INFO:Importing untrained model
2025-07-09 16:05:59,735:INFO:Logistic Regression Imported successfully
2025-07-09 16:05:59,736:INFO:Starting cross validation
2025-07-09 16:05:59,739:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 16:05:59,766:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 16:06:08,034:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:08,040:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:08,044:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:08,050:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:08,051:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:08,056:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:08,058:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:08,060:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:08,063:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:08,065:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:08,068:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:08,070:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:08,144:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:08,153:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:08,158:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:08,163:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:08,168:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:08,172:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:08,177:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:08,306:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:08,313:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:08,325:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:08,330:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:08,335:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:08,449:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:08,454:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:08,464:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:08,467:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:08,470:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:08,483:INFO:Calculating mean and std
2025-07-09 16:06:08,487:INFO:Creating metrics dataframe
2025-07-09 16:06:08,491:INFO:Uploading results into container
2025-07-09 16:06:08,492:INFO:Uploading model into container now
2025-07-09 16:06:08,492:INFO:_master_model_container: 1
2025-07-09 16:06:08,493:INFO:_display_container: 2
2025-07-09 16:06:08,493:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-09 16:06:08,494:INFO:create_model() successfully completed......................................
2025-07-09 16:06:08,603:INFO:SubProcess create_model() end ==================================
2025-07-09 16:06:08,603:INFO:Creating metrics dataframe
2025-07-09 16:06:08,608:INFO:Initializing K Neighbors Classifier
2025-07-09 16:06:08,608:INFO:Total runtime is 0.1481091260910034 minutes
2025-07-09 16:06:08,608:INFO:SubProcess create_model() called ==================================
2025-07-09 16:06:08,609:INFO:Initializing create_model()
2025-07-09 16:06:08,609:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000195ECD53490>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000195ED5CAFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:06:08,609:INFO:Checking exceptions
2025-07-09 16:06:08,609:INFO:Importing libraries
2025-07-09 16:06:08,609:INFO:Copying training dataset
2025-07-09 16:06:08,630:INFO:Defining folds
2025-07-09 16:06:08,630:INFO:Declaring metric variables
2025-07-09 16:06:08,630:INFO:Importing untrained model
2025-07-09 16:06:08,631:INFO:K Neighbors Classifier Imported successfully
2025-07-09 16:06:08,631:INFO:Starting cross validation
2025-07-09 16:06:08,635:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 16:06:08,643:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 16:06:09,282:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 16:06:09,287:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:09,289:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 16:06:09,291:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:09,293:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:09,297:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:09,298:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:09,303:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:09,304:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:09,307:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:09,308:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:09,311:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:09,312:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:09,313:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:09,315:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:09,316:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:09,316:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:09,319:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:09,321:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:09,322:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:09,323:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:09,586:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:09,596:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:09,599:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:09,601:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:09,619:INFO:Calculating mean and std
2025-07-09 16:06:09,620:INFO:Creating metrics dataframe
2025-07-09 16:06:09,623:INFO:Uploading results into container
2025-07-09 16:06:09,624:INFO:Uploading model into container now
2025-07-09 16:06:09,624:INFO:_master_model_container: 2
2025-07-09 16:06:09,624:INFO:_display_container: 2
2025-07-09 16:06:09,624:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-07-09 16:06:09,624:INFO:create_model() successfully completed......................................
2025-07-09 16:06:09,710:INFO:SubProcess create_model() end ==================================
2025-07-09 16:06:09,710:INFO:Creating metrics dataframe
2025-07-09 16:06:09,715:INFO:Initializing Naive Bayes
2025-07-09 16:06:09,716:INFO:Total runtime is 0.1665763974189758 minutes
2025-07-09 16:06:09,716:INFO:SubProcess create_model() called ==================================
2025-07-09 16:06:09,716:INFO:Initializing create_model()
2025-07-09 16:06:09,716:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000195ECD53490>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000195ED5CAFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:06:09,716:INFO:Checking exceptions
2025-07-09 16:06:09,716:INFO:Importing libraries
2025-07-09 16:06:09,716:INFO:Copying training dataset
2025-07-09 16:06:09,729:INFO:Defining folds
2025-07-09 16:06:09,730:INFO:Declaring metric variables
2025-07-09 16:06:09,730:INFO:Importing untrained model
2025-07-09 16:06:09,730:INFO:Naive Bayes Imported successfully
2025-07-09 16:06:09,731:INFO:Starting cross validation
2025-07-09 16:06:09,734:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 16:06:09,740:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 16:06:09,965:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 16:06:09,969:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 16:06:09,969:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:09,972:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:09,973:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:09,977:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:09,977:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:09,979:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:09,981:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:09,985:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:09,986:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:09,987:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:09,988:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:09,994:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:09,995:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:10,002:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:10,184:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:10,189:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:10,193:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:10,209:INFO:Calculating mean and std
2025-07-09 16:06:10,211:INFO:Creating metrics dataframe
2025-07-09 16:06:10,216:INFO:Uploading results into container
2025-07-09 16:06:10,218:INFO:Uploading model into container now
2025-07-09 16:06:10,219:INFO:_master_model_container: 3
2025-07-09 16:06:10,220:INFO:_display_container: 2
2025-07-09 16:06:10,220:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-07-09 16:06:10,220:INFO:create_model() successfully completed......................................
2025-07-09 16:06:10,302:INFO:SubProcess create_model() end ==================================
2025-07-09 16:06:10,302:INFO:Creating metrics dataframe
2025-07-09 16:06:10,305:INFO:Initializing Decision Tree Classifier
2025-07-09 16:06:10,305:INFO:Total runtime is 0.17638731002807614 minutes
2025-07-09 16:06:10,305:INFO:SubProcess create_model() called ==================================
2025-07-09 16:06:10,305:INFO:Initializing create_model()
2025-07-09 16:06:10,305:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000195ECD53490>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000195ED5CAFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:06:10,305:INFO:Checking exceptions
2025-07-09 16:06:10,305:INFO:Importing libraries
2025-07-09 16:06:10,306:INFO:Copying training dataset
2025-07-09 16:06:10,315:INFO:Defining folds
2025-07-09 16:06:10,316:INFO:Declaring metric variables
2025-07-09 16:06:10,316:INFO:Importing untrained model
2025-07-09 16:06:10,316:INFO:Decision Tree Classifier Imported successfully
2025-07-09 16:06:10,316:INFO:Starting cross validation
2025-07-09 16:06:10,319:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 16:06:10,322:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 16:06:10,596:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 16:06:10,596:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 16:06:10,599:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:10,600:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:10,602:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:10,603:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:10,604:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:10,604:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:10,608:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:10,610:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:10,611:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:10,611:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:10,613:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:10,617:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:10,617:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:10,619:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:10,620:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:10,622:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:10,767:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:10,771:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:10,773:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:10,775:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:10,784:INFO:Calculating mean and std
2025-07-09 16:06:10,786:INFO:Creating metrics dataframe
2025-07-09 16:06:10,788:INFO:Uploading results into container
2025-07-09 16:06:10,788:INFO:Uploading model into container now
2025-07-09 16:06:10,788:INFO:_master_model_container: 4
2025-07-09 16:06:10,789:INFO:_display_container: 2
2025-07-09 16:06:10,789:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-07-09 16:06:10,789:INFO:create_model() successfully completed......................................
2025-07-09 16:06:10,854:INFO:SubProcess create_model() end ==================================
2025-07-09 16:06:10,854:INFO:Creating metrics dataframe
2025-07-09 16:06:10,858:INFO:Initializing SVM - Linear Kernel
2025-07-09 16:06:10,858:INFO:Total runtime is 0.18560489018758136 minutes
2025-07-09 16:06:10,858:INFO:SubProcess create_model() called ==================================
2025-07-09 16:06:10,858:INFO:Initializing create_model()
2025-07-09 16:06:10,858:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000195ECD53490>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000195ED5CAFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:06:10,858:INFO:Checking exceptions
2025-07-09 16:06:10,858:INFO:Importing libraries
2025-07-09 16:06:10,858:INFO:Copying training dataset
2025-07-09 16:06:10,869:INFO:Defining folds
2025-07-09 16:06:10,869:INFO:Declaring metric variables
2025-07-09 16:06:10,869:INFO:Importing untrained model
2025-07-09 16:06:10,870:INFO:SVM - Linear Kernel Imported successfully
2025-07-09 16:06:10,870:INFO:Starting cross validation
2025-07-09 16:06:10,871:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 16:06:10,875:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 16:06:11,136:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:11,140:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:11,140:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:11,144:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:11,145:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:11,149:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:11,149:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:11,150:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:11,153:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:11,153:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:11,154:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:11,154:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:11,157:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:11,159:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:11,159:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:11,162:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:11,163:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:11,163:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:11,165:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:11,167:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:11,167:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:11,169:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:11,170:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:11,172:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:11,317:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:11,319:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:11,324:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:11,326:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:11,328:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:11,337:INFO:Calculating mean and std
2025-07-09 16:06:11,338:INFO:Creating metrics dataframe
2025-07-09 16:06:11,339:INFO:Uploading results into container
2025-07-09 16:06:11,340:INFO:Uploading model into container now
2025-07-09 16:06:11,340:INFO:_master_model_container: 5
2025-07-09 16:06:11,340:INFO:_display_container: 2
2025-07-09 16:06:11,341:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-07-09 16:06:11,341:INFO:create_model() successfully completed......................................
2025-07-09 16:06:11,406:INFO:SubProcess create_model() end ==================================
2025-07-09 16:06:11,407:INFO:Creating metrics dataframe
2025-07-09 16:06:11,409:INFO:Initializing Ridge Classifier
2025-07-09 16:06:11,409:INFO:Total runtime is 0.194782547156016 minutes
2025-07-09 16:06:11,409:INFO:SubProcess create_model() called ==================================
2025-07-09 16:06:11,410:INFO:Initializing create_model()
2025-07-09 16:06:11,410:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000195ECD53490>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000195ED5CAFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:06:11,410:INFO:Checking exceptions
2025-07-09 16:06:11,410:INFO:Importing libraries
2025-07-09 16:06:11,410:INFO:Copying training dataset
2025-07-09 16:06:11,419:INFO:Defining folds
2025-07-09 16:06:11,420:INFO:Declaring metric variables
2025-07-09 16:06:11,420:INFO:Importing untrained model
2025-07-09 16:06:11,420:INFO:Ridge Classifier Imported successfully
2025-07-09 16:06:11,420:INFO:Starting cross validation
2025-07-09 16:06:11,422:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 16:06:11,426:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 16:06:11,655:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:11,658:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:11,659:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:11,661:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:11,661:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:11,665:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:11,666:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:11,669:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:11,670:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:11,670:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:11,673:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:11,674:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:11,675:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:11,677:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:11,679:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:11,680:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:11,686:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:11,691:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:11,693:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:11,696:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:11,697:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:11,700:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:11,702:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:11,705:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:11,817:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:11,820:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:11,824:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:11,827:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:11,830:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:11,851:INFO:Calculating mean and std
2025-07-09 16:06:11,852:INFO:Creating metrics dataframe
2025-07-09 16:06:11,854:INFO:Uploading results into container
2025-07-09 16:06:11,856:INFO:Uploading model into container now
2025-07-09 16:06:11,856:INFO:_master_model_container: 6
2025-07-09 16:06:11,856:INFO:_display_container: 2
2025-07-09 16:06:11,857:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-07-09 16:06:11,857:INFO:create_model() successfully completed......................................
2025-07-09 16:06:11,931:INFO:SubProcess create_model() end ==================================
2025-07-09 16:06:11,931:INFO:Creating metrics dataframe
2025-07-09 16:06:11,936:INFO:Initializing Random Forest Classifier
2025-07-09 16:06:11,937:INFO:Total runtime is 0.20357081095377602 minutes
2025-07-09 16:06:11,937:INFO:SubProcess create_model() called ==================================
2025-07-09 16:06:11,937:INFO:Initializing create_model()
2025-07-09 16:06:11,937:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000195ECD53490>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000195ED5CAFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:06:11,937:INFO:Checking exceptions
2025-07-09 16:06:11,938:INFO:Importing libraries
2025-07-09 16:06:11,938:INFO:Copying training dataset
2025-07-09 16:06:11,954:INFO:Defining folds
2025-07-09 16:06:11,954:INFO:Declaring metric variables
2025-07-09 16:06:11,954:INFO:Importing untrained model
2025-07-09 16:06:11,954:INFO:Random Forest Classifier Imported successfully
2025-07-09 16:06:11,955:INFO:Starting cross validation
2025-07-09 16:06:11,956:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 16:06:11,960:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 16:06:13,071:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 16:06:13,076:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:13,081:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:13,086:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:13,086:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 16:06:13,095:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:13,096:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:13,100:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:13,105:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:13,113:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:13,124:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:13,135:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:13,142:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:13,149:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:13,169:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:13,177:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:13,181:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:13,185:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:13,263:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:13,268:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:13,270:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:13,273:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:13,612:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:13,616:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:13,619:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:13,621:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:13,638:INFO:Calculating mean and std
2025-07-09 16:06:13,639:INFO:Creating metrics dataframe
2025-07-09 16:06:13,643:INFO:Uploading results into container
2025-07-09 16:06:13,644:INFO:Uploading model into container now
2025-07-09 16:06:13,645:INFO:_master_model_container: 7
2025-07-09 16:06:13,645:INFO:_display_container: 2
2025-07-09 16:06:13,646:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-07-09 16:06:13,646:INFO:create_model() successfully completed......................................
2025-07-09 16:06:13,725:INFO:SubProcess create_model() end ==================================
2025-07-09 16:06:13,725:INFO:Creating metrics dataframe
2025-07-09 16:06:13,728:INFO:Initializing Quadratic Discriminant Analysis
2025-07-09 16:06:13,729:INFO:Total runtime is 0.23344588279724118 minutes
2025-07-09 16:06:13,729:INFO:SubProcess create_model() called ==================================
2025-07-09 16:06:13,729:INFO:Initializing create_model()
2025-07-09 16:06:13,729:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000195ECD53490>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000195ED5CAFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:06:13,729:INFO:Checking exceptions
2025-07-09 16:06:13,729:INFO:Importing libraries
2025-07-09 16:06:13,729:INFO:Copying training dataset
2025-07-09 16:06:13,738:INFO:Defining folds
2025-07-09 16:06:13,739:INFO:Declaring metric variables
2025-07-09 16:06:13,739:INFO:Importing untrained model
2025-07-09 16:06:13,739:INFO:Quadratic Discriminant Analysis Imported successfully
2025-07-09 16:06:13,739:INFO:Starting cross validation
2025-07-09 16:06:13,741:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 16:06:13,744:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 16:06:13,918:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-09 16:06:13,918:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-09 16:06:13,923:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-09 16:06:13,978:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:13,980:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:13,982:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:13,984:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:13,984:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:13,987:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:13,988:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:13,989:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:13,990:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:13,991:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:13,992:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:13,993:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:13,995:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:13,996:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:13,997:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:13,998:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:14,000:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:14,002:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:14,003:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:14,006:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:14,007:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:14,007:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:14,101:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-09 16:06:14,137:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:14,140:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:14,144:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:14,147:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:14,149:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:14,161:INFO:Calculating mean and std
2025-07-09 16:06:14,163:INFO:Creating metrics dataframe
2025-07-09 16:06:14,166:INFO:Uploading results into container
2025-07-09 16:06:14,167:INFO:Uploading model into container now
2025-07-09 16:06:14,167:INFO:_master_model_container: 8
2025-07-09 16:06:14,167:INFO:_display_container: 2
2025-07-09 16:06:14,168:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-07-09 16:06:14,168:INFO:create_model() successfully completed......................................
2025-07-09 16:06:14,241:INFO:SubProcess create_model() end ==================================
2025-07-09 16:06:14,241:INFO:Creating metrics dataframe
2025-07-09 16:06:14,244:INFO:Initializing Ada Boost Classifier
2025-07-09 16:06:14,245:INFO:Total runtime is 0.2420538226763407 minutes
2025-07-09 16:06:14,245:INFO:SubProcess create_model() called ==================================
2025-07-09 16:06:14,245:INFO:Initializing create_model()
2025-07-09 16:06:14,245:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000195ECD53490>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000195ED5CAFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:06:14,245:INFO:Checking exceptions
2025-07-09 16:06:14,245:INFO:Importing libraries
2025-07-09 16:06:14,245:INFO:Copying training dataset
2025-07-09 16:06:14,255:INFO:Defining folds
2025-07-09 16:06:14,255:INFO:Declaring metric variables
2025-07-09 16:06:14,255:INFO:Importing untrained model
2025-07-09 16:06:14,255:INFO:Ada Boost Classifier Imported successfully
2025-07-09 16:06:14,256:INFO:Starting cross validation
2025-07-09 16:06:14,257:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 16:06:14,260:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 16:06:14,412:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-09 16:06:14,426:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-09 16:06:14,427:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-09 16:06:14,461:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-09 16:06:14,824:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:14,826:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:14,828:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:14,829:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:14,833:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:14,835:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:14,837:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:14,839:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:14,842:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:14,844:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:14,846:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:14,846:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:14,848:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:14,849:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:14,851:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:14,853:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:14,857:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:14,861:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:14,861:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:14,865:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:14,866:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:14,875:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:14,881:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:14,886:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:15,004:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-09 16:06:15,328:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:15,330:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:15,335:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:15,338:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:15,340:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:15,351:INFO:Calculating mean and std
2025-07-09 16:06:15,352:INFO:Creating metrics dataframe
2025-07-09 16:06:15,354:INFO:Uploading results into container
2025-07-09 16:06:15,354:INFO:Uploading model into container now
2025-07-09 16:06:15,355:INFO:_master_model_container: 9
2025-07-09 16:06:15,355:INFO:_display_container: 2
2025-07-09 16:06:15,355:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-07-09 16:06:15,355:INFO:create_model() successfully completed......................................
2025-07-09 16:06:15,420:INFO:SubProcess create_model() end ==================================
2025-07-09 16:06:15,420:INFO:Creating metrics dataframe
2025-07-09 16:06:15,423:INFO:Initializing Gradient Boosting Classifier
2025-07-09 16:06:15,423:INFO:Total runtime is 0.26168545087178546 minutes
2025-07-09 16:06:15,423:INFO:SubProcess create_model() called ==================================
2025-07-09 16:06:15,423:INFO:Initializing create_model()
2025-07-09 16:06:15,424:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000195ECD53490>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000195ED5CAFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:06:15,424:INFO:Checking exceptions
2025-07-09 16:06:15,424:INFO:Importing libraries
2025-07-09 16:06:15,424:INFO:Copying training dataset
2025-07-09 16:06:15,434:INFO:Defining folds
2025-07-09 16:06:15,434:INFO:Declaring metric variables
2025-07-09 16:06:15,434:INFO:Importing untrained model
2025-07-09 16:06:15,435:INFO:Gradient Boosting Classifier Imported successfully
2025-07-09 16:06:15,435:INFO:Starting cross validation
2025-07-09 16:06:15,437:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 16:06:15,440:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 16:06:18,223:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:18,227:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:18,232:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:18,236:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:18,237:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:18,241:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:18,244:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:18,244:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:18,245:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:18,250:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:18,254:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:18,259:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:18,265:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:18,267:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:18,271:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:18,271:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:18,279:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:18,288:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:20,297:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:20,299:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:20,304:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:20,308:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:20,318:INFO:Calculating mean and std
2025-07-09 16:06:20,321:INFO:Creating metrics dataframe
2025-07-09 16:06:20,324:INFO:Uploading results into container
2025-07-09 16:06:20,325:INFO:Uploading model into container now
2025-07-09 16:06:20,326:INFO:_master_model_container: 10
2025-07-09 16:06:20,326:INFO:_display_container: 2
2025-07-09 16:06:20,327:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-07-09 16:06:20,327:INFO:create_model() successfully completed......................................
2025-07-09 16:06:20,393:INFO:SubProcess create_model() end ==================================
2025-07-09 16:06:20,394:INFO:Creating metrics dataframe
2025-07-09 16:06:20,396:INFO:Initializing Linear Discriminant Analysis
2025-07-09 16:06:20,396:INFO:Total runtime is 0.344575023651123 minutes
2025-07-09 16:06:20,396:INFO:SubProcess create_model() called ==================================
2025-07-09 16:06:20,397:INFO:Initializing create_model()
2025-07-09 16:06:20,397:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000195ECD53490>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000195ED5CAFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:06:20,397:INFO:Checking exceptions
2025-07-09 16:06:20,397:INFO:Importing libraries
2025-07-09 16:06:20,397:INFO:Copying training dataset
2025-07-09 16:06:20,407:INFO:Defining folds
2025-07-09 16:06:20,408:INFO:Declaring metric variables
2025-07-09 16:06:20,408:INFO:Importing untrained model
2025-07-09 16:06:20,408:INFO:Linear Discriminant Analysis Imported successfully
2025-07-09 16:06:20,408:INFO:Starting cross validation
2025-07-09 16:06:20,410:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 16:06:20,413:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 16:06:20,636:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:20,639:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:20,639:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:20,640:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:20,641:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:20,643:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:20,644:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:20,647:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:20,647:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:20,648:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:20,650:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:20,651:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:20,653:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:20,655:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:20,655:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:20,656:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:20,658:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:20,660:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:20,660:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:20,664:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:20,787:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:06:20,789:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:20,794:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:20,798:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:20,810:INFO:Calculating mean and std
2025-07-09 16:06:20,811:INFO:Creating metrics dataframe
2025-07-09 16:06:20,813:INFO:Uploading results into container
2025-07-09 16:06:20,813:INFO:Uploading model into container now
2025-07-09 16:06:20,813:INFO:_master_model_container: 11
2025-07-09 16:06:20,813:INFO:_display_container: 2
2025-07-09 16:06:20,814:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-07-09 16:06:20,814:INFO:create_model() successfully completed......................................
2025-07-09 16:06:20,880:INFO:SubProcess create_model() end ==================================
2025-07-09 16:06:20,880:INFO:Creating metrics dataframe
2025-07-09 16:06:20,883:INFO:Initializing Extra Trees Classifier
2025-07-09 16:06:20,883:INFO:Total runtime is 0.35268102486928304 minutes
2025-07-09 16:06:20,883:INFO:SubProcess create_model() called ==================================
2025-07-09 16:06:20,883:INFO:Initializing create_model()
2025-07-09 16:06:20,883:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000195ECD53490>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000195ED5CAFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:06:20,884:INFO:Checking exceptions
2025-07-09 16:06:20,884:INFO:Importing libraries
2025-07-09 16:06:20,884:INFO:Copying training dataset
2025-07-09 16:06:20,894:INFO:Defining folds
2025-07-09 16:06:20,894:INFO:Declaring metric variables
2025-07-09 16:06:20,894:INFO:Importing untrained model
2025-07-09 16:06:20,894:INFO:Extra Trees Classifier Imported successfully
2025-07-09 16:06:20,895:INFO:Starting cross validation
2025-07-09 16:06:20,896:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 16:06:20,899:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 16:06:21,679:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 16:06:21,685:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:21,690:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:21,694:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:21,698:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 16:06:21,699:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:21,703:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:21,704:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:21,708:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:21,712:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:21,712:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:21,717:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:21,721:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:21,725:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:21,737:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:21,745:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:21,750:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:21,754:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:21,807:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:21,812:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:21,815:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:21,817:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:22,272:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:22,277:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:22,279:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:22,281:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:22,293:INFO:Calculating mean and std
2025-07-09 16:06:22,295:INFO:Creating metrics dataframe
2025-07-09 16:06:22,297:INFO:Uploading results into container
2025-07-09 16:06:22,297:INFO:Uploading model into container now
2025-07-09 16:06:22,298:INFO:_master_model_container: 12
2025-07-09 16:06:22,298:INFO:_display_container: 2
2025-07-09 16:06:22,298:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-07-09 16:06:22,298:INFO:create_model() successfully completed......................................
2025-07-09 16:06:22,366:INFO:SubProcess create_model() end ==================================
2025-07-09 16:06:22,367:INFO:Creating metrics dataframe
2025-07-09 16:06:22,372:INFO:Initializing Light Gradient Boosting Machine
2025-07-09 16:06:22,373:INFO:Total runtime is 0.37751612265904744 minutes
2025-07-09 16:06:22,373:INFO:SubProcess create_model() called ==================================
2025-07-09 16:06:22,373:INFO:Initializing create_model()
2025-07-09 16:06:22,373:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000195ECD53490>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000195ED5CAFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:06:22,373:INFO:Checking exceptions
2025-07-09 16:06:22,373:INFO:Importing libraries
2025-07-09 16:06:22,373:INFO:Copying training dataset
2025-07-09 16:06:22,383:INFO:Defining folds
2025-07-09 16:06:22,384:INFO:Declaring metric variables
2025-07-09 16:06:22,384:INFO:Importing untrained model
2025-07-09 16:06:22,386:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-09 16:06:22,386:INFO:Starting cross validation
2025-07-09 16:06:22,388:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 16:06:22,392:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 16:06:24,282:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:24,291:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:24,296:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:24,296:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:24,300:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:24,305:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:24,310:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:24,314:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:24,341:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 16:06:24,345:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:24,351:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:24,357:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:24,364:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:24,369:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:24,375:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:24,396:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 16:06:24,399:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:24,402:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:24,406:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:24,414:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:25,070:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:25,082:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:25,088:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:25,092:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:25,111:INFO:Calculating mean and std
2025-07-09 16:06:25,113:INFO:Creating metrics dataframe
2025-07-09 16:06:25,115:INFO:Uploading results into container
2025-07-09 16:06:25,116:INFO:Uploading model into container now
2025-07-09 16:06:25,120:INFO:_master_model_container: 13
2025-07-09 16:06:25,121:INFO:_display_container: 2
2025-07-09 16:06:25,124:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-09 16:06:25,124:INFO:create_model() successfully completed......................................
2025-07-09 16:06:25,428:INFO:SubProcess create_model() end ==================================
2025-07-09 16:06:25,428:INFO:Creating metrics dataframe
2025-07-09 16:06:25,433:INFO:Initializing Dummy Classifier
2025-07-09 16:06:25,433:INFO:Total runtime is 0.4285232702891032 minutes
2025-07-09 16:06:25,433:INFO:SubProcess create_model() called ==================================
2025-07-09 16:06:25,434:INFO:Initializing create_model()
2025-07-09 16:06:25,434:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000195ECD53490>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000195ED5CAFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:06:25,434:INFO:Checking exceptions
2025-07-09 16:06:25,434:INFO:Importing libraries
2025-07-09 16:06:25,434:INFO:Copying training dataset
2025-07-09 16:06:25,465:INFO:Defining folds
2025-07-09 16:06:25,466:INFO:Declaring metric variables
2025-07-09 16:06:25,466:INFO:Importing untrained model
2025-07-09 16:06:25,466:INFO:Dummy Classifier Imported successfully
2025-07-09 16:06:25,467:INFO:Starting cross validation
2025-07-09 16:06:25,470:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 16:06:25,474:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 16:06:25,706:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:25,707:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 16:06:25,710:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 16:06:25,711:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:25,714:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:25,715:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:25,716:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:25,719:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:25,720:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:25,721:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:25,724:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:25,724:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:25,725:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:25,728:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:25,729:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:25,729:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:25,732:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:25,733:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:25,738:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:25,738:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:25,742:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:25,747:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:25,870:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:25,874:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:25,877:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:06:25,879:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:06:25,893:INFO:Calculating mean and std
2025-07-09 16:06:25,894:INFO:Creating metrics dataframe
2025-07-09 16:06:25,895:INFO:Uploading results into container
2025-07-09 16:06:25,896:INFO:Uploading model into container now
2025-07-09 16:06:25,896:INFO:_master_model_container: 14
2025-07-09 16:06:25,896:INFO:_display_container: 2
2025-07-09 16:06:25,897:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-07-09 16:06:25,897:INFO:create_model() successfully completed......................................
2025-07-09 16:06:25,964:INFO:SubProcess create_model() end ==================================
2025-07-09 16:06:25,964:INFO:Creating metrics dataframe
2025-07-09 16:06:25,973:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-07-09 16:06:25,975:INFO:Initializing create_model()
2025-07-09 16:06:25,975:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000195ECD53490>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:06:25,975:INFO:Checking exceptions
2025-07-09 16:06:25,975:INFO:Importing libraries
2025-07-09 16:06:25,976:INFO:Copying training dataset
2025-07-09 16:06:25,986:INFO:Defining folds
2025-07-09 16:06:25,987:INFO:Declaring metric variables
2025-07-09 16:06:25,987:INFO:Importing untrained model
2025-07-09 16:06:25,987:INFO:Declaring custom model
2025-07-09 16:06:25,987:INFO:Logistic Regression Imported successfully
2025-07-09 16:06:25,990:INFO:Cross validation set to False
2025-07-09 16:06:25,990:INFO:Fitting Model
2025-07-09 16:06:26,100:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-09 16:06:26,100:INFO:create_model() successfully completed......................................
2025-07-09 16:06:26,182:INFO:_master_model_container: 14
2025-07-09 16:06:26,182:INFO:_display_container: 2
2025-07-09 16:06:26,182:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-09 16:06:26,182:INFO:compare_models() successfully completed......................................
2025-07-09 16:06:26,187:INFO:Initializing finalize_model()
2025-07-09 16:06:26,187:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000195ECD53490>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-09 16:06:26,187:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-09 16:06:26,197:INFO:Initializing create_model()
2025-07-09 16:06:26,197:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000195ECD53490>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:06:26,197:INFO:Checking exceptions
2025-07-09 16:06:26,198:INFO:Importing libraries
2025-07-09 16:06:26,198:INFO:Copying training dataset
2025-07-09 16:06:26,199:INFO:Defining folds
2025-07-09 16:06:26,199:INFO:Declaring metric variables
2025-07-09 16:06:26,199:INFO:Importing untrained model
2025-07-09 16:06:26,199:INFO:Declaring custom model
2025-07-09 16:06:26,200:INFO:Logistic Regression Imported successfully
2025-07-09 16:06:26,202:INFO:Cross validation set to False
2025-07-09 16:06:26,202:INFO:Fitting Model
2025-07-09 16:06:26,376:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-07-09 16:06:26,376:INFO:create_model() successfully completed......................................
2025-07-09 16:06:26,438:INFO:_master_model_container: 14
2025-07-09 16:06:26,438:INFO:_display_container: 2
2025-07-09 16:06:26,448:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-07-09 16:06:26,448:INFO:finalize_model() successfully completed......................................
2025-07-09 16:06:26,535:INFO:Initializing save_model()
2025-07-09 16:06:26,536:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), model_name=C:\Users\flavi\Downloads\Trabalho_Final_VIZ\model\modelo-final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\flavi\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor...
                                    transformer=TargetEncoder(cols=['estadio',
                                                                    'time_mandante',
                                                                    'time_visitante'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-07-09 16:06:26,536:INFO:Adding model into prep_pipe
2025-07-09 16:06:26,536:WARNING:Only Model saved as it was a pipeline.
2025-07-09 16:06:26,545:INFO:C:\Users\flavi\Downloads\Trabalho_Final_VIZ\model\modelo-final.pkl saved in current working directory
2025-07-09 16:06:26,556:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-07-09 16:06:26,556:INFO:save_model() successfully completed......................................
2025-07-09 16:33:14,982:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 16:33:14,982:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 16:33:14,983:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 16:33:14,983:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-09 16:33:18,662:INFO:PyCaret ClassificationExperiment
2025-07-09 16:33:18,662:INFO:Logging name: clf-default-name
2025-07-09 16:33:18,662:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-07-09 16:33:18,662:INFO:version 3.3.2
2025-07-09 16:33:18,663:INFO:Initializing setup()
2025-07-09 16:33:18,663:INFO:self.USI: 3a36
2025-07-09 16:33:18,663:INFO:self._variable_keys: {'exp_id', 'X_test', 'gpu_param', 'log_plots_param', 'fold_shuffle_param', 'exp_name_log', 'seed', '_ml_usecase', 'data', 'logging_param', 'pipeline', 'y', 'gpu_n_jobs_param', 'y_train', 'X', 'fold_generator', 'X_train', 'y_test', 'html_param', 'n_jobs_param', '_available_plots', 'target_param', 'idx', 'is_multiclass', 'fold_groups_param', 'fix_imbalance', 'memory', 'USI'}
2025-07-09 16:33:18,663:INFO:Checking environment
2025-07-09 16:33:18,663:INFO:python_version: 3.11.13
2025-07-09 16:33:18,664:INFO:python_build: ('main', 'Jun  5 2025 13:03:15')
2025-07-09 16:33:18,664:INFO:machine: AMD64
2025-07-09 16:33:18,707:INFO:platform: Windows-10-10.0.19045-SP0
2025-07-09 16:33:18,711:INFO:Memory: svmem(total=8459489280, available=1198227456, percent=85.8, used=7261261824, free=1198227456)
2025-07-09 16:33:18,711:INFO:Physical Core: 2
2025-07-09 16:33:18,711:INFO:Logical Core: 4
2025-07-09 16:33:18,711:INFO:Checking libraries
2025-07-09 16:33:18,711:INFO:System:
2025-07-09 16:33:18,711:INFO:    python: 3.11.13 | packaged by Anaconda, Inc. | (main, Jun  5 2025, 13:03:15) [MSC v.1929 64 bit (AMD64)]
2025-07-09 16:33:18,711:INFO:executable: C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\python.exe
2025-07-09 16:33:18,711:INFO:   machine: Windows-10-10.0.19045-SP0
2025-07-09 16:33:18,711:INFO:PyCaret required dependencies:
2025-07-09 16:33:18,780:INFO:                 pip: 25.1
2025-07-09 16:33:18,780:INFO:          setuptools: 78.1.1
2025-07-09 16:33:18,780:INFO:             pycaret: 3.3.2
2025-07-09 16:33:18,780:INFO:             IPython: 9.4.0
2025-07-09 16:33:18,781:INFO:          ipywidgets: 8.1.7
2025-07-09 16:33:18,781:INFO:                tqdm: 4.67.1
2025-07-09 16:33:18,781:INFO:               numpy: 1.26.4
2025-07-09 16:33:18,781:INFO:              pandas: 2.1.4
2025-07-09 16:33:18,781:INFO:              jinja2: 3.1.6
2025-07-09 16:33:18,781:INFO:               scipy: 1.11.4
2025-07-09 16:33:18,781:INFO:              joblib: 1.3.2
2025-07-09 16:33:18,781:INFO:             sklearn: 1.4.2
2025-07-09 16:33:18,781:INFO:                pyod: 2.0.5
2025-07-09 16:33:18,781:INFO:            imblearn: 0.13.0
2025-07-09 16:33:18,781:INFO:   category_encoders: 2.7.0
2025-07-09 16:33:18,781:INFO:            lightgbm: 4.6.0
2025-07-09 16:33:18,781:INFO:               numba: 0.61.2
2025-07-09 16:33:18,781:INFO:            requests: 2.32.4
2025-07-09 16:33:18,781:INFO:          matplotlib: 3.7.5
2025-07-09 16:33:18,781:INFO:          scikitplot: 0.3.7
2025-07-09 16:33:18,781:INFO:         yellowbrick: 1.5
2025-07-09 16:33:18,781:INFO:              plotly: 5.24.1
2025-07-09 16:33:18,781:INFO:    plotly-resampler: Not installed
2025-07-09 16:33:18,782:INFO:             kaleido: 1.0.0
2025-07-09 16:33:18,782:INFO:           schemdraw: 0.15
2025-07-09 16:33:18,782:INFO:         statsmodels: 0.14.5
2025-07-09 16:33:18,782:INFO:              sktime: 0.26.0
2025-07-09 16:33:18,782:INFO:               tbats: 1.1.3
2025-07-09 16:33:18,782:INFO:            pmdarima: 2.0.4
2025-07-09 16:33:18,782:INFO:              psutil: 7.0.0
2025-07-09 16:33:18,782:INFO:          markupsafe: 3.0.2
2025-07-09 16:33:18,782:INFO:             pickle5: Not installed
2025-07-09 16:33:18,782:INFO:         cloudpickle: 3.1.1
2025-07-09 16:33:18,782:INFO:         deprecation: 2.1.0
2025-07-09 16:33:18,782:INFO:              xxhash: 3.5.0
2025-07-09 16:33:18,782:INFO:           wurlitzer: Not installed
2025-07-09 16:33:18,782:INFO:PyCaret optional dependencies:
2025-07-09 16:33:18,801:INFO:                shap: Not installed
2025-07-09 16:33:18,801:INFO:           interpret: Not installed
2025-07-09 16:33:18,801:INFO:                umap: Not installed
2025-07-09 16:33:18,801:INFO:     ydata_profiling: Not installed
2025-07-09 16:33:18,801:INFO:  explainerdashboard: Not installed
2025-07-09 16:33:18,801:INFO:             autoviz: Not installed
2025-07-09 16:33:18,802:INFO:           fairlearn: Not installed
2025-07-09 16:33:18,802:INFO:          deepchecks: Not installed
2025-07-09 16:33:18,802:INFO:             xgboost: Not installed
2025-07-09 16:33:18,802:INFO:            catboost: Not installed
2025-07-09 16:33:18,802:INFO:              kmodes: Not installed
2025-07-09 16:33:18,802:INFO:             mlxtend: Not installed
2025-07-09 16:33:18,802:INFO:       statsforecast: Not installed
2025-07-09 16:33:18,802:INFO:        tune_sklearn: Not installed
2025-07-09 16:33:18,802:INFO:                 ray: Not installed
2025-07-09 16:33:18,802:INFO:            hyperopt: Not installed
2025-07-09 16:33:18,802:INFO:              optuna: Not installed
2025-07-09 16:33:18,802:INFO:               skopt: Not installed
2025-07-09 16:33:18,802:INFO:              mlflow: Not installed
2025-07-09 16:33:18,802:INFO:              gradio: Not installed
2025-07-09 16:33:18,803:INFO:             fastapi: Not installed
2025-07-09 16:33:18,803:INFO:             uvicorn: Not installed
2025-07-09 16:33:18,803:INFO:              m2cgen: Not installed
2025-07-09 16:33:18,803:INFO:           evidently: Not installed
2025-07-09 16:33:18,803:INFO:               fugue: Not installed
2025-07-09 16:33:18,803:INFO:           streamlit: 1.46.1
2025-07-09 16:33:18,803:INFO:             prophet: Not installed
2025-07-09 16:33:18,803:INFO:None
2025-07-09 16:33:18,803:INFO:Set up data.
2025-07-09 16:33:18,832:INFO:Set up folding strategy.
2025-07-09 16:33:18,832:INFO:Set up train/test split.
2025-07-09 16:33:18,872:INFO:Set up index.
2025-07-09 16:33:18,873:INFO:Assigning column types.
2025-07-09 16:33:18,883:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-09 16:33:18,937:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-09 16:33:18,943:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-09 16:33:18,997:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:33:18,997:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:33:19,054:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-09 16:33:19,055:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-09 16:33:19,098:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:33:19,099:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:33:19,099:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-09 16:33:19,188:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-09 16:33:19,283:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:33:19,283:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:33:19,362:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-07-09 16:33:19,408:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:33:19,408:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:33:19,409:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-07-09 16:33:19,553:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:33:19,553:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:33:19,658:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:33:19,659:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:33:19,672:INFO:Preparing preprocessing pipeline...
2025-07-09 16:33:19,680:INFO:Set up label encoding.
2025-07-09 16:33:19,680:INFO:Set up simple imputation.
2025-07-09 16:33:19,687:INFO:Set up encoding of categorical features.
2025-07-09 16:33:19,687:INFO:Set up feature normalization.
2025-07-09 16:33:19,913:INFO:Finished creating preprocessing pipeline.
2025-07-09 16:33:19,928:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\flavi\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor...
                                    transformer=TargetEncoder(cols=['estadio',
                                                                    'time_mandante',
                                                                    'time_visitante'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-07-09 16:33:19,928:INFO:Creating final display dataframe.
2025-07-09 16:33:20,379:INFO:Setup _display_container:                     Description                        Value
0                    Session id                           42
1                        Target           resultado_ajustado
2                   Target type                   Multiclass
3                Target mapping  Casa: 0, Empate: 1, Fora: 2
4           Original data shape                   (3286, 40)
5        Transformed data shape                   (3286, 31)
6   Transformed train set shape                   (2300, 31)
7    Transformed test set shape                    (986, 31)
8               Ignore features                            9
9              Numeric features                           26
10         Categorical features                            4
11     Rows with missing values                        74.9%
12                   Preprocess                         True
13              Imputation type                       simple
14           Numeric imputation                         mean
15       Categorical imputation                         mode
16     Maximum one-hot encoding                           25
17              Encoding method                         None
18                    Normalize                         True
19             Normalize method                       zscore
20               Fold Generator              StratifiedKFold
21                  Fold Number                           10
22                     CPU Jobs                           -1
23                      Use GPU                        False
24               Log Experiment                        False
25              Experiment Name             clf-default-name
26                          USI                         3a36
2025-07-09 16:33:20,459:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:33:20,459:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:33:20,540:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:33:20,540:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-09 16:33:20,543:INFO:setup() successfully completed in 1.89s...............
2025-07-09 16:33:20,543:INFO:Initializing compare_models()
2025-07-09 16:33:20,543:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F5D56729D0>, include=None, exclude=None, fold=5, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F5D56729D0>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-07-09 16:33:20,544:INFO:Checking exceptions
2025-07-09 16:33:20,551:INFO:Preparing display monitor
2025-07-09 16:33:20,561:INFO:Initializing Logistic Regression
2025-07-09 16:33:20,561:INFO:Total runtime is 0.0 minutes
2025-07-09 16:33:20,561:INFO:SubProcess create_model() called ==================================
2025-07-09 16:33:20,561:INFO:Initializing create_model()
2025-07-09 16:33:20,562:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F5D56729D0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5D5D67250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:33:20,562:INFO:Checking exceptions
2025-07-09 16:33:20,562:INFO:Importing libraries
2025-07-09 16:33:20,562:INFO:Copying training dataset
2025-07-09 16:33:20,575:INFO:Defining folds
2025-07-09 16:33:20,575:INFO:Declaring metric variables
2025-07-09 16:33:20,576:INFO:Importing untrained model
2025-07-09 16:33:20,576:INFO:Logistic Regression Imported successfully
2025-07-09 16:33:20,576:INFO:Starting cross validation
2025-07-09 16:33:20,579:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 16:33:20,617:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 4 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 16:33:28,383:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:28,390:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:28,396:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:28,400:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:28,401:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:28,404:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:28,406:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:28,409:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:28,411:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:28,411:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:28,416:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:28,417:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:28,425:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:28,430:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:28,435:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:28,615:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:28,620:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:28,626:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:28,629:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:28,631:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:28,700:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:28,702:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:28,707:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:28,709:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:28,712:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:28,730:INFO:Calculating mean and std
2025-07-09 16:33:28,739:INFO:Creating metrics dataframe
2025-07-09 16:33:28,747:INFO:Uploading results into container
2025-07-09 16:33:28,747:INFO:Uploading model into container now
2025-07-09 16:33:28,748:INFO:_master_model_container: 1
2025-07-09 16:33:28,748:INFO:_display_container: 2
2025-07-09 16:33:28,748:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-09 16:33:28,748:INFO:create_model() successfully completed......................................
2025-07-09 16:33:28,824:INFO:SubProcess create_model() end ==================================
2025-07-09 16:33:28,824:INFO:Creating metrics dataframe
2025-07-09 16:33:28,826:INFO:Initializing K Neighbors Classifier
2025-07-09 16:33:28,827:INFO:Total runtime is 0.13775603771209716 minutes
2025-07-09 16:33:28,827:INFO:SubProcess create_model() called ==================================
2025-07-09 16:33:28,827:INFO:Initializing create_model()
2025-07-09 16:33:28,827:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F5D56729D0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5D5D67250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:33:28,827:INFO:Checking exceptions
2025-07-09 16:33:28,827:INFO:Importing libraries
2025-07-09 16:33:28,827:INFO:Copying training dataset
2025-07-09 16:33:28,838:INFO:Defining folds
2025-07-09 16:33:28,838:INFO:Declaring metric variables
2025-07-09 16:33:28,838:INFO:Importing untrained model
2025-07-09 16:33:28,839:INFO:K Neighbors Classifier Imported successfully
2025-07-09 16:33:28,839:INFO:Starting cross validation
2025-07-09 16:33:28,840:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 16:33:28,845:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 4 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 16:33:29,361:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 16:33:29,363:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:29,366:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:29,369:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:29,372:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:29,374:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:29,378:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:29,390:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:29,391:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:29,392:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:29,398:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:29,400:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:29,400:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:29,402:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:29,404:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:29,405:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:29,406:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:29,408:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:29,409:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:29,564:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:29,569:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:29,572:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:29,574:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:29,590:INFO:Calculating mean and std
2025-07-09 16:33:29,593:INFO:Creating metrics dataframe
2025-07-09 16:33:29,599:INFO:Uploading results into container
2025-07-09 16:33:29,601:INFO:Uploading model into container now
2025-07-09 16:33:29,602:INFO:_master_model_container: 2
2025-07-09 16:33:29,602:INFO:_display_container: 2
2025-07-09 16:33:29,603:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-07-09 16:33:29,603:INFO:create_model() successfully completed......................................
2025-07-09 16:33:29,676:INFO:SubProcess create_model() end ==================================
2025-07-09 16:33:29,676:INFO:Creating metrics dataframe
2025-07-09 16:33:29,708:INFO:Initializing Naive Bayes
2025-07-09 16:33:29,708:INFO:Total runtime is 0.15245019197463988 minutes
2025-07-09 16:33:29,709:INFO:SubProcess create_model() called ==================================
2025-07-09 16:33:29,709:INFO:Initializing create_model()
2025-07-09 16:33:29,709:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F5D56729D0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5D5D67250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:33:29,710:INFO:Checking exceptions
2025-07-09 16:33:29,710:INFO:Importing libraries
2025-07-09 16:33:29,710:INFO:Copying training dataset
2025-07-09 16:33:29,721:INFO:Defining folds
2025-07-09 16:33:29,721:INFO:Declaring metric variables
2025-07-09 16:33:29,722:INFO:Importing untrained model
2025-07-09 16:33:29,722:INFO:Naive Bayes Imported successfully
2025-07-09 16:33:29,722:INFO:Starting cross validation
2025-07-09 16:33:29,723:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 16:33:29,727:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 4 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 16:33:30,149:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 16:33:30,165:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:30,184:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:30,185:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:30,188:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:30,195:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:30,195:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:30,200:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:30,200:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:30,206:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:30,209:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:30,210:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:30,211:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:30,214:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:30,219:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:30,345:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:30,349:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:30,354:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:30,362:INFO:Calculating mean and std
2025-07-09 16:33:30,363:INFO:Creating metrics dataframe
2025-07-09 16:33:30,365:INFO:Uploading results into container
2025-07-09 16:33:30,365:INFO:Uploading model into container now
2025-07-09 16:33:30,366:INFO:_master_model_container: 3
2025-07-09 16:33:30,366:INFO:_display_container: 2
2025-07-09 16:33:30,366:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-07-09 16:33:30,366:INFO:create_model() successfully completed......................................
2025-07-09 16:33:30,431:INFO:SubProcess create_model() end ==================================
2025-07-09 16:33:30,431:INFO:Creating metrics dataframe
2025-07-09 16:33:30,434:INFO:Initializing Decision Tree Classifier
2025-07-09 16:33:30,434:INFO:Total runtime is 0.16455323696136473 minutes
2025-07-09 16:33:30,434:INFO:SubProcess create_model() called ==================================
2025-07-09 16:33:30,434:INFO:Initializing create_model()
2025-07-09 16:33:30,434:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F5D56729D0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5D5D67250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:33:30,434:INFO:Checking exceptions
2025-07-09 16:33:30,434:INFO:Importing libraries
2025-07-09 16:33:30,434:INFO:Copying training dataset
2025-07-09 16:33:30,444:INFO:Defining folds
2025-07-09 16:33:30,444:INFO:Declaring metric variables
2025-07-09 16:33:30,444:INFO:Importing untrained model
2025-07-09 16:33:30,445:INFO:Decision Tree Classifier Imported successfully
2025-07-09 16:33:30,445:INFO:Starting cross validation
2025-07-09 16:33:30,446:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 16:33:30,451:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 4 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 16:33:30,738:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 16:33:30,744:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:30,748:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:30,748:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:30,749:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:30,750:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:30,754:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:30,757:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:30,757:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:30,759:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:30,763:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:30,763:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:30,766:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:30,915:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:30,920:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:30,922:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:30,924:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:30,937:INFO:Calculating mean and std
2025-07-09 16:33:30,939:INFO:Creating metrics dataframe
2025-07-09 16:33:30,943:INFO:Uploading results into container
2025-07-09 16:33:30,944:INFO:Uploading model into container now
2025-07-09 16:33:30,944:INFO:_master_model_container: 4
2025-07-09 16:33:30,944:INFO:_display_container: 2
2025-07-09 16:33:30,945:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-07-09 16:33:30,945:INFO:create_model() successfully completed......................................
2025-07-09 16:33:31,012:INFO:SubProcess create_model() end ==================================
2025-07-09 16:33:31,012:INFO:Creating metrics dataframe
2025-07-09 16:33:31,016:INFO:Initializing SVM - Linear Kernel
2025-07-09 16:33:31,016:INFO:Total runtime is 0.17424828608830767 minutes
2025-07-09 16:33:31,016:INFO:SubProcess create_model() called ==================================
2025-07-09 16:33:31,016:INFO:Initializing create_model()
2025-07-09 16:33:31,016:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F5D56729D0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5D5D67250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:33:31,016:INFO:Checking exceptions
2025-07-09 16:33:31,016:INFO:Importing libraries
2025-07-09 16:33:31,016:INFO:Copying training dataset
2025-07-09 16:33:31,025:INFO:Defining folds
2025-07-09 16:33:31,025:INFO:Declaring metric variables
2025-07-09 16:33:31,025:INFO:Importing untrained model
2025-07-09 16:33:31,026:INFO:SVM - Linear Kernel Imported successfully
2025-07-09 16:33:31,026:INFO:Starting cross validation
2025-07-09 16:33:31,027:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 16:33:31,031:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 4 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 16:33:31,293:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:31,297:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:31,299:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:31,303:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:31,305:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:31,308:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:31,309:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:31,312:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:31,313:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:31,317:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:31,320:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:31,321:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:31,324:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:31,326:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:31,330:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:31,333:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:31,334:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:31,337:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:31,341:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:31,342:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:31,350:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:31,506:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:31,508:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:31,513:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:31,518:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:31,534:INFO:Calculating mean and std
2025-07-09 16:33:31,535:INFO:Creating metrics dataframe
2025-07-09 16:33:31,538:INFO:Uploading results into container
2025-07-09 16:33:31,538:INFO:Uploading model into container now
2025-07-09 16:33:31,539:INFO:_master_model_container: 5
2025-07-09 16:33:31,539:INFO:_display_container: 2
2025-07-09 16:33:31,540:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-07-09 16:33:31,540:INFO:create_model() successfully completed......................................
2025-07-09 16:33:31,618:INFO:SubProcess create_model() end ==================================
2025-07-09 16:33:31,618:INFO:Creating metrics dataframe
2025-07-09 16:33:31,621:INFO:Initializing Ridge Classifier
2025-07-09 16:33:31,621:INFO:Total runtime is 0.18433359066645302 minutes
2025-07-09 16:33:31,622:INFO:SubProcess create_model() called ==================================
2025-07-09 16:33:31,622:INFO:Initializing create_model()
2025-07-09 16:33:31,622:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F5D56729D0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5D5D67250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:33:31,622:INFO:Checking exceptions
2025-07-09 16:33:31,622:INFO:Importing libraries
2025-07-09 16:33:31,622:INFO:Copying training dataset
2025-07-09 16:33:31,633:INFO:Defining folds
2025-07-09 16:33:31,633:INFO:Declaring metric variables
2025-07-09 16:33:31,633:INFO:Importing untrained model
2025-07-09 16:33:31,634:INFO:Ridge Classifier Imported successfully
2025-07-09 16:33:31,634:INFO:Starting cross validation
2025-07-09 16:33:31,636:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 16:33:31,641:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 4 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 16:33:31,881:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:31,883:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:31,885:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:31,885:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:31,887:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:31,887:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:31,889:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:31,891:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:31,893:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:31,895:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:31,896:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:31,896:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:31,898:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:31,899:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:31,900:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:31,900:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:31,901:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:31,903:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:31,904:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:31,904:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:31,908:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:31,913:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:32,059:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:32,061:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:32,066:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:32,069:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:32,072:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:32,084:INFO:Calculating mean and std
2025-07-09 16:33:32,085:INFO:Creating metrics dataframe
2025-07-09 16:33:32,087:INFO:Uploading results into container
2025-07-09 16:33:32,087:INFO:Uploading model into container now
2025-07-09 16:33:32,087:INFO:_master_model_container: 6
2025-07-09 16:33:32,087:INFO:_display_container: 2
2025-07-09 16:33:32,088:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-07-09 16:33:32,088:INFO:create_model() successfully completed......................................
2025-07-09 16:33:32,154:INFO:SubProcess create_model() end ==================================
2025-07-09 16:33:32,154:INFO:Creating metrics dataframe
2025-07-09 16:33:32,156:INFO:Initializing Random Forest Classifier
2025-07-09 16:33:32,157:INFO:Total runtime is 0.19326647122701007 minutes
2025-07-09 16:33:32,157:INFO:SubProcess create_model() called ==================================
2025-07-09 16:33:32,157:INFO:Initializing create_model()
2025-07-09 16:33:32,157:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F5D56729D0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5D5D67250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:33:32,157:INFO:Checking exceptions
2025-07-09 16:33:32,157:INFO:Importing libraries
2025-07-09 16:33:32,157:INFO:Copying training dataset
2025-07-09 16:33:32,167:INFO:Defining folds
2025-07-09 16:33:32,167:INFO:Declaring metric variables
2025-07-09 16:33:32,167:INFO:Importing untrained model
2025-07-09 16:33:32,168:INFO:Random Forest Classifier Imported successfully
2025-07-09 16:33:32,168:INFO:Starting cross validation
2025-07-09 16:33:32,169:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 16:33:32,173:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 4 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 16:33:33,150:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:33,168:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:33,170:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:33,175:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:33,176:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:33,180:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:33,181:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:33,182:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 16:33:33,184:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:33,186:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:33,191:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:33,195:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:33,200:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:33,205:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:33,211:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:33,217:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:33,223:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:33,226:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:33,228:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:33,663:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:33,669:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:33,675:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:33,679:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:33,692:INFO:Calculating mean and std
2025-07-09 16:33:33,695:INFO:Creating metrics dataframe
2025-07-09 16:33:33,698:INFO:Uploading results into container
2025-07-09 16:33:33,699:INFO:Uploading model into container now
2025-07-09 16:33:33,700:INFO:_master_model_container: 7
2025-07-09 16:33:33,700:INFO:_display_container: 2
2025-07-09 16:33:33,701:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-07-09 16:33:33,701:INFO:create_model() successfully completed......................................
2025-07-09 16:33:33,770:INFO:SubProcess create_model() end ==================================
2025-07-09 16:33:33,770:INFO:Creating metrics dataframe
2025-07-09 16:33:33,772:INFO:Initializing Quadratic Discriminant Analysis
2025-07-09 16:33:33,772:INFO:Total runtime is 0.22019181648890176 minutes
2025-07-09 16:33:33,773:INFO:SubProcess create_model() called ==================================
2025-07-09 16:33:33,773:INFO:Initializing create_model()
2025-07-09 16:33:33,773:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F5D56729D0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5D5D67250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:33:33,773:INFO:Checking exceptions
2025-07-09 16:33:33,773:INFO:Importing libraries
2025-07-09 16:33:33,773:INFO:Copying training dataset
2025-07-09 16:33:33,783:INFO:Defining folds
2025-07-09 16:33:33,784:INFO:Declaring metric variables
2025-07-09 16:33:33,784:INFO:Importing untrained model
2025-07-09 16:33:33,784:INFO:Quadratic Discriminant Analysis Imported successfully
2025-07-09 16:33:33,784:INFO:Starting cross validation
2025-07-09 16:33:33,786:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 16:33:33,790:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 4 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 16:33:33,980:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-09 16:33:33,981:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-09 16:33:33,982:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-09 16:33:34,056:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:34,057:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:34,057:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:34,060:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:34,060:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:34,060:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:34,061:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:34,066:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:34,067:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:34,068:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:34,070:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:34,072:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:34,072:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:34,072:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:34,075:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:34,075:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:34,075:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:34,079:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:34,083:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:34,179:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-07-09 16:33:34,215:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:34,217:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:34,221:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:34,224:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:34,226:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:34,242:INFO:Calculating mean and std
2025-07-09 16:33:34,244:INFO:Creating metrics dataframe
2025-07-09 16:33:34,248:INFO:Uploading results into container
2025-07-09 16:33:34,248:INFO:Uploading model into container now
2025-07-09 16:33:34,249:INFO:_master_model_container: 8
2025-07-09 16:33:34,249:INFO:_display_container: 2
2025-07-09 16:33:34,250:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-07-09 16:33:34,250:INFO:create_model() successfully completed......................................
2025-07-09 16:33:34,317:INFO:SubProcess create_model() end ==================================
2025-07-09 16:33:34,317:INFO:Creating metrics dataframe
2025-07-09 16:33:34,320:INFO:Initializing Ada Boost Classifier
2025-07-09 16:33:34,320:INFO:Total runtime is 0.2293151299158732 minutes
2025-07-09 16:33:34,320:INFO:SubProcess create_model() called ==================================
2025-07-09 16:33:34,320:INFO:Initializing create_model()
2025-07-09 16:33:34,320:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F5D56729D0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5D5D67250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:33:34,320:INFO:Checking exceptions
2025-07-09 16:33:34,320:INFO:Importing libraries
2025-07-09 16:33:34,320:INFO:Copying training dataset
2025-07-09 16:33:34,330:INFO:Defining folds
2025-07-09 16:33:34,331:INFO:Declaring metric variables
2025-07-09 16:33:34,331:INFO:Importing untrained model
2025-07-09 16:33:34,331:INFO:Ada Boost Classifier Imported successfully
2025-07-09 16:33:34,331:INFO:Starting cross validation
2025-07-09 16:33:34,333:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 16:33:34,337:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 4 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 16:33:34,487:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-09 16:33:34,487:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-09 16:33:34,488:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-09 16:33:34,490:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-09 16:33:34,876:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:34,880:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:34,884:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:34,885:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:34,887:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:34,888:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:34,889:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:34,891:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:34,895:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:34,897:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:34,898:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:34,901:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:34,902:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:34,903:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:34,905:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:34,906:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:34,907:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:34,912:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:34,916:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:34,921:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:34,926:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:34,929:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:34,994:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-07-09 16:33:35,235:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:35,237:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:35,243:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:35,245:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:35,247:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:35,256:INFO:Calculating mean and std
2025-07-09 16:33:35,257:INFO:Creating metrics dataframe
2025-07-09 16:33:35,259:INFO:Uploading results into container
2025-07-09 16:33:35,259:INFO:Uploading model into container now
2025-07-09 16:33:35,260:INFO:_master_model_container: 9
2025-07-09 16:33:35,260:INFO:_display_container: 2
2025-07-09 16:33:35,260:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-07-09 16:33:35,260:INFO:create_model() successfully completed......................................
2025-07-09 16:33:35,325:INFO:SubProcess create_model() end ==================================
2025-07-09 16:33:35,325:INFO:Creating metrics dataframe
2025-07-09 16:33:35,328:INFO:Initializing Gradient Boosting Classifier
2025-07-09 16:33:35,328:INFO:Total runtime is 0.24612336953481037 minutes
2025-07-09 16:33:35,328:INFO:SubProcess create_model() called ==================================
2025-07-09 16:33:35,328:INFO:Initializing create_model()
2025-07-09 16:33:35,329:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F5D56729D0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5D5D67250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:33:35,329:INFO:Checking exceptions
2025-07-09 16:33:35,329:INFO:Importing libraries
2025-07-09 16:33:35,329:INFO:Copying training dataset
2025-07-09 16:33:35,338:INFO:Defining folds
2025-07-09 16:33:35,339:INFO:Declaring metric variables
2025-07-09 16:33:35,339:INFO:Importing untrained model
2025-07-09 16:33:35,339:INFO:Gradient Boosting Classifier Imported successfully
2025-07-09 16:33:35,339:INFO:Starting cross validation
2025-07-09 16:33:35,342:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 16:33:35,345:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 4 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 16:33:38,069:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:38,073:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:38,077:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:38,077:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:38,080:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:38,081:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:38,085:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:38,089:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:38,089:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:38,094:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:38,096:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:38,098:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:38,101:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:38,102:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:38,104:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:38,106:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:38,115:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:38,120:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:38,123:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:40,005:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:40,007:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:40,011:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:40,013:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:40,016:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:40,024:INFO:Calculating mean and std
2025-07-09 16:33:40,025:INFO:Creating metrics dataframe
2025-07-09 16:33:40,027:INFO:Uploading results into container
2025-07-09 16:33:40,027:INFO:Uploading model into container now
2025-07-09 16:33:40,028:INFO:_master_model_container: 10
2025-07-09 16:33:40,028:INFO:_display_container: 2
2025-07-09 16:33:40,028:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-07-09 16:33:40,028:INFO:create_model() successfully completed......................................
2025-07-09 16:33:40,095:INFO:SubProcess create_model() end ==================================
2025-07-09 16:33:40,095:INFO:Creating metrics dataframe
2025-07-09 16:33:40,098:INFO:Initializing Linear Discriminant Analysis
2025-07-09 16:33:40,098:INFO:Total runtime is 0.3256143609682719 minutes
2025-07-09 16:33:40,098:INFO:SubProcess create_model() called ==================================
2025-07-09 16:33:40,098:INFO:Initializing create_model()
2025-07-09 16:33:40,098:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F5D56729D0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5D5D67250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:33:40,098:INFO:Checking exceptions
2025-07-09 16:33:40,098:INFO:Importing libraries
2025-07-09 16:33:40,098:INFO:Copying training dataset
2025-07-09 16:33:40,108:INFO:Defining folds
2025-07-09 16:33:40,108:INFO:Declaring metric variables
2025-07-09 16:33:40,108:INFO:Importing untrained model
2025-07-09 16:33:40,108:INFO:Linear Discriminant Analysis Imported successfully
2025-07-09 16:33:40,109:INFO:Starting cross validation
2025-07-09 16:33:40,110:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 16:33:40,113:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 4 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 16:33:40,332:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:40,332:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:40,332:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:40,336:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:40,336:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:40,336:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:40,339:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:40,340:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:40,343:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:40,344:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:40,344:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:40,347:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:40,348:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:40,351:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:40,351:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:40,352:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:40,355:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:40,474:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-07-09 16:33:40,477:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:40,482:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:40,485:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:40,498:INFO:Calculating mean and std
2025-07-09 16:33:40,499:INFO:Creating metrics dataframe
2025-07-09 16:33:40,503:INFO:Uploading results into container
2025-07-09 16:33:40,503:INFO:Uploading model into container now
2025-07-09 16:33:40,504:INFO:_master_model_container: 11
2025-07-09 16:33:40,504:INFO:_display_container: 2
2025-07-09 16:33:40,504:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-07-09 16:33:40,504:INFO:create_model() successfully completed......................................
2025-07-09 16:33:40,570:INFO:SubProcess create_model() end ==================================
2025-07-09 16:33:40,570:INFO:Creating metrics dataframe
2025-07-09 16:33:40,573:INFO:Initializing Extra Trees Classifier
2025-07-09 16:33:40,573:INFO:Total runtime is 0.3335405230522156 minutes
2025-07-09 16:33:40,573:INFO:SubProcess create_model() called ==================================
2025-07-09 16:33:40,573:INFO:Initializing create_model()
2025-07-09 16:33:40,573:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F5D56729D0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5D5D67250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:33:40,573:INFO:Checking exceptions
2025-07-09 16:33:40,573:INFO:Importing libraries
2025-07-09 16:33:40,574:INFO:Copying training dataset
2025-07-09 16:33:40,584:INFO:Defining folds
2025-07-09 16:33:40,584:INFO:Declaring metric variables
2025-07-09 16:33:40,584:INFO:Importing untrained model
2025-07-09 16:33:40,584:INFO:Extra Trees Classifier Imported successfully
2025-07-09 16:33:40,585:INFO:Starting cross validation
2025-07-09 16:33:40,586:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 16:33:40,589:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 4 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 16:33:41,358:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:41,361:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:41,374:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:41,375:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:41,379:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:41,379:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:41,382:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:41,383:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:41,433:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 16:33:41,437:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:41,441:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:41,446:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:41,451:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:41,456:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:41,461:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:41,483:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:41,491:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:41,495:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:41,498:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:41,846:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:41,852:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:41,855:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:41,857:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:41,868:INFO:Calculating mean and std
2025-07-09 16:33:41,869:INFO:Creating metrics dataframe
2025-07-09 16:33:41,871:INFO:Uploading results into container
2025-07-09 16:33:41,871:INFO:Uploading model into container now
2025-07-09 16:33:41,871:INFO:_master_model_container: 12
2025-07-09 16:33:41,872:INFO:_display_container: 2
2025-07-09 16:33:41,872:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-07-09 16:33:41,872:INFO:create_model() successfully completed......................................
2025-07-09 16:33:41,937:INFO:SubProcess create_model() end ==================================
2025-07-09 16:33:41,937:INFO:Creating metrics dataframe
2025-07-09 16:33:41,940:INFO:Initializing Light Gradient Boosting Machine
2025-07-09 16:33:41,940:INFO:Total runtime is 0.35632227261861166 minutes
2025-07-09 16:33:41,940:INFO:SubProcess create_model() called ==================================
2025-07-09 16:33:41,941:INFO:Initializing create_model()
2025-07-09 16:33:41,941:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F5D56729D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5D5D67250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:33:41,941:INFO:Checking exceptions
2025-07-09 16:33:41,941:INFO:Importing libraries
2025-07-09 16:33:41,941:INFO:Copying training dataset
2025-07-09 16:33:41,951:INFO:Defining folds
2025-07-09 16:33:41,951:INFO:Declaring metric variables
2025-07-09 16:33:41,951:INFO:Importing untrained model
2025-07-09 16:33:41,952:INFO:Light Gradient Boosting Machine Imported successfully
2025-07-09 16:33:41,952:INFO:Starting cross validation
2025-07-09 16:33:41,954:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 16:33:41,957:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 4 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 16:33:43,541:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:43,546:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:43,549:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:43,554:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:43,554:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:43,557:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:43,558:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:43,562:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:43,571:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:43,578:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:43,583:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:43,586:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:43,623:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 16:33:43,627:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:43,631:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:43,635:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:43,640:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:43,644:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:43,649:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:44,390:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:44,400:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:44,405:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:44,410:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:44,429:INFO:Calculating mean and std
2025-07-09 16:33:44,431:INFO:Creating metrics dataframe
2025-07-09 16:33:44,434:INFO:Uploading results into container
2025-07-09 16:33:44,435:INFO:Uploading model into container now
2025-07-09 16:33:44,436:INFO:_master_model_container: 13
2025-07-09 16:33:44,436:INFO:_display_container: 2
2025-07-09 16:33:44,438:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-07-09 16:33:44,438:INFO:create_model() successfully completed......................................
2025-07-09 16:33:44,519:INFO:SubProcess create_model() end ==================================
2025-07-09 16:33:44,519:INFO:Creating metrics dataframe
2025-07-09 16:33:44,522:INFO:Initializing Dummy Classifier
2025-07-09 16:33:44,522:INFO:Total runtime is 0.39935295581817626 minutes
2025-07-09 16:33:44,522:INFO:SubProcess create_model() called ==================================
2025-07-09 16:33:44,522:INFO:Initializing create_model()
2025-07-09 16:33:44,522:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F5D56729D0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F5D5D67250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:33:44,522:INFO:Checking exceptions
2025-07-09 16:33:44,522:INFO:Importing libraries
2025-07-09 16:33:44,522:INFO:Copying training dataset
2025-07-09 16:33:44,532:INFO:Defining folds
2025-07-09 16:33:44,532:INFO:Declaring metric variables
2025-07-09 16:33:44,533:INFO:Importing untrained model
2025-07-09 16:33:44,533:INFO:Dummy Classifier Imported successfully
2025-07-09 16:33:44,533:INFO:Starting cross validation
2025-07-09 16:33:44,535:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-07-09 16:33:44,538:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 4 members, which is less than n_splits=5.
  warnings.warn(

2025-07-09 16:33:44,739:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-07-09 16:33:44,743:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:44,749:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:44,751:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:44,751:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:44,755:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:44,761:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:44,762:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:44,766:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:44,766:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:44,766:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:44,769:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:44,770:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:44,771:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:44,773:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:44,776:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:44,783:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:44,786:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:44,789:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:44,895:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:44,899:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:44,901:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-07-09 16:33:44,903:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Fora') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-07-09 16:33:44,915:INFO:Calculating mean and std
2025-07-09 16:33:44,918:INFO:Creating metrics dataframe
2025-07-09 16:33:44,922:INFO:Uploading results into container
2025-07-09 16:33:44,923:INFO:Uploading model into container now
2025-07-09 16:33:44,923:INFO:_master_model_container: 14
2025-07-09 16:33:44,923:INFO:_display_container: 2
2025-07-09 16:33:44,924:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-07-09 16:33:44,924:INFO:create_model() successfully completed......................................
2025-07-09 16:33:44,990:INFO:SubProcess create_model() end ==================================
2025-07-09 16:33:44,991:INFO:Creating metrics dataframe
2025-07-09 16:33:44,997:WARNING:C:\ProgramData\miniconda3\envs\meu_ambiente_pycaret\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-07-09 16:33:44,999:INFO:Initializing create_model()
2025-07-09 16:33:44,999:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F5D56729D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:33:44,999:INFO:Checking exceptions
2025-07-09 16:33:45,000:INFO:Importing libraries
2025-07-09 16:33:45,000:INFO:Copying training dataset
2025-07-09 16:33:45,010:INFO:Defining folds
2025-07-09 16:33:45,010:INFO:Declaring metric variables
2025-07-09 16:33:45,010:INFO:Importing untrained model
2025-07-09 16:33:45,010:INFO:Declaring custom model
2025-07-09 16:33:45,010:INFO:Logistic Regression Imported successfully
2025-07-09 16:33:45,012:INFO:Cross validation set to False
2025-07-09 16:33:45,012:INFO:Fitting Model
2025-07-09 16:33:45,120:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-09 16:33:45,120:INFO:create_model() successfully completed......................................
2025-07-09 16:33:45,202:INFO:_master_model_container: 14
2025-07-09 16:33:45,202:INFO:_display_container: 2
2025-07-09 16:33:45,203:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-09 16:33:45,203:INFO:compare_models() successfully completed......................................
2025-07-09 16:33:45,204:INFO:Initializing finalize_model()
2025-07-09 16:33:45,204:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F5D56729D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-09 16:33:45,205:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-07-09 16:33:45,215:INFO:Initializing create_model()
2025-07-09 16:33:45,215:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F5D56729D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-09 16:33:45,215:INFO:Checking exceptions
2025-07-09 16:33:45,216:INFO:Importing libraries
2025-07-09 16:33:45,216:INFO:Copying training dataset
2025-07-09 16:33:45,217:INFO:Defining folds
2025-07-09 16:33:45,217:INFO:Declaring metric variables
2025-07-09 16:33:45,217:INFO:Importing untrained model
2025-07-09 16:33:45,217:INFO:Declaring custom model
2025-07-09 16:33:45,218:INFO:Logistic Regression Imported successfully
2025-07-09 16:33:45,220:INFO:Cross validation set to False
2025-07-09 16:33:45,220:INFO:Fitting Model
2025-07-09 16:33:45,396:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-07-09 16:33:45,396:INFO:create_model() successfully completed......................................
2025-07-09 16:33:45,460:INFO:_master_model_container: 14
2025-07-09 16:33:45,460:INFO:_display_container: 2
2025-07-09 16:33:45,470:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-07-09 16:33:45,470:INFO:finalize_model() successfully completed......................................
2025-07-09 16:33:45,550:INFO:Initializing save_model()
2025-07-09 16:33:45,550:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), model_name=C:\Users\flavi\Downloads\Trabalho_Final_VIZ\model\modelo-final, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\flavi\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor...
                                    transformer=TargetEncoder(cols=['estadio',
                                                                    'time_mandante',
                                                                    'time_visitante'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-07-09 16:33:45,550:INFO:Adding model into prep_pipe
2025-07-09 16:33:45,550:WARNING:Only Model saved as it was a pipeline.
2025-07-09 16:33:45,559:INFO:C:\Users\flavi\Downloads\Trabalho_Final_VIZ\model\modelo-final.pkl saved in current working directory
2025-07-09 16:33:45,570:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['rodada', 'publico',
                                             'colocacao_mandante',
                                             'colocacao_visitante',
                                             'valor_equipe_titular_mandante',
                                             'valor_equipe_titular_visitante',
                                             'idade_media_...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=42,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-07-09 16:33:45,570:INFO:save_model() successfully completed......................................
